{"version":3,"file":"assets/js/be94ed75.7df9dbcc.js","mappings":"8JAUe,SAASA,EAAWC,GAA2B,IAA1B,SAAEC,EAAQ,SAAEC,GAAWF,EAEvD,OADkBG,EAAAA,EAAAA,MAOPC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAJ,SAAGA,QAEPC,GAAY,IACvB,C,sMCrBA,MAAMI,GAEC,MAAMC,UAAsBD,EAC/BE,WAAAA,CAAYC,EAAQC,EAASC,GACzBC,QACAC,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKF,QAAUA,CACnB,EAEG,MAAMG,UAAqBR,EAC9BE,WAAAA,CAAYC,EAAQM,GAChBH,QACAC,KAAKJ,OAASA,EACdI,KAAKE,OAASA,CAClB,EAKG,MAAMC,EACTR,WAAAA,GACI,CAEJ,kBAAOS,GACH,OAAOD,EAAuBE,QAClC,CACAC,OAAAA,CAAQC,GACJ,OAAOA,GAASA,IAAUP,KAAKO,KACnC,CACAC,SAAAA,CAAUD,GACFP,KAAKM,QAAQC,KACbP,KAAKO,WAAQE,EACbT,KAAKU,UAAOD,EAEpB,CACAE,OAAAA,CAAQJ,GACJ,GAAIP,KAAKM,QAAQC,GACb,OAAOP,KAAKU,IAGpB,CACAE,OAAAA,CAAQF,EAAMH,GACNA,IACAP,KAAKU,KAAOA,EACZV,KAAKO,MAAQA,EAErB,EAGG,SAASM,IACZ,MAAMC,EAAgBX,EAAuBC,cAE7C,GADqBU,EAAcR,QAAQZ,EAAcqB,WAIzD,OAAOD,EAAcH,QAAQjB,EAAcqB,WAAW,EAC1D,CACO,SAASC,IACZ,MAAMC,EAAed,EAAuBC,cAE5C,GADqBa,EAAaX,QAAQL,EAAac,WAIvD,OAAOE,EAAaN,QAAQV,EAAac,WAAW,EACxD,CCjEO,IAAIG,ECAAC,EFiDXhB,EAAuBE,SAAW,IAAIF,EChDtC,SAAWe,GACPA,EAAME,IAAM,WAAkB,IAAD,IAAAC,EAAAC,UAAAC,OAAbnC,EAAQ,IAAAoC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAARrC,EAAQqC,GAAAH,UAAAG,GACpB,OAAQC,IACJ,MAAMC,EAAcvC,EAASwC,KAAKC,GAAUA,EAAMH,KAClD,MAAO,CACHI,QAASA,KACLH,EAAYI,SAASC,IACjBA,EAAEF,SAAS,GACb,EAET,CAET,CACH,CAbD,CAaGZ,IAAUA,EAAQ,CAAC,IACf,MAAMe,EACTtC,WAAAA,GACIK,KAAKkC,mBAAoB,CAC7B,CACA,oBAAIC,GACA,OAAOnC,KAAKkC,iBAChB,CACAE,cAAAA,GACIpC,KAAKkC,mBAAoB,CAC7B,EAmBJ,MAAMG,EACF,aAAOC,GACH,IAAIC,EACJ,OAAO,IAAIF,EAAwC,QAA5BE,GAAK,IAAIC,OAAQC,aAA0B,IAAPF,EAAgBA,EAAK,GACpF,CACA5C,WAAAA,CAAY+C,GACR1C,KAAK0C,MAAQA,CACjB,CACAC,KAAAA,GACIC,QAAQC,KAAK,uBAAwB7C,KAAK0C,MAC9C,EAEJ,MAAMI,EACFnD,WAAAA,CAAYoD,EAAUC,GAClBhD,KAAK+C,SAAWA,EAChB/C,KAAKgD,WAAaA,CACtB,EAGG,MAAMC,EACT,+BAAOC,CAAyBC,GACxBA,IAAcF,EAAQG,iBACtBH,EAAQI,oBAAoBC,QAEhCL,EAAQG,gBAAkBD,CAC9B,CACA,SAAIT,GACA,OAAO1C,KAAKuD,KAChB,CACA5D,WAAAA,CAAY6D,GACRxD,KAAKwD,QAAUA,EACfxD,KAAKyD,WAAa,GAClBzD,KAAK0D,WAAY,CACrB,CACA,SAAIC,GA4BA,OA3BK3D,KAAK4D,SACN5D,KAAK4D,OAAUb,IACX,IAAIR,GACyB,QAAvBA,EAAKvC,KAAKwD,eAA4B,IAAPjB,OAAgB,EAASA,EAAGsB,cAA0BpD,IAAfT,KAAKuD,OAC7ER,EAAS/C,KAAKuD,OAElB,MAAM7B,EAAW,IAAIoB,EAASC,EAAUE,EAAQG,gBAAkBf,EAAWC,cAAW7B,GAExF,OADAT,KAAKyD,WAAWK,KAAKpC,GACd,CACHI,QAASA,KACL,MAAMiC,EAAQ/D,KAAKyD,WAAWO,QAAQtC,GAClCqC,GAAS,EACT/D,KAAKyD,WAAWQ,OAAOF,EAAO,GAEzBd,EAAQG,eAIb,EAGX,EAEDH,EAAQG,iBACRH,EAAQI,oBAAoBa,IAAIlE,KAAK4D,OAAQvB,EAAWC,WAGzDtC,KAAK4D,MAChB,CACAO,IAAAA,CAAKC,GACDpE,KAAKuD,MAAQa,EACb,IAAK,MAAM1C,KAAY1B,KAAKyD,WACxB/B,EAASqB,SAASqB,EAE1B,CACAtC,OAAAA,GACS9B,KAAK0D,YACN1D,KAAK0D,WAAY,EACb1D,KAAKyD,WAAWlC,OAAS,IACrB0B,EAAQG,iBACRiB,gBAAe,KACX,IAAI9B,EAEJ,IAAK,MAAMb,KAAY1B,KAAKyD,WACxBb,QAAQC,KAAK,uBAAuD,QAA9BN,EAAKb,EAASsB,kBAA+B,IAAPT,OAAgB,EAASA,EAAGI,QAC5G,IAGR3C,KAAKyD,WAAa,IAElBR,EAAQG,iBAAmBpD,KAAK4D,QAChCX,EAAQI,oBAAoBiB,OAAOtE,KAAK4D,QAGpD,EAIG,SAASW,EAA4BC,EAASC,EAAM/C,EAAU8B,GAEjE,OADAgB,EAAQE,iBAAiBD,EAAM/C,EAAU8B,GAClC,CACH1B,QAASA,KACL0C,EAAQG,oBAAoBF,EAAM/C,EAAU8B,EAAQ,EAGhE,CACO,SAASoB,EAAsBJ,EAASC,EAAM/C,EAAU8B,GAE3D,OADAgB,EAAQE,iBAAiBD,EAAM/C,EAAU8B,GAClC,CACH1B,QAASA,KACL0C,EAAQG,oBAAoBF,EAAM/C,EAAU8B,EAAQ,EAGhE,CAjBAP,EAAQG,iBAAkB,EAC1BH,EAAQI,oBAAsB,IA7G9B,MACI1D,WAAAA,GACIK,KAAK6E,OAAS,IAAIC,GACtB,CACA,QAAIC,GACA,OAAO/E,KAAK6E,OAAOE,IACvB,CACAb,GAAAA,CAAIP,EAAOX,GACPhD,KAAK6E,OAAOG,IAAIrB,EAAOX,EAC3B,CACAsB,OAAOX,GACH3D,KAAK6E,OAAOP,OAAOX,EACvB,CACAL,KAAAA,GACItD,KAAK6E,OAAOvB,OAChB,GAyHG,MAAM2B,EACTtF,WAAAA,GACIK,KAAKkF,SAAW,IAAIjC,EACpBjD,KAAKmF,kBAAoB,EACzBnF,KAAKoF,SAAU,EACfpF,KAAKqF,QAAWjB,IAIZ,MAAMkB,EAAqCtF,KAAKmF,kBAChD,OAAOnF,KAAKkF,SAASvB,OAAM,KAQnB3D,KAAKmF,kBAAoBG,GACzBlB,GACJ,GACF,CAEV,CACAD,IAAAA,GACInE,KAAKmF,oBACDnF,KAAKoF,UAGTpF,KAAKoF,SAAU,EACff,gBAAe,KACXrE,KAAKoF,SAAU,EACfpF,KAAKkF,SAASf,MAAM,IAE5B,CACArC,OAAAA,GACI9B,KAAKkF,SAASpD,SAClB,GCtMJ,SAAWX,GACPA,EAAWoE,KAAO,CACdzD,QAASA,QAWbX,EAAWqE,KAPX,SAAcC,GACV,MAAO,CACH3D,QAASA,KACL2D,GAAM,EAGlB,CAEH,CAdD,CAcGtE,IAAeA,EAAa,CAAC,IACzB,MAAMuE,EACT,cAAIC,GACA,OAAO3F,KAAK4F,WAChB,CACAjG,WAAAA,GACIK,KAAK4F,aAAc,EAAM,QAAAvE,EAAAC,UAAAC,OADdsE,EAAI,IAAArE,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJoE,EAAIpE,GAAAH,UAAAG,GAEfzB,KAAK8F,aAAeD,CACxB,CACAE,cAAAA,GAAyB,IAAD,IAAAC,EAAA1E,UAAAC,OAANsE,EAAI,IAAArE,MAAAwE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJJ,EAAII,GAAA3E,UAAA2E,GAClBJ,EAAK9D,SAASmE,GAAQlG,KAAK8F,aAAahC,KAAKoC,IACjD,CACApE,OAAAA,GACQ9B,KAAK4F,cAGT5F,KAAK4F,aAAc,EACnB5F,KAAK8F,aAAa/D,SAASmE,GAAQA,EAAIpE,YACvC9B,KAAK8F,aAAe,GACxB,EAEG,MAAMK,EACTxG,WAAAA,GACIK,KAAKoG,YAAcjF,EAAWoE,IAClC,CACA,SAAI7C,CAAM2D,GACFrG,KAAKoG,aACLpG,KAAKoG,YAAYtE,UAErB9B,KAAKoG,YAAcC,CACvB,CACAvE,OAAAA,GACQ9B,KAAKoG,cACLpG,KAAKoG,YAAYtE,UACjB9B,KAAKoG,YAAcjF,EAAWoE,KAEtC,ECjDG,SAASe,EAAmB9B,EAAS+B,GACxC,MAAMC,EAAW,IAAIC,gBAAgBC,IAMjCC,uBAAsB,KAClB,MAAMC,EAAaF,EAAQ,GAC3BH,EAAGK,EAAW,GAChB,IAGN,OADAJ,EAASK,QAAQrC,GACV,CACH1C,QAASA,KACL0E,EAASM,UAAUtC,GACnBgC,EAASO,YAAY,EAGjC,CACO,MAAMC,EAAgB,SAACxC,GAAyB,IAAD,IAAAnD,EAAAC,UAAAC,OAAZ0F,EAAO,IAAAzF,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPwF,EAAOxF,EAAA,GAAAH,UAAAG,GAC7C,IAAK,MAAMyF,KAAaD,EAChBzC,EAAQ2C,UAAUC,SAASF,IAC3B1C,EAAQ2C,UAAUE,OAAOH,EAGrC,EACaI,EAAa,SAAC9C,GAAyB,IAAD,IAAAwB,EAAA1E,UAAAC,OAAZ0F,EAAO,IAAAzF,MAAAwE,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAPgB,EAAOhB,EAAA,GAAA3E,UAAA2E,GAC1C,IAAK,MAAMiB,KAAaD,EACfzC,EAAQ2C,UAAUC,SAASF,IAC5B1C,EAAQ2C,UAAUjD,IAAIgD,EAGlC,EACaK,EAAcA,CAAC/C,EAASgD,EAAWC,KAC5C,MAAMC,EAAWlD,EAAQ2C,UAAUC,SAASI,GACxCC,IAAcC,GACdlD,EAAQ2C,UAAUjD,IAAIsD,IAErBC,GAAaC,GACdlD,EAAQ2C,UAAUE,OAAOG,EAC7B,EAEG,SAASG,EAAWC,EAAWC,GAClC,KAAOD,GAAW,CACd,GAAIA,IAAcC,EACd,OAAO,EAEXD,EAAYA,EAAUE,UAC1B,CACA,OAAO,CACX,CACO,SAASC,EAAqBC,GACjC,OAAOxG,MAAMT,UAAUkH,MAAMC,KAAKC,SAASJ,qBAAqBC,GAAM,EAC1E,CACO,SAASI,EAAW5D,GACvB,OAAO,IAAI6D,EAAa7D,EAC5B,CAIA,MAAM6D,UAAqB3C,EACvB/F,WAAAA,CAAY6E,GACRzE,QACAC,KAAKsI,YAAc,IAAIrF,EACvBjD,KAAKuI,WAAavI,KAAKsI,YAAY3E,MACnC3D,KAAKwI,WAAa,IAAIvF,EACtBjD,KAAKyI,UAAYzI,KAAKwI,WAAW7E,MACjC3D,KAAK+F,eAAe/F,KAAKsI,YAAatI,KAAKwI,YAC3C,IAAIE,EAAWf,EAAWQ,SAASQ,cAAenE,GAC9CoE,GAAe,EACnB,MAAMC,EAAUA,KACZD,GAAe,EACVF,IACDA,GAAW,EACX1I,KAAKsI,YAAYnE,OACrB,EAEE2E,EAASA,KACPJ,IACAE,GAAe,EACfG,OAAOC,YAAW,KACVJ,IACAA,GAAe,EACfF,GAAW,EACX1I,KAAKwI,WAAWrE,OACpB,GACD,GACP,EAEJnE,KAAKiJ,qBAAuB,KACItB,EAAWQ,SAASQ,cAAenE,KACnCkE,IACpBA,EACAI,IAGAD,IAER,EAEArE,aAAmB0E,aACnBlJ,KAAK+F,eAAenB,EAAsBJ,EAAS,QAASqE,GAAS,IACrE7I,KAAK+F,eAAenB,EAAsBJ,EAAS,OAAQsE,GAAQ,MAGnE9I,KAAK+F,eAAexB,EAA4BC,EAAS,QAASqE,GAAS,IAC3E7I,KAAK+F,eAAexB,EAA4BC,EAAS,OAAQsE,GAAQ,IAEjF,CACAK,YAAAA,GACInJ,KAAKiJ,sBACT,EAGJ,MAAMG,EAA4B,yBAM3B,SAASC,EAAsB1F,GAClC,OAAOA,EAAMyF,EACjB,CA2BO,SAASE,EAAuBC,GACnC,MAAM,KAAEC,EAAI,IAAEC,EAAG,MAAEC,EAAK,OAAEC,GAAWJ,EAAQK,wBAC7C,MAAO,CACHJ,KAAMA,EAAOT,OAAOc,QACpBJ,IAAKA,EAAMV,OAAOe,QAClBJ,MAAOA,EACPC,OAAQA,EAEhB,CChKO,SAASI,EAAKC,GACjB,GAAmB,IAAfA,EAAIzI,OACJ,MAAM,IAAIiB,MAAM,qBAEpB,MAAO,CAACwH,EAAI/B,MAAM,EAAG+B,EAAIzI,OAAS,GAAIyI,EAAIA,EAAIzI,OAAS,GAC3D,CAIO,SAAS0I,EAAeC,EAAMC,GACjC,GAAID,EAAK3I,SAAW4I,EAAK5I,OACrB,OAAO,EAEX,IAAK,IAAI6I,EAAI,EAAGA,EAAIF,EAAK3I,OAAQ6I,IAC7B,GAAIF,EAAKE,KAAOD,EAAKC,GACjB,OAAO,EAGf,OAAO,CACX,CAIO,SAASC,EAAYL,EAAKtH,GAC7B,MAAMqB,EAAQiG,EAAIhG,QAAQtB,GACtBqB,GAAS,IACTiG,EAAI/F,OAAOF,EAAO,GAClBiG,EAAIM,QAAQ5H,GAEpB,CAIO,SAAS6H,EAAUP,EAAKtH,GAC3B,MAAMqB,EAAQiG,EAAIhG,QAAQtB,GACtBqB,GAAS,IACTiG,EAAI/F,OAAOF,EAAO,GAClBiG,EAAIlG,KAAKpB,GAEjB,CAUO,SAAS2E,EAAOmD,EAAO9H,GAC1B,MAAMqB,EAAQyG,EAAMC,WAAWC,GAAMA,IAAMhI,IAC3C,OAAIqB,GAAS,IACTyG,EAAMvG,OAAOF,EAAO,IACb,EAGf,CCxDO,MAAM4G,EAAQA,CAACjI,EAAOkI,EAAKC,KAC9B,GAAID,EAAMC,EACN,MAAM,IAAIrI,MAAO,GAAEoI,OAASC,6BAEhC,OAAOC,KAAKF,IAAIC,EAAKC,KAAKD,IAAInI,EAAOkI,GAAK,EAEjCG,EAA4BA,KACrC,IAAIrI,EAAQ,EACZ,MAAO,CAAEsI,KAAMA,KAAOtI,KAASuI,WAAY,EAElCC,EAAQA,CAAC1F,EAAM2F,KACxB,MAAMC,EAAS,GAKf,GAJkB,iBAAPD,IACPA,EAAK3F,EACLA,EAAO,GAEPA,GAAQ2F,EACR,IAAK,IAAIf,EAAI5E,EAAM4E,EAAIe,EAAIf,IACvBgB,EAAOtH,KAAKsG,QAIhB,IAAK,IAAIA,EAAI5E,EAAM4E,EAAIe,EAAIf,IACvBgB,EAAOtH,KAAKsG,GAGpB,OAAOgB,CAAM,ECzBV,MAAMC,EACT,QAAItG,CAAKA,GACL/E,KAAKsL,MAAQvG,CACjB,CACA,QAAIA,GACA,OAAO/E,KAAKsL,KAChB,CACA,qBAAIC,GACA,OAAOvL,KAAKwL,kBAChB,CACA,WAAIC,GACA,YAA0C,IAA5BzL,KAAKwL,kBACvB,CACA,eAAIE,GACA,OAAO1L,KAAKyL,QAAUzL,KAAK2L,KAAKD,YAAc,CAClD,CACA,mBAAIE,GACA,OAAO5L,KAAK2L,KAAKD,WACrB,CACA,eAAIG,GACA,OAAO7L,KAAKyL,QAAUzL,KAAK2L,KAAKE,YAAc,CAClD,CACA,mBAAIC,GACA,OAAO9L,KAAK2L,KAAKE,WACrB,CACA,YAAIE,GACA,OAAO/L,KAAK2L,KAAKI,QACrB,CACA,QAAIC,GACA,QAAShM,KAAK2L,KAAKK,IACvB,CACA,WAAIC,CAAQA,GACRjM,KAAKkM,UAAUC,MAAMC,cAAgBH,EAAU,GAAK,MACxD,CACAtM,WAAAA,CAAYuM,EAAWP,EAAM5G,EAAMsB,GAC/BrG,KAAKkM,UAAYA,EACjBlM,KAAK2L,KAAOA,EACZ3L,KAAKqG,WAAaA,EAClBrG,KAAKwL,wBAAqB/K,EACN,iBAATsE,GACP/E,KAAKsL,MAAQvG,EACb/E,KAAKwL,wBAAqB/K,EAC1ByL,EAAU/E,UAAUjD,IAAI,aAGxBlE,KAAKsL,MAAQ,EACbtL,KAAKwL,mBAAqBzG,EAAKwG,kBAEvC,CACAc,UAAAA,CAAWZ,EAAS1G,GAChB,IAAIxC,EACAkJ,IAAYzL,KAAKyL,UAGjBA,GACAzL,KAAK+E,KAAO4F,EAAyC,QAAlCpI,EAAKvC,KAAKwL,0BAAuC,IAAPjJ,EAAgBA,EAAK,EAAGvC,KAAK4L,gBAAiB5L,KAAK8L,iBAChH9L,KAAKwL,wBAAqB/K,IAG1BT,KAAKwL,mBACe,iBAATzG,EAAoBA,EAAO/E,KAAK+E,KAC3C/E,KAAK+E,KAAO,GAEhB/E,KAAKkM,UAAU/E,UAAUmF,OAAO,UAAWb,GACvCzL,KAAK2L,KAAKU,YACVrM,KAAK2L,KAAKU,WAAWZ,GAE7B,CACA3J,OAAAA,GAEI,OADA9B,KAAKqG,WAAWvE,UACT9B,KAAK2L,IAChB,EC/DG,IAAIY,EAKAC,EAOAC,EAMAC,GAjBX,SAAWH,GACPA,EAAwB,WAAI,aAC5BA,EAAsB,SAAI,UAC7B,CAHD,CAGGA,IAAgBA,EAAc,CAAC,IAElC,SAAWC,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAmB,QAAI,GAAK,SACzC,CALD,CAKGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAoB,IAAI,MACxBA,EAAqB,KAAI,OACzBA,EAAuB,OAAI,QAC9B,CAJD,CAIGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAOC,WAAa,CAAElI,KAAM,cAI5BiI,EAAOE,MAHP,SAAe7I,GACX,MAAO,CAAEU,KAAM,QAASV,QAC5B,EAKA2I,EAAOG,UAHP,SAAmBtB,GACf,MAAO,CAAE9G,KAAM,YAAa8G,oBAChC,CAEH,CAVD,CAUGmB,IAAWA,EAAS,CAAC,IACjB,MAAMI,EACT,eAAIC,GACA,OAAO/M,KAAKgN,YAChB,CACA,QAAIjI,GACA,OAAO/E,KAAKsL,KAChB,CACA,QAAIvG,CAAKrC,GACL1C,KAAKsL,MAAQ5I,CACjB,CACA,kBAAIuK,GACA,OAAOjN,KAAKkN,eAChB,CACA,kBAAID,CAAevK,GACf1C,KAAKkN,gBAAkBxK,CAC3B,CACA,UAAInB,GACA,OAAOvB,KAAKmN,UAAU5L,MAC1B,CACA,eAAI6L,GACA,OAAOpN,KAAKqN,aAAe,IAAIrN,KAAKqN,mBAAgB5M,CACxD,CACA,eAAI6M,GACA,OAAOtN,KAAKuN,YAChB,CACA,eAAID,CAAY5K,GACZ1C,KAAKuN,aAAe7K,EACpB,MAAM8K,EAAMxN,KAAK+E,KACjB/E,KAAK+E,KAAO/E,KAAKiN,eACjBjN,KAAKiN,eAAiBO,EACtBxG,EAAchH,KAAKwE,QAAS,aAAc,YAC1CxE,KAAKwE,QAAQ2C,UAAUjD,IAAIlE,KAAKsN,aAAef,EAAYkB,WACrD,aACA,WACV,CACA,eAAI/B,GACA,OAAO1L,KAAKmN,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAKlC,aAAa,EACpE,CACA,eAAIG,GACA,OAAuB,IAAhB7L,KAAKuB,OACNsM,OAAOC,kBACP9N,KAAKmN,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAK/B,aAAa,EACnE,CACA,wBAAIkC,GACA,OAAO/N,KAAKgO,qBAChB,CACA,wBAAID,CAAqBA,GACjB/N,KAAKgO,wBAA0BD,IAGnC/N,KAAKgO,sBAAwBD,EAC7B/N,KAAKiO,uBACT,CACA,sBAAIC,GACA,OAAOlO,KAAKmO,mBAChB,CACA,sBAAID,CAAmBA,GACflO,KAAKmO,sBAAwBD,IAGjClO,KAAKmO,oBAAsBD,EAC3BlO,KAAKiO,uBACT,CACA,YAAIG,GACA,OAAOpO,KAAKqO,SAChB,CACA,YAAID,CAAS1L,GACT1C,KAAKqO,UAAY3L,EACjB6E,EAAYvH,KAAKwE,QAAS,wBAAyB9B,EACvD,CACA/C,WAAAA,CAAYuM,EAAW1I,GAAU,IAAD8K,EAAA,KAC5BtO,KAAKkM,UAAYA,EACjBlM,KAAKmN,UAAY,GACjBnN,KAAKuO,OAAS,GACdvO,KAAKsL,MAAQ,EACbtL,KAAKkN,gBAAkB,EACvBlN,KAAKgN,aAAe,EACpBhN,KAAKqN,kBAAe5M,EACpBT,KAAKgO,uBAAwB,EAC7BhO,KAAKmO,qBAAsB,EAC3BnO,KAAKqO,WAAY,EACjBrO,KAAKwO,cAAgB,IAAIvL,EACzBjD,KAAKyO,aAAezO,KAAKwO,cAAc7K,MACvC3D,KAAK0O,cAAgB,IAAIzL,EACzBjD,KAAK2O,aAAe3O,KAAK0O,cAAc/K,MACvC3D,KAAK4O,iBAAmB,IAAI3L,EAC5BjD,KAAK6O,gBAAkB7O,KAAK4O,iBAAiBjL,MAC7C3D,KAAK8O,OAAS,SAAC/K,EAAOgL,EAAOC,EAA2CC,EAAoBC,EAAqBC,EAA6CC,EAA6CC,EAAYC,GACnN,QAD8B,IAALN,IAAAA,EAAQV,EAAKnB,UAAUvL,KAAK2N,GAAMA,EAAExK,aAAgE,IAAhBoK,IAAAA,EAAmBtB,OAAO2B,wBAAmC,IAAhBJ,IAAAA,EAAmBvB,OAAOC,mBAChL/J,EAAQ,GAAKA,EAAQuK,EAAKnB,UAAU5L,OACpC,OAAO,EAEX,MAAMkO,EAAYvE,EAAMnH,GAAQ,GAC1B2L,EAAcxE,EAAMnH,EAAQ,EAAGuK,EAAKnB,UAAU5L,QAEpD,GAAI2N,EACA,IAAK,MAAM9E,KAAK8E,EACZ7E,EAAYoF,EAAWrF,GACvBC,EAAYqF,EAAatF,GAGjC,GAAI6E,EACA,IAAK,MAAM7E,KAAK6E,EACZ1E,EAAUkF,EAAWrF,GACrBG,EAAUmF,EAAatF,GAI/B,MAAMuF,EAAUF,EAAU7N,KAAKwI,GAAMkE,EAAKnB,UAAU/C,KAC9CwF,EAAUH,EAAU7N,KAAKwI,GAAM4E,EAAM5E,KAErCyF,EAAYH,EAAY9N,KAAKwI,GAAMkE,EAAKnB,UAAU/C,KAClD0F,EAAYJ,EAAY9N,KAAKwI,GAAM4E,EAAM5E,KAEzC2F,EAAaN,EAAU/B,QAAO,CAACsC,EAAG5F,IAAM4F,EAAI1B,EAAKnB,UAAU/C,GAAGsB,YAAcsD,EAAM5E,IAAI,GACtF6F,EAAaR,EAAU/B,QAAO,CAACsC,EAAG5F,IAAM4F,EAAI1B,EAAKnB,UAAU/C,GAAGyB,YAAcmD,EAAM5E,IAAI,GAEtF8F,EAAsC,IAAvBR,EAAYnO,OAC3BsM,OAAOC,kBACP4B,EAAYhC,QAAO,CAACsC,EAAG5F,IAAM4F,EAAIhB,EAAM5E,GAAKkE,EAAKnB,UAAU/C,GAAGsB,aAAa,GAC3EyE,EAAsC,IAAvBT,EAAYnO,OAC3BsM,OAAO2B,kBACPE,EAAYhC,QAAO,CAACsC,EAAG5F,IAAM4F,EAAIhB,EAAM5E,GAAKkE,EAAKnB,UAAU/C,GAAGyB,aAAa,GAE3EuE,EAAWtF,KAAKD,IAAIkF,EAAYI,GAChCE,EAAWvF,KAAKF,IAAIsF,EAAcD,GAExC,IAAIK,GAAU,EACd,GAAIjB,EAAY,CACZ,MAAMkB,EAAWjC,EAAKnB,UAAUkC,EAAWtL,OACrC0H,EAAUsD,GAASM,EAAWmB,WACpCF,EAAU7E,IAAY8E,EAAS9E,QAC/B8E,EAASlE,WAAWZ,EAAS4D,EAAWtK,KAC5C,CACA,IAAKuL,GAAWhB,EAAW,CACvB,MAAMiB,EAAWjC,EAAKnB,UAAUmC,EAAUvL,OACpC0H,EAAUsD,EAAQO,EAAUkB,WAClCF,EAAU7E,IAAY8E,EAAS9E,QAC/B8E,EAASlE,WAAWZ,EAAS6D,EAAUvK,KAC3C,CACA,GAAIuL,EACA,OAAOhC,EAAKQ,OAAO/K,EAAOgL,EAAOC,EAAOC,EAAoBC,EAAqBC,EAAkBC,GAIvG,IAAIqB,EAAc,EAEdC,EAHmB/F,EAAMoE,EAAOqB,EAAUC,GAI9C,IAAK,IAAIjG,EAAI,EAAGA,EAAIuF,EAAQpO,OAAQ6I,IAAK,CACrC,MAAMwD,EAAO+B,EAAQvF,GACfrF,EAAO4F,EAAMiF,EAAQxF,GAAKsG,EAAS9C,EAAKlC,YAAakC,EAAK/B,aAC1D8E,EAAY5L,EAAO6K,EAAQxF,GACjCqG,GAAeE,EACfD,GAAWC,EACX/C,EAAK7I,KAAOA,CAChB,CAEA,IAAI6L,EAAYH,EAChB,IAAK,IAAIrG,EAAI,EAAGA,EAAIyF,EAAUtO,OAAQ6I,IAAK,CACvC,MAAMwD,EAAOiC,EAAUzF,GACjBrF,EAAO4F,EAAMmF,EAAU1F,GAAKwG,EAAWhD,EAAKlC,YAAakC,EAAK/B,aAEpE+E,GADkB7L,EAAO+K,EAAU1F,GAEnCwD,EAAK7I,KAAOA,CAChB,CAEA,OAAOgK,CACX,EACA/O,KAAKuN,aAAe/J,EAAQ8J,YAC5BtN,KAAKwE,QAAUxE,KAAK6Q,kBACpB7Q,KAAK8Q,wBAC8BrQ,IAA/B+C,EAAQsN,sBAEAtN,EAAQsN,mBACpB9Q,KAAK+Q,cAAgB/Q,KAAKgR,sBAC1BhR,KAAKiR,cAAgBjR,KAAKkR,sBAC1BlR,KAAKwE,QAAQ2M,YAAYnR,KAAKiR,eAC9BjR,KAAKwE,QAAQ2M,YAAYnR,KAAK+Q,eAC9B/Q,KAAKkM,UAAUiF,YAAYnR,KAAKwE,SAChCxE,KAAKmM,MAAM3I,EAAQ4N,QAEf5N,EAAQ6N,aACRrR,KAAKsL,MAAQ9H,EAAQ6N,WAAWtM,KAChCvB,EAAQ6N,WAAWC,MAAMvP,SAAQ,CAACwP,EAAgBxN,KAC9C,MAAMyN,OAAoC/Q,IAA3B8Q,EAAe9F,SAC1B8F,EAAe9F,QACb8F,EAAexM,KACf,CACEN,KAAM,YACN8G,kBAAmBgG,EAAexM,MAEpC4G,EAAO4F,EAAe5F,KAC5B3L,KAAKyR,QAAQ9F,EAAM6F,EAAQzN,GAAO,EAEjC,IAGL/D,KAAKgN,aAAehN,KAAKmN,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAErF,MAAM,GAChE/E,KAAK0R,kBAEb,CACAvF,KAAAA,CAAMiF,GAC+E,iBAA5EA,aAAuC,EAASA,EAAOO,kBACxD3K,EAAchH,KAAKwE,QAAS,oBAC5BxE,KAAKwE,QAAQ2H,MAAMyF,eAAe,2BAGlCtK,EAAWtH,KAAKwE,QAAS,qBACrB4M,aAAuC,EAASA,EAAOO,kBACvD3R,KAAKwE,QAAQ2H,MAAM0F,YAAY,wBAAyBT,EAAOO,iBAG3E,CACAG,aAAAA,CAAc/N,GACV,GAAIA,EAAQ,GAAKA,GAAS/D,KAAKmN,UAAU5L,OACrC,MAAM,IAAIiB,MAAM,uBAGpB,OADiBxC,KAAKmN,UAAUpJ,GAChB0H,OACpB,CACAsG,cAAAA,CAAehO,EAAO0H,GAClB,GAAI1H,EAAQ,GAAKA,GAAS/D,KAAKmN,UAAU5L,OACrC,MAAM,IAAIiB,MAAM,uBAEpB+E,EAAYvH,KAAKkM,UAAW,UAAWT,GACvC,MAAMuG,EAAWhS,KAAKmN,UAAUpJ,GAChCwD,EAAYvH,KAAKkM,UAAW,UAAWT,GACvCuG,EAAS3F,WAAWZ,EAASuG,EAASjN,MACtC/E,KAAKiS,qBAAqBlO,GAC1B/D,KAAKkS,cACLlS,KAAK0R,iBACT,CACAS,WAAAA,CAAYpO,GACR,OAAIA,EAAQ,GAAKA,GAAS/D,KAAKmN,UAAU5L,QAC7B,EAELvB,KAAKmN,UAAUpJ,GAAOgB,IACjC,CACAqN,UAAAA,CAAWrO,EAAOgB,GACd,GAAIhB,EAAQ,GAAKA,GAAS/D,KAAKmN,UAAU5L,OACrC,OAEJ,MAAM8Q,EAAUnH,EAAMlL,KAAKmN,UAAU5L,QAAQ+Q,QAAQlI,GAAMA,IAAMrG,IAC3DkL,EAAqB,IACpBoD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACvExO,GAEEmL,EAAsBmD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAC1F5E,EAAO5N,KAAKmN,UAAUpJ,GAC5BgB,EAAO+F,KAAK2H,MAAM1N,GAClBA,EAAO4F,EAAM5F,EAAM6I,EAAKlC,YAAaZ,KAAKF,IAAIgD,EAAK/B,YAAa7L,KAAKsL,QACrEsC,EAAK7I,KAAOA,EACZ/E,KAAK0S,SAASzD,EAAoBC,EACtC,CACAyD,QAAAA,GACI,OAAO3S,KAAKmN,UAAUvL,KAAK2N,GAAMA,EAAE5D,MACvC,CACAiH,WAAAA,CAAYhF,EAAM7I,GACd,MAAMhB,EAAQ/D,KAAKmN,UAAUnJ,QAAQ4J,GACrC,GAAI7J,EAAQ,GAAKA,GAAS/D,KAAKmN,UAAU5L,OACrC,OAEJwD,EAAuB,iBAATA,EAAoBA,EAAO6I,EAAK7I,KAC9CA,EAAO4F,EAAM5F,EAAM6I,EAAKlC,YAAakC,EAAK/B,aAC1C+B,EAAK7I,KAAOA,EACZ,MAAMsN,EAAUnH,EAAMlL,KAAKmN,UAAU5L,QAAQ+Q,QAAQlI,GAAMA,IAAMrG,IAC3DkL,EAAqB,IACpBoD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACvExO,GAEEmL,EAAsBmD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAKhGxS,KAAK0S,SAAS,IAAIzD,EAAoBlL,GAAQmL,EAClD,CACAuC,OAAAA,CAAQ9F,EAAM5G,EAA+BhB,EAA+B8O,QAA1D,IAAJ9N,IAAAA,EAAO,CAAEN,KAAM,oBAAqB,IAALV,IAAAA,EAAQ/D,KAAKmN,UAAU5L,QAChE,MAAM2K,EAAY/D,SAAS2K,cAAc,OAGzC,IAAIC,EAFJ7G,EAAU1E,UAAY,OACtB0E,EAAUiF,YAAYxF,EAAKnH,SAGvBuO,EADgB,iBAAThO,EACIA,EAEQ,UAAdA,EAAKN,KACCzE,KAAKmS,YAAYpN,EAAKhB,OAAS,EAEvB,cAAdgB,EAAKN,KACC,CAAE8G,kBAAmBxG,EAAKwG,mBAG1BI,EAAKD,YAEpB,MAAMrF,EAAasF,EAAKiH,aAAaI,GAAYhT,KAAK4S,YAAYZ,EAAUgB,EAAQjO,QAC9EiN,EAAW,IAAI3G,EAASa,EAAWP,EAAMoH,EAAU,CACrDjR,QAASA,KACLuE,EAAWvE,UACX9B,KAAK+Q,cAAckC,YAAY/G,EAAU,IAUjD,GAPInI,IAAU/D,KAAKmN,UAAU5L,OACzBvB,KAAK+Q,cAAcI,YAAYjF,GAG/BlM,KAAK+Q,cAAcmC,aAAahH,EAAWlM,KAAK+Q,cAAc3R,SAASwO,KAAK7J,IAEhF/D,KAAKmN,UAAUlJ,OAAOF,EAAO,EAAGiO,GAC5BhS,KAAKmN,UAAU5L,OAAS,EAAG,CAE3B,MAAM4R,EAAOhL,SAAS2K,cAAc,OACpCK,EAAK3L,UAAY,OACjB,MAAM4L,EAAkBzP,IACpB,IAAK,MAAMiK,KAAQ5N,KAAKmN,UACpBS,EAAK3B,SAAU,EAEnB,MAAMoH,EAAU,IACTtL,EAAqB,aACrBA,EAAqB,YAE5B,IAAK,MAAMuL,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjC,MAAMmH,EAAQvT,KAAKuN,eAAiBhB,EAAYkB,WAC1C9J,EAAM6P,QACN7P,EAAM8P,QACNC,EHpUf,SAAoBlJ,EAAOmJ,GAC9B,IAAK,IAAIvJ,EAAI,EAAGA,EAAII,EAAMjJ,OAAQ6I,IAE9B,GAAIuJ,EADYnJ,EAAMJ,IAElB,OAAOA,EAGf,OAAQ,CACZ,CG4TkCwJ,CAAW5T,KAAKuO,QAASsF,GAAMA,EAAE3H,YAAciH,IAE3DnE,EAAQhP,KAAKmN,UAAUvL,KAAK2N,GAAMA,EAAExK,OAE1C,IAAIsK,EACAC,EACJ,MAAMG,EAAYvE,EAAMwI,GAAY,GAC9BhE,EAAcxE,EAAMwI,EAAY,EAAG1T,KAAKmN,UAAU5L,QAClDwO,EAAaN,EAAU/B,QAAO,CAACC,EAAGvD,IAAMuD,GAAK3N,KAAKmN,UAAU/C,GAAGsB,YAAcsD,EAAM5E,KAAK,GACxF6F,EAAaR,EAAU/B,QAAO,CAACC,EAAGvD,IAAMuD,GAAK3N,KAAKmN,UAAU/C,GAAG0B,gBAAkBkD,EAAM5E,KAAK,GAC5F8F,EAAsC,IAAvBR,EAAYnO,OAC3BsM,OAAOC,kBACP4B,EAAYhC,QAAO,CAACC,EAAGvD,IAAMuD,GAC1BqB,EAAM5E,GAAKpK,KAAKmN,UAAU/C,GAAGsB,cAAc,GAC9CyE,EAAsC,IAAvBT,EAAYnO,OAC3BsM,OAAO2B,kBACPE,EAAYhC,QAAO,CAACC,EAAGvD,IAAMuD,GAC1BqB,EAAM5E,GACHpK,KAAKmN,UAAU/C,GAAG0B,kBAAkB,GAC1CsE,EAAWtF,KAAKD,IAAIkF,EAAYI,GAChCE,EAAWvF,KAAKF,IAAIsF,EAAcD,GAClC6D,EAAkB9T,KAAK+T,mBAAmBtE,GAC1CuE,EAAiBhU,KAAK+T,mBAAmBrE,GAC/C,GAA+B,iBAApBoE,EAA8B,CACrC,MAAMG,EAAkBjU,KAAKmN,UAAU2G,GACjCI,EAAWpJ,KAAKqJ,MAAMF,EAAgBrI,gBAAkB,GAC9DyD,EAAa,CACTtL,MAAO+P,EACPtD,WAAYyD,EAAgBxI,QACtB2E,EAAW8D,EACX9D,EAAW8D,EACjBnP,KAAMkP,EAAgBlP,KAE9B,CACA,GAA8B,iBAAnBiP,EAA6B,CACpC,MAAMC,EAAkBjU,KAAKmN,UAAU6G,GACjCE,EAAWpJ,KAAKqJ,MAAMF,EAAgBrI,gBAAkB,GAC9D0D,EAAY,CACRvL,MAAOiQ,EACPxD,WAAYyD,EAAgBxI,QACtB4E,EAAW6D,EACX7D,EAAW6D,EACjBnP,KAAMkP,EAAgBlP,KAE9B,CACA,MAAMqP,EAAiBzQ,IACnB,MAGMoL,GAHU/O,KAAKuN,eAAiBhB,EAAYkB,WAC5C9J,EAAM6P,QACN7P,EAAM8P,SACYF,EACxBvT,KAAK8O,OAAO4E,EAAW3E,EAAOC,OAAOvO,OAAWA,EAAW2P,EAAUC,EAAUhB,EAAYC,GAC3FtP,KAAKiS,uBACLjS,KAAKkS,aAAa,EAEhBmC,EAAMA,KACR,IAAK,MAAMzG,KAAQ5N,KAAKmN,UACpBS,EAAK3B,SAAU,EAEnB,IAAK,MAAMqH,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjCpM,KAAK0R,kBACLvJ,SAASxD,oBAAoB,cAAeyP,GAC5CjM,SAASxD,oBAAoB,YAAa0P,GAC1ClM,SAASxD,oBAAoB,gBAAiB0P,GAC9CrU,KAAKwO,cAAcrK,UAAK1D,EAAU,EAEtC0H,SAASzD,iBAAiB,cAAe0P,GACzCjM,SAASzD,iBAAiB,YAAa2P,GACvClM,SAASzD,iBAAiB,gBAAiB2P,EAAI,EAEnDlB,EAAKzO,iBAAiB,cAAe0O,GACrC,MAAMkB,EAAW,CACbpI,UAAWiH,EACX9M,WAAYA,KACR8M,EAAKxO,oBAAoB,cAAeyO,GACxCpT,KAAKiR,cAAcgC,YAAYE,EAAK,GAG5CnT,KAAKiR,cAAcE,YAAYgC,GAC/BnT,KAAKuO,OAAOzK,KAAKwQ,EACrB,CACKzB,GACD7S,KAAK0S,SAAS,CAAC3O,IAEd8O,GACe,iBAAT9N,GACO,eAAdA,EAAKN,MACLzE,KAAKuU,sBAETvU,KAAK0O,cAAcvK,KAAKwH,EAC5B,CACA4I,mBAAAA,GACI,MAAMC,EAAoB,GAC1B,IAAIC,EAAe,EACnB,IAAK,MAAM7G,KAAQ5N,KAAKmN,UAChBS,EAAK/B,YAAc+B,EAAKlC,YAAc,IACtC8I,EAAkB1Q,KAAK8J,GACvB6G,GAAgB7G,EAAK7I,MAG7B,MAAMA,EAAO+F,KAAKqJ,MAAMM,EAAeD,EAAkBjT,QACzD,IAAK,MAAMqM,KAAQ4G,EACf5G,EAAK7I,KAAO4F,EAAM5F,EAAM6I,EAAKlC,YAAakC,EAAK/B,aAEnD,MAAMwG,EAAUnH,EAAMlL,KAAKmN,UAAU5L,QAC/B0N,EAAqBoD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACzFrD,EAAsBmD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAChGxS,KAAK0S,SAASzD,EAAoBC,EACtC,CACAwF,UAAAA,CAAW3Q,EAAOyN,EAAQqB,QAAU,IAAVA,IAAAA,GAAa,GAEnC,MAAMb,EAAWhS,KAAKmN,UAAUlJ,OAAOF,EAAO,GAAG,GAGjD,GAFAiO,EAASlQ,UAEL9B,KAAKmN,UAAU5L,QAAU,EAAG,CAC5B,MAAMmS,EAAY5I,KAAKD,IAAI9G,EAAQ,EAAG,GACrB/D,KAAKuO,OAAOtK,OAAOyP,EAAW,GAAG,GACzCrN,YACb,CAQA,OAPKwM,GACD7S,KAAK0S,WAELlB,GAA0B,eAAhBA,EAAO/M,MACjBzE,KAAKuU,sBAETvU,KAAK4O,iBAAiBzK,KAAK6N,EAASrG,MAC7BqG,EAASrG,IACpB,CACAgJ,wBAAAA,CAAyB5Q,GACrB,GAAIA,EAAQ,GAAKA,GAAS/D,KAAKmN,UAAU5L,OACrC,MAAM,IAAIiB,MAAM,uBAGpB,OADiBxC,KAAKmN,UAAUpJ,GAChBwH,iBACpB,CACAqJ,QAAAA,CAASpP,EAAM2F,GACX,MAAMI,EAAoBvL,KAAK2U,yBAAyBnP,GAClDgM,OAAsC,IAAtBjG,EAChBvL,KAAKmS,YAAY3M,GACjBkH,EAAOG,UAAUtB,GACjBI,EAAO3L,KAAK0U,WAAWlP,OAAM/E,GAAW,GAC9CT,KAAKyR,QAAQ9F,EAAM6F,EAAQrG,EAC/B,CACA0J,MAAAA,CAAO9P,EAAMkI,GACT,MAAM6H,EAAehK,KAAKD,IAAI7K,KAAK+E,KAAM/E,KAAKgN,cAG9C,GAFAhN,KAAK+E,KAAOA,EACZ/E,KAAKiN,eAAiBA,EACjBjN,KAAKoN,YAML,CACD,IAAI2H,EAAQ,EACZ,IAAK,IAAI3K,EAAI,EAAGA,EAAIpK,KAAKmN,UAAU5L,OAAQ6I,IAAK,CAC5C,MAAMwD,EAAO5N,KAAKmN,UAAU/C,GACtB4K,EAAahV,KAAKoN,YAAYhD,GACV,iBAAf4K,EACPD,GAASC,EAGTjQ,GAAQ6I,EAAK7I,IAErB,CACA,IAAK,IAAIqF,EAAI,EAAGA,EAAIpK,KAAKmN,UAAU5L,OAAQ6I,IAAK,CAC5C,MAAMwD,EAAO5N,KAAKmN,UAAU/C,GACtB4K,EAAahV,KAAKoN,YAAYhD,GACV,iBAAf4K,GAA2BD,EAAQ,IAC1CnH,EAAK7I,KAAO4F,EAAMG,KAAK2H,MAAOuC,EAAajQ,EAAQgQ,GAAQnH,EAAKlC,YAAakC,EAAK/B,aAE1F,CACJ,KAzBuB,CACnB,MAAMwG,EAAUnH,EAAMlL,KAAKmN,UAAU5L,QAC/B0N,EAAqBoD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACzFrD,EAAsBmD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAChGxS,KAAK8O,OAAO9O,KAAKmN,UAAU5L,OAAS,EAAGwD,EAAO+P,OAAcrU,EAAWwO,EAAoBC,EAC/F,CAqBAlP,KAAKiS,uBACLjS,KAAKkS,aACT,CACAQ,QAAAA,CAASzD,EAAoBC,GACzB,MAAMnC,EAAc/M,KAAKmN,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAErF,MAAM,GAChE/E,KAAK8O,OAAO9O,KAAKmN,UAAU5L,OAAS,EAAGvB,KAAKsL,MAAQyB,OAAatM,EAAWwO,EAAoBC,GAChGlP,KAAKiS,uBACLjS,KAAKkS,cACLlS,KAAK0R,iBACT,CACAO,oBAAAA,CAAqBgD,GACjB,MAAMlI,EAAc/M,KAAKmN,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAErF,MAAM,GAChE,IAAImQ,EAAalV,KAAK+E,KAAOgI,EAC7B,MAAMsF,EAAUnH,EAAMlL,KAAKmN,UAAU5L,OAAS,GAAI,GAC5C0N,EAAqBoD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe8F,MACzFrD,EAAsBmD,EAAQC,QAAQlI,GAAMpK,KAAKmN,UAAU/C,GAAG2B,WAAaU,EAAe+F,OAChG,IAAK,MAAMzO,KAASmL,EAChB7E,EAAYgI,EAAStO,GAEzB,IAAK,MAAMA,KAASkL,EAChB1E,EAAU8H,EAAStO,GAES,iBAArBkR,GACP1K,EAAU8H,EAAS4C,GAEvB,IAAK,IAAI7K,EAAI,EAAkB,IAAf8K,GAAoB9K,EAAIiI,EAAQ9Q,OAAQ6I,IAAK,CACzD,MAAMwD,EAAO5N,KAAKmN,UAAUkF,EAAQjI,IAC9BrF,EAAO4F,EAAMiD,EAAK7I,KAAOmQ,EAAYtH,EAAKlC,YAAakC,EAAK/B,aAElEqJ,GADkBnQ,EAAO6I,EAAK7I,KAE9B6I,EAAK7I,KAAOA,CAChB,CACJ,CACA2M,eAAAA,GACQ1R,KAAK8Q,oBAAsB9Q,KAAKgN,aAAe,IAC/ChN,KAAKqN,aAAerN,KAAKmN,UAAUvL,KAAKwI,GAAMA,EAAEqB,QAAUrB,EAAErF,KAAO/E,KAAKgN,kBAAevM,IAE/F,CACAyR,WAAAA,GACIlS,KAAKgN,aAAehN,KAAKmN,UAAUO,QAAO,CAACC,EAAGvD,IAAMuD,EAAIvD,EAAErF,MAAM,GAChE,IAAIoQ,EAAM,EACV,MAAM5F,EAAI,GACVvP,KAAKiO,uBACL,IAAK,IAAI7D,EAAI,EAAGA,EAAIpK,KAAKmN,UAAU5L,OAAS,EAAG6I,IAAK,CAChD+K,GAAOnV,KAAKmN,UAAU/C,GAAGrF,KACzBwK,EAAEzL,KAAKqR,GACP,MAAMC,EAAStK,KAAKF,IAAIE,KAAKD,IAAI,EAAGsK,EAAM,GAAInV,KAAK+E,KAAO,GACtD/E,KAAKuN,eAAiBhB,EAAYkB,aAClCzN,KAAKuO,OAAOnE,GAAG8B,UAAUC,MAAM3C,KAAQ,GAAE4L,MACzCpV,KAAKuO,OAAOnE,GAAG8B,UAAUC,MAAM1C,IAAO,OAEtCzJ,KAAKuN,eAAiBhB,EAAY8I,WAClCrV,KAAKuO,OAAOnE,GAAG8B,UAAUC,MAAM3C,KAAQ,MACvCxJ,KAAKuO,OAAOnE,GAAG8B,UAAUC,MAAM1C,IAAO,GAAE2L,MAEhD,CACApV,KAAKmN,UAAUpL,SAAQ,CAAC4J,EAAMvB,KACtBpK,KAAKuN,eAAiBhB,EAAYkB,aAClC9B,EAAKO,UAAUC,MAAMzC,MAAS,GAAEiC,EAAK5G,SACrC4G,EAAKO,UAAUC,MAAM3C,KAAY,GAALY,EAAS,MAAS,GAAEmF,EAAEnF,EAAI,OACtDuB,EAAKO,UAAUC,MAAM1C,IAAM,GAC3BkC,EAAKO,UAAUC,MAAMxC,OAAS,IAE9B3J,KAAKuN,eAAiBhB,EAAY8I,WAClC1J,EAAKO,UAAUC,MAAMxC,OAAU,GAAEgC,EAAK5G,SACtC4G,EAAKO,UAAUC,MAAM1C,IAAW,GAALW,EAAS,MAAS,GAAEmF,EAAEnF,EAAI,OACrDuB,EAAKO,UAAUC,MAAMzC,MAAQ,GAC7BiC,EAAKO,UAAUC,MAAM3C,KAAO,IAEhCmC,EAAKA,KAAKkJ,OAAOlJ,EAAK5G,KAAM/E,KAAKkN,gBAAgB,GAEzD,CACA6G,kBAAAA,CAAmB1B,GAEf,IAAK,MAAMtO,KAASsO,EAAS,CACzB,MAAML,EAAWhS,KAAKmN,UAAUpJ,GAChC,GAAKiO,EAASvG,SAGVuG,EAAShG,KACT,OAAOjI,CAEf,CAEA,IAAK,MAAMA,KAASsO,EAAS,CACzB,MAAML,EAAWhS,KAAKmN,UAAUpJ,GAChC,GAAIiO,EAASvG,SACTuG,EAASnG,YAAcmG,EAAStG,YAAc,EAC9C,OAEJ,IAAKsG,EAASvG,SAAWuG,EAAShG,KAC9B,OAAOjI,CAEf,CAEJ,CACAkK,oBAAAA,GACI,IAAIqH,GAAW,EACf,MAAMC,EAAgBvV,KAAKmN,UAAUvL,KAAKwI,GAAOkL,EAAWlL,EAAErF,KAAOqF,EAAEsB,YAAc,GAAK4J,IAC1FA,GAAW,EACX,MAAME,EAAcxV,KAAKmN,UAAUvL,KAAKwI,GAAOkL,EAAWlL,EAAEyB,YAAczB,EAAErF,KAAO,GAAKuQ,IAClFG,EAAe,IAAIzV,KAAKmN,WAAWuI,UACzCJ,GAAW,EACX,MAAMK,EAAcF,EACf7T,KAAKwI,GAAOkL,EAAWlL,EAAErF,KAAOqF,EAAEsB,YAAc,GAAK4J,IACrDI,UACLJ,GAAW,EACX,MAAMM,EAAYH,EACb7T,KAAKwI,GAAOkL,EAAWlL,EAAEyB,YAAczB,EAAErF,KAAO,GAAKuQ,IACrDI,UACL,IAAIG,EAAW,EACf,IAAK,IAAI9R,EAAQ,EAAGA,EAAQ/D,KAAKuO,OAAOhN,OAAQwC,IAAS,CACrD,MAAMoP,EAAOnT,KAAKuO,OAAOxK,GAEzB8R,GADiB7V,KAAKmN,UAAUpJ,GACXgB,KACrB,MAAM6F,IAAQ2K,EAAcxR,IAAU6R,EAAU7R,EAAQ,IAClD8G,IAAQ2K,EAAYzR,IAAU4R,EAAY5R,EAAQ,IACxD,GAAI6G,GAAOC,EAAK,CACZ,MAAM4E,EAAYvE,EAAMnH,GAAQ,GAC1B2L,EAAcxE,EAAMnH,EAAQ,EAAG/D,KAAKmN,UAAU5L,QAC9CuS,EAAkB9T,KAAK+T,mBAAmBtE,GAC1CuE,EAAiBhU,KAAK+T,mBAAmBrE,GACzCoG,EAA2C,iBAApBhC,IACxB9T,KAAKmN,UAAU2G,GAAiBrI,QAC/BsK,EAAyC,iBAAnB/B,IACvBhU,KAAKmN,UAAU6G,GAAgBvI,QAChCqK,GACAH,EAAY5R,KACX8R,EAAW,GAAK7V,KAAK+N,sBACtB/N,KAAKgW,WAAW7C,EAAM3G,EAAUyJ,SAE3BF,GACLR,EAAcxR,KACb8R,EAAW7V,KAAKgN,cAAgBhN,KAAKkO,oBACtClO,KAAKgW,WAAW7C,EAAM3G,EAAU0J,SAGhClW,KAAKgW,WAAW7C,EAAM3G,EAAU2J,SAExC,MACSvL,IAAQC,EACb7K,KAAKgW,WAAW7C,EAAM3G,EAAUyJ,UAE1BrL,GAAOC,EACb7K,KAAKgW,WAAW7C,EAAM3G,EAAU0J,SAGhClW,KAAKgW,WAAW7C,EAAM3G,EAAU4J,QAExC,CACJ,CACAJ,UAAAA,CAAW7C,EAAMkD,GACb9O,EAAY4L,EAAKjH,UAAW,WAAYmK,IAAU7J,EAAU2J,UAC5D5O,EAAY4L,EAAKjH,UAAW,UAAWmK,IAAU7J,EAAU4J,SAC3D7O,EAAY4L,EAAKjH,UAAW,UAAWmK,IAAU7J,EAAU0J,SAC3D3O,EAAY4L,EAAKjH,UAAW,UAAWmK,IAAU7J,EAAUyJ,QAC/D,CACAjF,mBAAAA,GACI,MAAMxM,EAAU2D,SAAS2K,cAAc,OAEvC,OADAtO,EAAQgD,UAAY,iBACbhD,CACX,CACA0M,mBAAAA,GACI,MAAM1M,EAAU2D,SAAS2K,cAAc,OAEvC,OADAtO,EAAQgD,UAAY,iBACbhD,CACX,CACAqM,eAAAA,GACI,MAAMrM,EAAU2D,SAAS2K,cAAc,OACjCwD,EAAuBtW,KAAKuN,eAAiBhB,EAAYkB,WACzD,aACA,WAEN,OADAjJ,EAAQgD,UAAa,wBAAuB8O,IACrC9R,CACX,CACA1C,OAAAA,GACI9B,KAAKwO,cAAc1M,UACnB9B,KAAK0O,cAAc5M,UACnB9B,KAAK4O,iBAAiB9M,UACtB,IAAK,IAAIsI,EAAI,EAAGA,EAAIpK,KAAKwE,QAAQpF,SAASmC,OAAQ6I,IAC9C,GAAIpK,KAAKwE,QAAQpF,SAASwO,KAAKxD,KAAOpK,KAAKwE,QAAS,CAChDxE,KAAKwE,QAAQyO,YAAYjT,KAAKwE,SAC9B,KACJ,CAEJ,IAAK,MAAMwN,KAAYhS,KAAKmN,UACxB6E,EAASlQ,UAEb9B,KAAKwE,QAAQ6C,QACjB,ECntBG,MAAMkP,UAAiB7Q,EAC1B,gBAAIiJ,GACA,OAAO3O,KAAKwW,UAAU7H,YAC1B,CACA,mBAAIE,GACA,OAAO7O,KAAKwW,UAAU3H,eAC1B,CACA,eAAInD,GACA,OAAO1L,KAAKwW,UAAU9K,WAC1B,CACA,eAAIG,GACA,OAAO7L,KAAKwW,UAAU3K,WAC1B,CACA,eAAIyB,GACA,OAAOtN,KAAKwW,UAAUlJ,WAC1B,CACA,QAAIvI,GACA,OAAO/E,KAAKwW,UAAUzR,IAC1B,CACA,kBAAIkI,GACA,OAAOjN,KAAKwW,UAAUvJ,cAC1B,CACAtN,WAAAA,CAAYuM,EAAW1I,GACnB,IAAIjB,EACJxC,QACAC,KAAKyW,UAAY,GACjBzW,KAAK0W,eAAgB,EACrB1W,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKuN,aAA8C,QAA9BhL,EAAKiB,EAAQ8J,mBAAgC,IAAP/K,EAAgBA,EAAKgK,EAAY8I,SAC5FrV,KAAKwE,QAAU2D,SAAS2K,cAAc,OACtC9S,KAAKwE,QAAQgD,UAAY,iBACzB0E,EAAUiF,YAAYnR,KAAKwE,SAC3BxE,KAAKwW,UAAY,IAAI1J,EAAU9M,KAAKwE,QAAS,CACzC8I,YAAatN,KAAKuN,aAClBuD,oBAAoB,EACpBO,WAAY7N,EAAQ6N,aAIxBrR,KAAK4W,WAAW7U,SAAS8U,IACrB,MAAMxQ,EAAa,IAAIX,EAAoBmR,EAAKC,2BAA0B,KACtE9W,KAAK+W,iBACL/W,KAAK2W,aAAaxS,UAAK1D,EAAU,KAE/BuW,EAAW,CACbH,OACAxQ,WAAY,CACRvE,QAASA,KACLuE,EAAWvE,SAAS,IAIhC9B,KAAKyW,UAAU3S,KAAKkT,GACpBH,EAAK5J,eAAiBjN,KAAKwW,UAAUvJ,cAAc,IAEvDjN,KAAK+F,eAAe/F,KAAK2W,aAAc3W,KAAKwW,UAAU/H,cAAa,KAC/DzO,KAAK2W,aAAaxS,UAAK1D,EAAU,IACjCT,KAAKwW,UAAU7H,cAAa,KAC5B3O,KAAK2W,aAAaxS,MAAM,IACxBnE,KAAKwW,UAAU3H,iBAAgB,KAC/B7O,KAAK2W,aAAaxS,MAAM,IAEhC,CACA4N,cAAAA,CAAehO,EAAO0H,GAClBzL,KAAKwW,UAAUzE,eAAehO,EAAO0H,EACzC,CACAwL,OAAAA,CAAQJ,EAAM9R,EAAMhB,EAA+B8O,QAA1B,IAAL9O,IAAAA,EAAQ/D,KAAKwW,UAAUjV,aAAkB,IAAVsR,IAAAA,GAAa,GAC5D,MAAMxM,EAAawQ,EAAKC,2BAA0B,KAC9C9W,KAAK+W,iBACL/W,KAAK2W,aAAaxS,UAAK1D,EAAU,IAE/BuW,EAAW,CACbH,OACAxQ,WAAY,CACRvE,QAASA,KACLuE,EAAWvE,SAAS,IAIhC9B,KAAKyW,UAAUxS,OAAOF,EAAO,EAAGiT,GAChCH,EAAK5J,eAAiBjN,KAAKwW,UAAUvJ,eACrCjN,KAAKwW,UAAU/E,QAAQoF,EAAM9R,EAAMhB,EAAO8O,EAC9C,CACAV,WAAAA,CAAYpO,GACR,OAAO/D,KAAKwW,UAAUrE,YAAYpO,EACtC,CACA6S,QAAAA,GACI,OAAO5W,KAAKwW,UAAU7D,UAC1B,CACAuE,UAAAA,CAAWnT,EAAOP,QAAO,IAAPA,IAAAA,EAAU,CAAE2T,aAAa,IACvC,MAAMH,EAAWhX,KAAKyW,UAAUxS,OAAOF,EAAO,GAAG,GAMjD,OALA/D,KAAKwW,UAAU9B,WAAW3Q,GACrBP,EAAQ2T,cACTH,EAAS3Q,WAAWvE,UACpBkV,EAASH,KAAK/U,WAEXkV,CACX,CACApC,QAAAA,CAASpP,EAAM2F,GACX,GAAI3F,IAAS2F,EACT,OAEJ,MAAMQ,EAAO3L,KAAKkX,WAAW1R,EAAM,CAAE2R,aAAa,IAClDnX,KAAK0W,eAAgB,EACrB,IACI1W,KAAKiX,QAAQtL,EAAKkL,KAAMlL,EAAKkL,KAAK9R,KAAMoG,GAAI,EAChD,CAAC,QAEGnL,KAAK0W,eAAgB,CACzB,CACJ,CACA7B,MAAAA,CAAO9P,EAAMkI,GACTjN,KAAKwW,UAAU3B,OAAO9P,EAAMkI,EAChC,CACA8J,cAAAA,GACQ/W,KAAK0W,gBAGL1W,KAAKoX,iBACLC,aAAarX,KAAKoX,gBAClBpX,KAAKoX,oBAAiB3W,GAE1B6G,EAAWtH,KAAKwE,QAAS,YACzBxE,KAAKoX,eAAiBpO,YAAW,KAC7BhJ,KAAKoX,oBAAiB3W,EACtBuG,EAAchH,KAAKwE,QAAS,WAAW,GACxC,KACP,CACA1C,OAAAA,GACI/B,MAAM+B,UACF9B,KAAKoX,iBACLC,aAAarX,KAAKoX,gBAClBpX,KAAKoX,oBAAiB3W,GAE1BT,KAAKyW,UAAU1U,SAASiV,IACpBA,EAAS3Q,WAAWvE,UACpBkV,EAASH,KAAK/U,SAAS,IAE3B9B,KAAKyW,UAAY,GACjBzW,KAAKwW,UAAU1U,UACf9B,KAAKwE,QAAQ6C,QACjB,EC5IG,MAAMiQ,EACT,gBAAIC,GACA,OAAOvX,KAAK2L,KAAK4L,YACrB,CACA,gBAAIC,GACA,OAAOxX,KAAK2L,KAAK6L,YACrB,CACA,iBAAIC,GACA,OAAOzX,KAAK2L,KAAK8L,aACrB,CACA,iBAAIC,GACA,OAAO1X,KAAK2L,KAAK+L,aACrB,CACA,YAAI3L,GACA,OAAO/L,KAAK2L,KAAKI,QACrB,CACA,QAAIC,GACA,OAAOhM,KAAK2L,KAAKK,IACrB,CACA,eAAIN,GACA,OAAO1L,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAKyX,cACLzX,KAAKuX,YACf,CACA,eAAI1L,GACA,OAAO7L,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAK0X,cACL1X,KAAKwX,YACf,CACA,yBAAIG,GACA,OAAO3X,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAKuX,aACLvX,KAAKyX,aACf,CACA,yBAAIG,GACA,OAAO5X,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAKwX,aACLxX,KAAK0X,aACf,CACA,kBAAIzK,GACA,OAAOjN,KAAKkN,eAChB,CACA,QAAInI,GACA,OAAO/E,KAAKsL,KAChB,CACA,WAAI9G,GACA,OAAOxE,KAAK2L,KAAKnH,OACrB,CACA,SAAIkF,GACA,OAAO1J,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAKiN,eACLjN,KAAK+E,IACf,CACA,UAAI4E,GACA,OAAO3J,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAK+E,KACL/E,KAAKiN,cACf,CACAtN,WAAAA,CAAYgM,EAAM2B,EAAaL,EAAgBlI,QAAI,IAAJA,IAAAA,EAAO,GAClD/E,KAAK2L,KAAOA,EACZ3L,KAAKsN,YAAcA,EACnBtN,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKkN,gBAAkBD,EACvBjN,KAAKsL,MAAQvG,EACb/E,KAAKoG,YAAcpG,KAAK2L,KAAKiH,aAAajP,IAClCA,EACA3D,KAAK2W,aAAaxS,KAAK,CACnBY,KAAM/E,KAAKsN,cAAgBf,EAAY8I,SACjC1R,EAAM+F,MACN/F,EAAMgG,OACZsD,eAAgBjN,KAAKsN,cAAgBf,EAAY8I,SAC3C1R,EAAMgG,OACNhG,EAAM+F,QAIhB1J,KAAK2W,aAAaxS,KAAK,CAAC,EAC5B,GAER,CACAkI,UAAAA,CAAWZ,GACHzL,KAAK2L,KAAKU,YACVrM,KAAK2L,KAAKU,WAAWZ,EAE7B,CACAoJ,MAAAA,CAAO9P,EAAMkI,GACTjN,KAAKsL,MAAQvG,EACb/E,KAAKkN,gBAAkBD,EACvBjN,KAAK2L,KAAKkJ,OAAO7U,KAAK0J,MAAO1J,KAAK2J,OACtC,CACA7H,OAAAA,GACI9B,KAAK2W,aAAa7U,UAClB9B,KAAKoG,YAAYtE,SACrB,EC5FG,MAAM+V,UAAmBnS,EAC5B,SAAIgE,GACA,OAAO1J,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAK+E,KACL/E,KAAKiN,cACf,CACA,UAAItD,GACA,OAAO3J,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAKiN,eACLjN,KAAK+E,IACf,CACA,eAAI2G,GACA,OAAgC,IAAzB1L,KAAKZ,SAASmC,OACf,EACAuJ,KAAKD,OAAO7K,KAAKZ,SAASwC,KAAI,CAACkW,EAAG/T,IAAU/D,KAAKwW,UAAU1E,cAAc/N,GACrE+T,EAAEH,sBACF,IACd,CACA,eAAI9L,GACA,OAAOf,KAAKF,OAAO5K,KAAKZ,SAASwC,KAAI,CAACkW,EAAG/T,IAAU/D,KAAKwW,UAAU1E,cAAc/N,GAC1E+T,EAAEF,sBACF/J,OAAOC,oBACjB,CACA,yBAAI6J,GACA,OAAO3X,KAAKwW,UAAU9K,WAC1B,CACA,yBAAIkM,GACA,OAAO5X,KAAKwW,UAAU3K,WAC1B,CACA,kBAAIoB,GACA,OAAOjN,KAAKkN,eAChB,CACA,QAAInI,GACA,OAAO/E,KAAKsL,KAChB,CACA,gBAAIiM,GACA,OAAOvX,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAK2X,sBACL3X,KAAK0L,WACf,CACA,iBAAI+L,GACA,OAAOzX,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAK0L,YACL1L,KAAK2X,qBACf,CACA,gBAAIH,GACA,OAAOxX,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAK4X,sBACL5X,KAAK6L,WACf,CACA,iBAAI6L,GACA,OAAO1X,KAAKsN,cAAgBf,EAAYkB,WAClCzN,KAAK6L,YACL7L,KAAK4X,qBACf,CACA,YAAI7L,GACA,GAA6B,IAAzB/L,KAAKZ,SAASmC,OACd,OAAOkL,EAAesL,OAE1B,MAAMC,EAAahY,KAAKZ,SAASwC,KAAKkW,QAA4B,IAAfA,EAAE/L,SAC/CU,EAAesL,OACfD,EAAE/L,WACR,OAAIiM,EAAWC,MAAMC,GAAMA,IAAMzL,EAAe+F,OACrC/F,EAAe+F,KAEjBwF,EAAWC,MAAMC,GAAMA,IAAMzL,EAAe8F,MAC1C9F,EAAe8F,IAEnB9F,EAAesL,MAC1B,CACA,YAAI3J,GACA,OAAOpO,KAAKwW,UAAUpI,QAC1B,CACA,YAAIA,CAAS1L,GACT1C,KAAKwW,UAAUpI,SAAW1L,CAC9B,CACA/C,WAAAA,CAAY2N,EAAawD,EAAoBM,EAAQrM,EAAMkI,EAAgBmB,EAAU+J,GAejF,GAdApY,QACAC,KAAKsN,YAAcA,EACnBtN,KAAK8Q,mBAAqBA,EAC1B9Q,KAAKoR,OAASA,EACdpR,KAAKoY,oBAAsBjX,EAAWoE,KACtCvF,KAAKZ,SAAW,GAChBY,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKqY,uBAAyB,IAAIpV,EAClCjD,KAAKsY,sBAAwBtY,KAAKqY,uBAAuB1U,MACzD3D,KAAKkN,gBAAkBD,EACvBjN,KAAKsL,MAAQvG,EACb/E,KAAKwE,QAAU2D,SAAS2K,cAAc,OACtC9S,KAAKwE,QAAQgD,UAAY,cACpB2Q,EAQA,CACD,MAAM9G,EAAa,CACfC,MAAO6G,EAAiBvW,KAAK2W,IAClB,CACH5M,KAAM4M,EAAgBC,KACtBzT,KAAMwT,EAAgBC,KAAKzT,KAC3B0G,UAAS8M,EAAgBC,gBAAgBlB,QACT7W,IAA5B8X,EAAgB9M,UACd8M,EAAgB9M,YAI9B1G,KAAM/E,KAAKiN,gBAEfjN,KAAKZ,SAAW+Y,EAAiBvW,KAAKkW,GAAMA,EAAEU,OAC9CxY,KAAKwW,UAAY,IAAI1J,EAAU9M,KAAKwE,QAAS,CACzC8I,YAAatN,KAAKsN,YAClB+D,aACAP,qBACAM,UAER,MA5BIpR,KAAKwW,UAAY,IAAI1J,EAAU9M,KAAKwE,QAAS,CACzC8I,YAAatN,KAAKsN,YAClBwD,qBACAM,WAEJpR,KAAKwW,UAAU3B,OAAO7U,KAAK+E,KAAM/E,KAAKiN,gBAwB1CjN,KAAKoO,SAAWA,EAChBpO,KAAK+F,eAAe/F,KAAK2W,aAAc3W,KAAKqY,uBAAwBrY,KAAKwW,UAAU/H,cAAa,KAC5FzO,KAAK2W,aAAaxS,KAAK,CAAC,EAAE,KAE9BnE,KAAKyY,qBACT,CACApM,UAAAA,CAAWZ,GACP,IAAK,MAAM5J,KAAS7B,KAAKZ,SACrByC,EAAMwK,WAAWZ,EAEzB,CACAiN,cAAAA,CAAe3U,GACX,GAAIA,EAAQ,GAAKA,GAAS/D,KAAKZ,SAASmC,OACpC,MAAM,IAAIiB,MAAM,iBAEpB,OAAOxC,KAAKwW,UAAU1E,cAAc/N,EACxC,CACA4U,eAAAA,CAAgB5U,EAAO0H,GACnB,GAAI1H,EAAQ,GAAKA,GAAS/D,KAAKZ,SAASmC,OACpC,MAAM,IAAIiB,MAAM,iBAEpB,GAAIxC,KAAKwW,UAAU1E,cAAc/N,KAAW0H,EACxC,OAEJ,MAAMmN,EAAuD,IAA/B5Y,KAAKwW,UAAUzJ,YAC7C/M,KAAKwW,UAAUzE,eAAehO,EAAO0H,GACrC,MAAMoN,EAAsD,IAA/B7Y,KAAKwW,UAAUzJ,aAGvCtB,GAAWmN,IACVnN,GAAWoN,IACb7Y,KAAKqY,uBAAuBlU,KAAKsH,EAEzC,CACAqN,SAAAA,CAAUtT,EAAM2F,GACZ,GAAI3F,IAAS2F,EACT,OAEJ,GAAI3F,EAAO,GAAKA,GAAQxF,KAAKZ,SAASmC,OAClC,MAAM,IAAIiB,MAAM,sBAEhBgD,EAAO2F,GACPA,IAEJnL,KAAKwW,UAAU5B,SAASpP,EAAM2F,GAC9B,MAAMtJ,EAAQ7B,KAAK+Y,aAAavT,GAChCxF,KAAKgZ,UAAUnX,EAAOsJ,EAC1B,CACA8N,YAAAA,CAAalV,GACT,GAAIA,EAAQ,GAAKA,GAAS/D,KAAKZ,SAASmC,OACpC,MAAM,IAAIiB,MAAM,iBAEpB,OAAOxC,KAAKwW,UAAUrE,YAAYpO,EACtC,CACAmV,WAAAA,CAAYnV,EAAOgB,GACf,GAAIhB,EAAQ,GAAKA,GAAS/D,KAAKZ,SAASmC,OACpC,MAAM,IAAIiB,MAAM,iBAEpBxC,KAAKwW,UAAUpE,WAAWrO,EAAOgB,EACrC,CACA8P,MAAAA,CAAO9P,EAAMkI,GACTjN,KAAKsL,MAAQ2B,EACbjN,KAAKkN,gBAAkBnI,EACvB/E,KAAKwW,UAAU3B,OAAO5H,EAAgBlI,EAC1C,CACAoU,QAAAA,CAASX,EAAMzT,EAAMhB,EAAO8O,GACxB,GAAI9O,EAAQ,GAAKA,EAAQ/D,KAAKZ,SAASmC,OACnC,MAAM,IAAIiB,MAAM,iBAEpBxC,KAAKwW,UAAU/E,QAAQ+G,EAAMzT,EAAMhB,EAAO8O,GAC1C7S,KAAKgZ,UAAUR,EAAMzU,EACzB,CACAqV,yBAAAA,CAA0BrV,GACtB,GAAIA,EAAQ,GAAKA,GAAS/D,KAAKZ,SAASmC,OACpC,MAAM,IAAIiB,MAAM,iBAEpB,OAAOxC,KAAKwW,UAAU7B,yBAAyB5Q,EACnD,CACAkP,WAAAA,CAAYlP,EAAOyN,GACf,GAAIzN,EAAQ,GAAKA,GAAS/D,KAAKZ,SAASmC,OACpC,MAAM,IAAIiB,MAAM,iBAGpB,OADAxC,KAAKwW,UAAU9B,WAAW3Q,EAAOyN,GAC1BxR,KAAK+Y,aAAahV,EAC7B,CACAiV,SAAAA,CAAUR,EAAMzU,GACZ/D,KAAKZ,SAAS6E,OAAOF,EAAO,EAAGyU,GAC/BxY,KAAKyY,qBACT,CACAM,YAAAA,CAAahV,GACT,MAAOlC,GAAS7B,KAAKZ,SAAS6E,OAAOF,EAAO,GAE5C,OADA/D,KAAKyY,sBACE5W,CACX,CACA4W,mBAAAA,GACIzY,KAAKoY,oBAAoBtW,UACzB9B,KAAKoY,oBAAsB,IAAI1S,EAAoBxE,EAAME,OAAOpB,KAAKZ,SAASwC,KAAKkW,GAAMA,EAAElF,cAAxC1R,EAAuDkD,IAKtGpE,KAAK2W,aAAaxS,KAAK,CAAEY,KAAMX,EAAE6I,gBAAiB,OAC/CjN,KAAKZ,SAASwC,KAAI,CAACkW,EAAG1N,IACrB0N,aAAaD,EACNC,EAAEQ,uBAAuB7M,IAC5BzL,KAAK2Y,gBAAgBvO,EAAGqB,EAAQ,IAGjCtK,EAAWoE,OAE1B,CACAzD,OAAAA,GACI9B,KAAKoY,oBAAoBtW,UACzB9B,KAAKwW,UAAU1U,UACf9B,KAAKZ,SAAS2C,SAASF,GAAUA,EAAMC,YACvC/B,MAAM+B,SACV,EC3OJ,SAASuX,EAASC,EAAcC,GAC5B,GAAID,aAAwBhC,EACxB,OAAOgC,EAEX,GAAIA,aAAwBzB,EACxB,OAAOwB,EAASC,EAAala,SAASma,EAAOD,EAAala,SAASmC,OAAS,EAAI,GAAIgY,GAExF,MAAM,IAAI/W,MAAM,eACpB,CACA,SAASgX,EAAShB,EAAMzT,EAAMkI,GAC1B,GAAIuL,aAAgBX,EAAY,CAC5B,MAAMzM,EAAS,IAAIyM,EAAW4B,EAAWjB,EAAKlL,aAAckL,EAAK1H,mBAAoB0H,EAAKpH,OAAQrM,EAAMkI,EAAgBuL,EAAKpK,UAC7H,IAAIsL,EAAY,EAChB,IAAK,IAAItP,EAAIoO,EAAKpZ,SAASmC,OAAS,EAAG6I,GAAK,EAAGA,IAAK,CAChD,MAAMvI,EAAQ2W,EAAKpZ,SAASgL,GACtBuP,EAAY9X,aAAiBgW,EAAahW,EAAMoL,eAAiBpL,EAAMkD,KAC7E,IAAIiO,EAAwB,IAAdwF,EAAKzT,KACb,EACA+F,KAAK2H,MAAO1N,EAAO4U,EAAanB,EAAKzT,MAC3C2U,GAAa1G,EAEH,IAAN5I,IACA4I,GAAWjO,EAAO2U,GAEtBtO,EAAO+N,SAASK,EAAS3X,EAAOoL,EAAgB+F,GAAUA,EAAS,GAAG,EAC1E,CACA,OAAO5H,CACX,CAEI,OAAO,IAAIkM,EAASkB,EAAK7M,KAAM8N,EAAWjB,EAAKlL,aAAcL,EAErE,CAoBO,SAAS2M,EAAgBpV,GAC5B,MAAMqV,EAAgBrV,EAAQqV,cAC9B,IAAKA,EACD,MAAM,IAAIrX,MAAM,wBAEpB,GAAI,gBAAgBsX,KAAKD,EAAcrS,WACnC,MAAO,GAEX,MAAMzD,EA3BH,SAAuBS,GAC1B,MAAMqV,EAAgBrV,EAAQqV,cAC9B,IAAKA,EACD,MAAM,IAAIrX,MAAM,wBAEpB,IAAIuX,EAAKF,EAAcG,kBACnBjW,EAAQ,EACZ,KAAOgW,IAAOvV,GAAWuV,IAAOF,EAAcI,kBAAoBF,GAC9DA,EAAKA,EAAGG,mBACRnW,IAEJ,OAAOA,CACX,CAekBoW,CAAcN,GAE5B,MAAO,IAAID,EADMC,EAAcA,cAAcA,cAAcA,eACrB9V,EAC1C,CACO,SAASqW,EAAoBC,EAAiBC,EAAUC,GAC3D,MAAMjN,EAoBH,SAAgC+M,EAAiBC,GACpD,OAAOA,EAAS/Y,OAAS,GAAM,EACzBkY,EAAWY,GACXA,CACV,CAxBwBG,CAAuBH,EAAiBC,GACtDG,EAcH,SAAiCF,GACpC,MAAqB,QAAdA,GAAqC,WAAdA,EACxBhO,EAAY8I,SACZ9I,EAAYkB,UACtB,CAlBiCiN,CAAwBH,GACrD,GAAIjN,IAAgBmN,EAAsB,CACtC,MAAOE,EAAMC,GAAU7Q,EAAKuQ,GAC5B,IAAIvW,EAAQ6W,EAIZ,MAHkB,UAAdL,GAAuC,WAAdA,IACzBxW,GAAS,GAEN,IAAI4W,EAAM5W,EACrB,CACK,CACD,MAAMA,EAAsB,UAAdwW,GAAuC,WAAdA,EAAyB,EAAI,EACpE,MAAO,IAAID,EAAUvW,EACzB,CACJ,CAWO,MAAM0V,EAAcnM,GAAgBA,IAAgBf,EAAYkB,WACjElB,EAAY8I,SACZ9I,EAAYkB,WAIlB,MAAMoN,EAAsBA,CAACrC,EAAMlL,KAC/B,MAAMvI,EAAOuI,IAAgBf,EAAY8I,SAAWmD,EAAKsC,IAAIpR,MAAQ8O,EAAKsC,IAAInR,OAC9E,OALG,SAA0B6O,GAC7B,QAASA,EAAKpZ,QAClB,CAGS2b,CAAiBvC,GAWf,CACH/T,KAAM,SACN/D,KAAM8X,EAAKpZ,SAASwC,KAAKkW,GAAM+C,EAAoB/C,EAAG2B,EAAWnM,MACjEvI,QAbsC,iBAA3ByT,EAAKjN,kBACL,CACH9G,KAAM,OACN/D,KAAM8X,EAAK7M,KAAKqP,SAChBjW,KAAMyT,EAAKjN,kBACXE,SAAS,GAGV,CAAEhH,KAAM,OAAQ/D,KAAM8X,EAAK7M,KAAKqP,SAAUjW,OAMpD,EAEE,MAAMkW,GACT,UAAI1Z,GACA,OAAOvB,KAAKkb,MAAQlb,KAAKkb,MAAM9b,SAASmC,OAAS,CACrD,CACA,eAAI+L,GACA,OAAOtN,KAAKmb,KAAK7N,WACrB,CACA,eAAIA,CAAYA,GACZ,GAAItN,KAAKmb,KAAK7N,cAAgBA,EAC1B,OAEJ,MAAM,KAAEvI,EAAI,eAAEkI,GAAmBjN,KAAKmb,KACtCnb,KAAKmb,KAAO3B,EAASxZ,KAAKmb,KAAMlO,EAAgBlI,GAChD/E,KAAKmb,KAAKtG,OAAO9P,EAAMkI,EAC3B,CACA,SAAIvD,GACA,OAAO1J,KAAKmb,KAAKzR,KACrB,CACA,UAAIC,GACA,OAAO3J,KAAKmb,KAAKxR,MACrB,CACA,gBAAI4N,GACA,OAAOvX,KAAKmb,KAAK5D,YACrB,CACA,iBAAIE,GACA,OAAOzX,KAAKmb,KAAK1D,aACrB,CACA,gBAAID,GACA,OAAOxX,KAAKmb,KAAKzD,aACrB,CACA,iBAAIA,GACA,OAAO1X,KAAKmb,KAAKzD,aACrB,CACA,UAAI0D,GACA,OAAOpb,KAAKqb,OAChB,CACA,UAAID,CAAO1Y,GACP1C,KAAKqb,QAAU3Y,EACf,MAAM4Y,EAAS,CAACtb,KAAKmb,MAMrB,KAAOG,EAAO/Z,OAAS,GAAG,CACtB,MAAMiX,EAAO8C,EAAOC,MAChB/C,aAAgBX,IAChBW,EAAKpK,SAAW1L,EAChB4Y,EAAOxX,QAAQ0U,EAAKpZ,UAE5B,CACJ,CACAoc,aAAAA,GACI,IAAIjZ,EACJ,OAAsC,QAA9BA,EAAKvC,KAAKyb,sBAAmC,IAAPlZ,OAAgB,EAASA,EAAGmZ,KAAK/P,IACnF,CACAgQ,gBAAAA,GACI,YAA+Blb,IAAxBT,KAAKyb,cAChB,CACAG,YAAAA,CAAajQ,GACT,IAAIpJ,EACJ,MAAM+X,EAAWV,EAAgBjO,EAAKnH,UAC/BwL,EAAGwI,GAAQxY,KAAK6b,QAAQvB,GAC/B,KAAM9B,aAAgBlB,GAClB,OAEJ,IAAoC,QAA9B/U,EAAKvC,KAAKyb,sBAAmC,IAAPlZ,OAAgB,EAASA,EAAGmZ,QAAUlD,EAC9E,OAEAxY,KAAK2b,oBACL3b,KAAK8b,oBAET,MAAMC,EAAmB,IACzB,SAASC,EAAgBC,EAAQC,GAC7B,IAAK,IAAI9R,EAAI,EAAGA,EAAI6R,EAAO7c,SAASmC,OAAQ6I,IAAK,CAC7C,MAAMvI,EAAQoa,EAAO7c,SAASgL,GAC1BvI,aAAiByV,EACbzV,IAAUqa,IACND,EAAOvD,eAAetO,GACtB6R,EAAOtD,gBAAgBvO,GAAG,GAG1B2R,EAAiBjY,KAAKjC,IAK9Bma,EAAgBna,EAAOqa,EAE/B,CACJ,CACAF,CAAgBhc,KAAKmb,KAAM3C,GAC3BxY,KAAKyb,eAAiB,CAAEC,KAAMlD,EAAMuD,oBACpC/b,KAAKmc,0BAA0BhY,MACnC,CACA2X,iBAAAA,GACI,IAAK9b,KAAKyb,eACN,OAEJ,MAAMM,EAAmB/b,KAAKyb,eAAeM,kBAC7C,SAASK,EAAwBH,GAC7B,IAAK,IAAIlY,EAAQkY,EAAO7c,SAASmC,OAAS,EAAGwC,GAAS,EAAGA,IAAS,CAC9D,MAAMlC,EAAQoa,EAAO7c,SAAS2E,GAC1BlC,aAAiByV,EACZyE,EAAiBM,SAASxa,IAC3Boa,EAAOtD,gBAAgB5U,GAAO,GAIlCqY,EAAwBva,EAEhC,CACJ,CACAua,CAAwBpc,KAAKmb,MAC7Bnb,KAAKyb,oBAAiBhb,EACtBT,KAAKmc,0BAA0BhY,MACnC,CACAmY,SAAAA,GACQtc,KAAK2b,oBAKL3b,KAAK8b,oBAGT,MAAO,CACHX,KAFSN,EAAoB7a,KAAKuc,UAAWvc,KAAKsN,aAGlD5D,MAAO1J,KAAK0J,MACZC,OAAQ3J,KAAK2J,OACb2D,YAAatN,KAAKsN,YAE1B,CACAxL,OAAAA,GACI9B,KAAKqG,WAAWvE,UAChB9B,KAAK2W,aAAa7U,UAClB9B,KAAKmc,0BAA0Bra,UAC/B9B,KAAKmb,KAAKrZ,UACV9B,KAAKyb,oBAAiBhb,EACtBT,KAAKwE,QAAQ6C,QACjB,CACA/D,KAAAA,GACI,MAAMgK,EAActN,KAAKmb,KAAK7N,YAC9BtN,KAAKmb,KAAO,IAAItD,EAAWvK,EAAatN,KAAK8Q,mBAAoB9Q,KAAKoR,OAAQpR,KAAKmb,KAAKpW,KAAM/E,KAAKmb,KAAKlO,eAAgBjN,KAAKqb,QACjI,CACAmB,WAAAA,CAAYC,EAAMC,GACd,MAAMpP,EAAcmP,EAAKnP,YACnB3D,EAAS2D,IAAgBf,EAAY8I,SAAWoH,EAAK9S,OAAS8S,EAAK/S,MACzE1J,KAAK2c,aAAaF,EAAKtB,KAAM7N,EAAaoP,EAAc/S,EAC5D,CACAgT,YAAAA,CAAaxB,EAAM7N,EAAaoP,EAAczP,GAC1CjN,KAAKmb,KAAOnb,KAAK4c,iBAAiBzB,EAAM7N,EAAaoP,EAAczP,EACvE,CACA2P,gBAAAA,CAAiBpE,EAAMlL,EAAaoP,EAAczP,GAC9C,IAAI7B,EACJ,GAAkB,WAAdoN,EAAK/T,KAAmB,CACxB,MACMrF,EADqBoZ,EAAK9X,KACIkB,KAAKib,IAC9B,CACHrE,KAAMxY,KAAK4c,iBAAiBC,EAAiBpD,EAAWnM,GAAcoP,EAAclE,EAAKzT,MACzF0G,QAASoR,EAAgBpR,YAGjCL,EAAS,IAAIyM,EAAWvK,EAAatN,KAAK8Q,mBAAoB9Q,KAAKoR,OAAQoH,EAAKzT,KAChFkI,EACAjN,KAAKqb,QAASjc,EAClB,MAEIgM,EAAS,IAAIkM,EAASoF,EAAaI,SAAStE,GAAOlL,EAAaL,EAAgBuL,EAAKzT,MAEzF,OAAOqG,CACX,CACA,QAAI+P,GACA,OAAOnb,KAAKkb,KAChB,CACA,QAAIC,CAAKA,GACL,MAAM4B,EAAU/c,KAAKkb,MACjB6B,IACAA,EAAQjb,UACR9B,KAAKyb,oBAAiBhb,EACtBT,KAAKwE,QAAQyO,YAAY8J,EAAQvY,UAErCxE,KAAKkb,MAAQC,EACbnb,KAAKwE,QAAQ2M,YAAYnR,KAAKkb,MAAM1W,SACpCxE,KAAKqG,WAAW3D,MAAQ1C,KAAKkb,MAAMtI,aAAaxO,IAC5CpE,KAAK2W,aAAaxS,KAAKC,EAAE,GAEjC,CAKA4Y,+BAAAA,GACI,IAAKhd,KAAKkb,MACN,OAEJ,MAAM6B,EAAU/c,KAAKmb,KAGrB,GAFA4B,EAAQvY,QAAQ6C,SAChBrH,KAAKkb,MAAQ,IAAIrD,EAAW4B,EAAWsD,EAAQzP,aAActN,KAAK8Q,mBAAoB9Q,KAAKoR,OAAQpR,KAAKmb,KAAKlO,eAAgBjN,KAAKmb,KAAKpW,KAAM/E,KAAKqb,SAClH,IAA5B0B,EAAQ3d,SAASmC,aAGhB,GAAgC,IAA5Bwb,EAAQ3d,SAASmC,OAAc,CAEpC,MAAM0b,EAAiBF,EAAQ3d,SAAS,GAC1B2d,EAAQ9J,YAAY,GAC5BnR,UACNib,EAAQjb,UACR9B,KAAKkb,MAAM/B,SAOXK,EAASyD,EAAgBA,EAAehQ,eAAgBgQ,EAAelY,MAAO2H,EAAOC,WAAY,EACrG,MAEI3M,KAAKkb,MAAM/B,SAAS4D,EAASrQ,EAAOC,WAAY,GAEpD3M,KAAKwE,QAAQ2M,YAAYnR,KAAKkb,MAAM1W,SACpCxE,KAAKqG,WAAW3D,MAAQ1C,KAAKkb,MAAMtI,aAAaxO,IAC5CpE,KAAK2W,aAAaxS,KAAKC,EAAE,GAEjC,CACA4G,IAAAA,CAAKsP,GACD,OAAOta,KAAKkd,gBAAgB5C,EAChC,CACAhF,QAAAA,CAASgF,GACL,OAAOta,KAAKkd,gBAAgB5C,GAAU,EAC1C,CACAiC,OAAAA,CAAQjC,GACJ,MAAM9B,EAAO8B,EAAWta,KAAK6b,QAAQvB,GAAU,GAAKta,KAAKmb,KACzD,OAAOnb,KAAKmd,UAAU3E,EAAMxY,KAAKsN,YACrC,CACA6P,SAAAA,CAAU3E,EAAMlL,EAAa/B,GACzB,MAAMuP,EAAM,CAAEnR,OAAQ6O,EAAK7O,OAAQD,MAAO8O,EAAK9O,OAC/C,GAAI8O,aAAgBlB,EAChB,MAAO,CAAEwD,MAAKnP,KAAM6M,EAAK7M,KAAMJ,qBAEnC,MAAMnM,EAAW,GACjB,IAAK,IAAIgL,EAAI,EAAGA,EAAIoO,EAAKpZ,SAASmC,OAAQ6I,IAAK,CAC3C,MAAMvI,EAAQ2W,EAAKpZ,SAASgL,GACtBgT,EAAwB5E,EAAKY,0BAA0BhP,GAC7DhL,EAAS0E,KAAK9D,KAAKmd,UAAUtb,EAAO4X,EAAWnM,GAAc8P,GACjE,CACA,MAAO,CAAEtC,MAAK1b,WAClB,CACA8d,eAAAA,CAAgB5C,EAAU5E,QAAO,IAAPA,IAAAA,GAAU,GAChC,MAAO2H,EAAM7E,GAAQxY,KAAK6b,QAAQvB,GAClC,KAAM9B,aAAgBlB,GAClB,MAAM,IAAI9U,MAAM,oBAEpB,IAAK,IAAI4H,EAAIiT,EAAK9b,OAAS,EAAG6I,GAAK,EAAGA,IAAK,CACvC,MAAMkT,EAAID,EAAKjT,GACTmT,EAAIjD,EAASlQ,IAAM,EAIzB,GAHkCsL,EAC5B6H,EAAI,GAAK,EACTA,EAAI,EAAID,EAAEle,SAASmC,OAErB,OAAO8X,EAASiE,EAAEle,SAASsW,EAAU6H,EAAI,EAAIA,EAAI,GAAI7H,EAE7D,CACA,OAAO2D,EAASrZ,KAAKmb,KAAMzF,EAC/B,CACA/V,WAAAA,CAAYmR,EAAoBM,EAAQ9D,GACpCtN,KAAK8Q,mBAAqBA,EAC1B9Q,KAAKoR,OAASA,EACdpR,KAAKqb,SAAU,EACfrb,KAAKyb,oBAAiBhb,EACtBT,KAAKqG,WAAa,IAAIF,EACtBnG,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKmc,0BAA4B,IAAIlZ,EACrCjD,KAAKwd,yBAA2Bxd,KAAKmc,0BAA0BxY,MAC/D3D,KAAKwE,QAAU2D,SAAS2K,cAAc,OACtC9S,KAAKwE,QAAQgD,UAAY,YACzBxH,KAAKmb,KAAO,IAAItD,EAAWvK,EAAawD,EAAoBM,EAAQ,EAAG,EAAGpR,KAAKqb,QACnF,CACAvJ,aAAAA,CAAcwI,GACV,MAAOK,EAAM5W,GAASgG,EAAKuQ,IACpB,CAAE2B,GAAUjc,KAAK6b,QAAQlB,GAChC,KAAMsB,aAAkBpE,GACpB,MAAM,IAAIrV,MAAM,yBAEpB,OAAOyZ,EAAOvD,eAAe3U,EACjC,CACAgO,cAAAA,CAAeuI,EAAU7O,GACjBzL,KAAK2b,oBACL3b,KAAK8b,oBAET,MAAOnB,EAAM5W,GAASgG,EAAKuQ,IACpB,CAAE2B,GAAUjc,KAAK6b,QAAQlB,GAChC,KAAMsB,aAAkBpE,GACpB,MAAM,IAAIrV,MAAM,yBAEpByZ,EAAOtD,gBAAgB5U,EAAO0H,EAClC,CACAmJ,QAAAA,CAAS6I,EAAgBjY,EAAM2F,GACvBnL,KAAK2b,oBACL3b,KAAK8b,oBAET,MAAO,CAAEG,GAAUjc,KAAK6b,QAAQ4B,GAChC,KAAMxB,aAAkBpE,GACpB,MAAM,IAAIrV,MAAM,oBAEpByZ,EAAOnD,UAAUtT,EAAM2F,EAC3B,CACAsG,OAAAA,CAAQ9F,EAAM5G,EAAMuV,GACZta,KAAK2b,oBACL3b,KAAK8b,oBAET,MAAOnB,EAAM5W,GAASgG,EAAKuQ,IACpBoD,EAAczB,GAAUjc,KAAK6b,QAAQlB,GAC5C,GAAIsB,aAAkBpE,EAAY,CAC9B,MAAMW,EAAO,IAAIlB,EAAS3L,EAAM8N,EAAWwC,EAAO3O,aAAc2O,EAAOhP,gBACvEgP,EAAO9C,SAASX,EAAMzT,EAAMhB,EAChC,KACK,CACD,MAAO4Z,KAAgB3N,GAAK,IAAI0N,GAAchI,WACvCkI,KAAgBC,GAAM,IAAIlD,GAAMjF,UACvC,IAAIoI,EAAiB,EACrB,MAAMC,EAA8BJ,EAAYvE,0BAA0BwE,GAC/B,iBAAhCG,IACPD,EAAiBpR,EAAOG,UAAUkR,IAExBJ,EAAY1K,YAAY2K,GAChC9b,UACN,MAAMkc,EAAY,IAAInG,EAAWoE,EAAO3O,YAAatN,KAAK8Q,mBAAoB9Q,KAAKoR,OAAQ6K,EAAOlX,KAAMkX,EAAOhP,eAAgBjN,KAAKqb,SACpIsC,EAAYxE,SAAS6E,EAAW/B,EAAOlX,KAAM6Y,GAC7C,MAAMK,EAAa,IAAI3G,EAAS2E,EAAOtQ,KAAMgS,EAAYrQ,YAAa2O,EAAOlX,MAC7EiZ,EAAU7E,SAAS8E,EAAYH,EAAgB,GAC3B,iBAAT/Y,GAAmC,UAAdA,EAAKN,OACjCM,EAAO,CAAEN,KAAM,QAASV,MAAO,IAEnC,MAAMyU,EAAO,IAAIlB,EAAS3L,EAAMgS,EAAYrQ,YAAa2O,EAAOlX,MAChEiZ,EAAU7E,SAASX,EAAMzT,EAAMhB,EACnC,CACJ,CACAsD,MAAAA,CAAOsE,EAAM6F,GACT,MAAM8I,EAAWV,EAAgBjO,EAAKnH,SACtC,OAAOxE,KAAK0U,WAAW4F,EAAU9I,EACrC,CACAkD,UAAAA,CAAW4F,EAAU9I,GACbxR,KAAK2b,oBACL3b,KAAK8b,oBAET,MAAOnB,EAAM5W,GAASgG,EAAKuQ,IACpBoD,EAAczB,GAAUjc,KAAK6b,QAAQlB,GAC5C,KAAMsB,aAAkBpE,GACpB,MAAM,IAAIrV,MAAM,oBAEpB,MAAM0b,EAAejC,EAAO7c,SAAS2E,GACrC,KAAMma,aAAwB5G,GAC1B,MAAM,IAAI9U,MAAM,oBAIpB,GAFAyZ,EAAOhJ,YAAYlP,EAAOyN,GAC1B0M,EAAapc,UACkB,IAA3Bma,EAAO7c,SAASmC,OAChB,OAAO2c,EAAavS,KAOxB,MAAMwS,EAAUlC,EAAO7c,SAAS,GAChC,GAA4B,IAAxBse,EAAanc,OAEb,OAAI4c,aAAmB7G,IAOvB2E,EAAOhJ,YAAY,EAAGzB,GAEtBxR,KAAKmb,KAAOgD,GAPDD,EAAavS,KAW5B,MAAOgS,KAAgB3N,GAAK,IAAI0N,GAAchI,WACvCkI,KAAgBC,GAAM,IAAIlD,GAAMjF,UACjC0I,EAAmBnC,EAAOvD,eAAe,GAE/CuD,EAAOhJ,YAAY,EAAGzB,GAEtB,MAAMxC,EAAQ2O,EAAYve,SAASwC,KAAI,CAAC0J,EAAOlB,IAAMuT,EAAY1E,aAAa7O,KAI9E,GADAuT,EAAY1K,YAAY2K,EAAapM,GAAQ1P,UACzCqc,aAAmBtG,EAAY,CAE/B7I,EAAM/K,OAAO2Z,EAAa,KAAMO,EAAQ/e,SAASwC,KAAKkW,GAAMA,EAAE/S,QAE9D,IAAK,IAAIqF,EAAI,EAAGA,EAAI+T,EAAQ/e,SAASmC,OAAQ6I,IAAK,CAC9C,MAAMvI,EAAQsc,EAAQ/e,SAASgL,GAC/BuT,EAAYxE,SAAStX,EAAOA,EAAMkD,KAAM6Y,EAAcxT,EAC1D,CAMA,KAAO+T,EAAQ/e,SAASmC,OAAS,GAC7B4c,EAAQlL,YAAY,EAE5B,KACK,CAED,MAAMgL,EAAa,IAAI3G,EAAS6G,EAAQxS,KAAM8N,EAAW0E,EAAQ7Q,aAAc6Q,EAAQpZ,MACjFsZ,EAAgBD,EAChBD,EAAQlR,eACRP,EAAOG,UAAUsR,EAAQlR,gBAC/B0Q,EAAYxE,SAAS8E,EAAYI,EAAeT,EACpD,CAEAO,EAAQrc,UAER,IAAK,IAAIsI,EAAI,EAAGA,EAAI4E,EAAMzN,OAAQ6I,IAC9BuT,EAAYzE,YAAY9O,EAAG4E,EAAM5E,IAErC,OAAO8T,EAAavS,IACxB,CACAkJ,MAAAA,CAAOnL,EAAOC,GACV,MAAO5E,EAAMkI,GAAkBjN,KAAKmb,KAAK7N,cAAgBf,EAAYkB,WAC/D,CAAC9D,EAAQD,GACT,CAACA,EAAOC,GACd3J,KAAKmb,KAAKtG,OAAO9P,EAAMkI,EAC3B,CACA4O,OAAAA,CAAQvB,EAAU9B,EAAkB6E,GAChC,QADkB,IAAJ7E,IAAAA,EAAOxY,KAAKmb,WAAU,IAAJkC,IAAAA,EAAO,IACf,IAApB/C,EAAS/Y,OACT,MAAO,CAAC8b,EAAM7E,GAElB,KAAMA,aAAgBX,GAClB,MAAM,IAAIrV,MAAM,oBAEpB,MAAOuB,KAAU4W,GAAQL,EACzB,GAAIvW,EAAQ,GAAKA,GAASyU,EAAKpZ,SAASmC,OACpC,MAAM,IAAIiB,MAAM,oBAEpB,MAAMX,EAAQ2W,EAAKpZ,SAAS2E,GAE5B,OADAsZ,EAAKvZ,KAAK0U,GACHxY,KAAK6b,QAAQlB,EAAM9Y,EAAOwb,EACrC,ECvjBG,MAAMiB,WAAkB5Y,EAC3B,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA,mBAAIC,GACA,OAAOxe,KAAKye,gBAChB,CACA,mBAAID,CAAgB9b,GAChB1C,KAAKye,iBAAmB/b,CAC5B,CACA/C,WAAAA,CAAYka,EAAe2E,QAAe,IAAfA,IAAAA,GAAkB,GACzCze,QACAC,KAAKye,iBAAmBD,EACxBxe,KAAKue,SAAW1E,EAChB7Z,KAAK+F,eAAeO,EAAmBtG,KAAKue,UAAWG,IACnD,GAAI1e,KAAK2F,WAKL,OAEJ,GAAI3F,KAAKwe,gBACL,OAEJ,IAAKxe,KAAKue,SAASI,aAaf,OAEJ,IT2HL,SAAsBna,GACzB,IAAIoa,EAAiBpa,EACrB,KAAOoa,aAAuD,EAASA,EAAe9W,YAAY,CAC9F,GAAI8W,EAAe9W,aAAeK,SAC9B,OAAO,EAIPyW,EAFKA,EAAe9W,sBAAsB+W,iBAEzBD,EAAe9W,WAAWgX,KAG1BF,EAAe9W,UAExC,CACA,OAAO,CACX,CS1IiBiX,CAAa/e,KAAKue,UAMnB,OAEJ,MAAM,MAAE7U,EAAK,OAAEC,GAAW+U,EAAMM,YAChChf,KAAK6U,OAAOnL,EAAOC,EAAO,IAElC,EC/CJ,MAAMsV,GAAelU,IACd,SAASmU,GAAS3E,GACrB,OAAQA,GACJ,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SAEX,QACI,MAAO,SAEnB,CACO,MAAM4E,WAAiBb,GAC1B,MAAIc,GACA,OAAOpf,KAAKqf,GAChB,CACA,QAAIta,GACA,OAAO/E,KAAKsf,QAAQva,IACxB,CACA,UAAIwa,GACA,OAAO/d,MAAMgE,KAAKxF,KAAKsf,QAAQE,UAAU5d,KAAKoO,GAAMA,EAAEtN,OAC1D,CACA,SAAIgH,GACA,OAAO1J,KAAKyf,SAAS/V,KACzB,CACA,UAAIC,GACA,OAAO3J,KAAKyf,SAAS9V,MACzB,CACA,iBAAI8N,GACA,OAAOzX,KAAKyf,SAAShI,aACzB,CACA,iBAAIC,GACA,OAAO1X,KAAKyf,SAAS/H,aACzB,CACA,gBAAIH,GACA,OAAOvX,KAAKyf,SAASlI,YACzB,CACA,gBAAIC,GACA,OAAOxX,KAAKyf,SAASjI,YACzB,CACA,eAAIkI,GACA,OAAO1f,KAAK2f,YAChB,CACA,UAAIvE,GACA,OAAOpb,KAAKyf,SAASrE,MACzB,CACA,UAAIA,CAAO1Y,GACP1C,KAAKyf,SAASrE,OAAS1Y,CAC3B,CACA/C,WAAAA,CAAY6D,GACRzD,MAAMoI,SAAS2K,cAAc,OAAQtP,EAAQoc,qBAC7C5f,KAAKqf,IAAMJ,GAAajU,OACxBhL,KAAKsf,QAAU,IAAIxa,IACnB9E,KAAK6f,aAAe,IAAI5c,EACxBjD,KAAK8f,YAAc9f,KAAK6f,aAAalc,MACrC3D,KAAK+f,UAAY,IAAI9c,EACrBjD,KAAKggB,SAAWhgB,KAAK+f,UAAUpc,MAC/B3D,KAAKigB,mBAAqB,IAAIhd,EAC9BjD,KAAKkgB,kBAAoBlgB,KAAKigB,mBAAmBtc,MACjD3D,KAAKmgB,yBAA2B,IAAIlb,EACpCjF,KAAKogB,kBAAoBpgB,KAAKmgB,yBAAyB9a,QACvDrF,KAAKwE,QAAQ2H,MAAMxC,OAAS,OAC5B3J,KAAKwE,QAAQ2H,MAAMzC,MAAQ,OAC3BlG,EAAQqW,cAAc1I,YAAYnR,KAAKwE,SACvCxE,KAAKyf,SAAW,IAAIxE,KAAWzX,EAAQsN,mBAAoBtN,EAAQ4N,OAAQ5N,EAAQ8J,aACnFtN,KAAKyf,SAASrE,SAAW5X,EAAQ4X,OACjCpb,KAAKwE,QAAQ2M,YAAYnR,KAAKyf,SAASjb,SACvCxE,KAAK6U,OAAO,EAAG,GAAG,GAClB7U,KAAK+F,eAAe5E,EAAWqE,MAAK,KAChC,IAAIjD,EACkC,QAArCA,EAAKvC,KAAKwE,QAAQqV,qBAAkC,IAAPtX,GAAyBA,EAAG0Q,YAAYjT,KAAKwE,QAAQ,IACnGxE,KAAKyf,SAAS7M,aAAY,KAC1B5S,KAAKmgB,yBAAyBhc,MAAM,IACpCjD,EAAME,IAAIpB,KAAKggB,SAAUhgB,KAAK8f,YAAa9f,KAAKkgB,kBAAhDhf,EAAmE,KACnElB,KAAKmgB,yBAAyBhc,MAAM,IACpCnE,KAAKmgB,yBACb,CACA9T,UAAAA,CAAWgU,EAAO5U,GACdzL,KAAKyf,SAAS1N,eAAe6H,EAAgByG,EAAM7b,SAAUiH,GAC7DzL,KAAKmgB,yBAAyBhc,MAClC,CACAmc,SAAAA,CAAUD,GACN,OAAOrgB,KAAKyf,SAAS3N,cAAc8H,EAAgByG,EAAM7b,SAC7D,CACA+b,aAAAA,CAAcF,GACVrgB,KAAKyf,SAAS7D,aAAayE,GAC3BrgB,KAAKwgB,iBAAiBH,EAC1B,CACAI,gBAAAA,CAAiBJ,GACb,OAAOrgB,KAAKyf,SAASjE,kBAAoB6E,CAC7C,CACAK,kBAAAA,GACI1gB,KAAKyf,SAAS3D,mBAClB,CACA6E,iBAAAA,GACI,OAAO3gB,KAAKyf,SAAS9D,kBACzB,CACA,6BAAIiF,GACA,OAAO5gB,KAAKyf,SAASjC,wBACzB,CACAqD,UAAAA,CAAWC,EAAOxG,EAAgBvV,QAAR,IAARuV,IAAAA,EAAW,CAAC,IAC1Bta,KAAKyf,SAAShO,QAAQqP,EAAO/b,QAAmCA,EAAO2H,EAAOC,WAAY2N,GAC1Fta,KAAK+f,UAAU5b,KAAK2c,EACxB,CACAC,aAAAA,CAAcD,EAAOtd,GACjB,IAAKxD,KAAKsf,QAAQ0B,IAAIF,EAAM1B,IACxB,MAAM,IAAI5c,MAAM,qBAEpB,MAAMoL,EAAO5N,KAAKsf,QAAQ2B,IAAIH,EAAM1B,IAC9BzT,EAAO3L,KAAKyf,SAASpY,OAAOyZ,EAAOpU,EAAOC,YAOhD,GANIiB,KAAUpK,aAAyC,EAASA,EAAQ2T,eACpEvJ,EAAKvH,WAAWvE,UAChB8L,EAAKlL,MAAMZ,UACX9B,KAAKsf,QAAQhb,OAAOwc,EAAM1B,IAC1Bpf,KAAK6f,aAAa1b,KAAK2c,MAErBtd,aAAyC,EAASA,EAAQ0d,aAAelhB,KAAK2f,eAAiBmB,EAAO,CACxG,MAAMvB,EAAS/d,MAAMgE,KAAKxF,KAAKsf,QAAQE,UACvCxf,KAAKwgB,iBAAiBjB,EAAOhe,OAAS,EAAIge,EAAO,GAAG7c,WAAQjC,EAChE,CACA,OAAOkL,CACX,CACAwV,QAAAA,CAAS/B,GACL,IAAI7c,EACJ,OAAuC,QAA/BA,EAAKvC,KAAKsf,QAAQ2B,IAAI7B,UAAwB,IAAP7c,OAAgB,EAASA,EAAGG,KAC/E,CACA8d,gBAAAA,CAAiBM,GACT9gB,KAAK2f,eAAiBmB,IAGtB9gB,KAAK2f,cACL3f,KAAK2f,aAAayB,WAAU,GAE5BN,GACAA,EAAMM,WAAU,GAEpBphB,KAAK2f,aAAemB,EACpB9gB,KAAKigB,mBAAmB9b,KAAK2c,GACjC,CACAO,WAAAA,CAAYP,GACR9gB,KAAK+gB,cAAcD,EACvB,CACAQ,UAAAA,CAAW9d,GACP,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQsd,MAAO,CAChB,IAAK9gB,KAAK0f,YACN,OAEJlc,EAAQsd,MAAQ9gB,KAAK0f,WACzB,CACA,MAAMpF,EAAWV,EAAgBpW,EAAQsd,MAAMtc,SACzCwG,EAA+C,QAAvCzI,EAAKvC,KAAKyf,SAASzU,KAAKsP,UAA8B,IAAP/X,OAAgB,EAASA,EAAGoJ,KACzF3L,KAAKwgB,iBAAiBxV,EAC1B,CACAuW,cAAAA,CAAe/d,GACX,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQsd,MAAO,CAChB,IAAK9gB,KAAK0f,YACN,OAEJlc,EAAQsd,MAAQ9gB,KAAK0f,WACzB,CACA,MAAMpF,EAAWV,EAAgBpW,EAAQsd,MAAMtc,SACzCwG,EAAmD,QAA3CzI,EAAKvC,KAAKyf,SAASnK,SAASgF,UAA8B,IAAP/X,OAAgB,EAASA,EAAGoJ,KAC7F3L,KAAKwgB,iBAAiBxV,EAC1B,CACA6J,MAAAA,CAAOnL,EAAOC,EAAQ6X,IACAA,QAAiDA,EAAe9X,IAAU1J,KAAK0J,OAASC,IAAW3J,KAAK2J,UAI1H3J,KAAKyf,SAASjb,QAAQ2H,MAAMxC,OAAU,GAAEA,MACxC3J,KAAKyf,SAASjb,QAAQ2H,MAAMzC,MAAS,GAAEA,MACvC1J,KAAKyf,SAAS5K,OAAOnL,EAAOC,GAChC,CACA7H,OAAAA,GACI9B,KAAKigB,mBAAmBne,UACxB9B,KAAK+f,UAAUje,UACf9B,KAAK6f,aAAa/d,UAClB,IAAK,MAAMgf,KAAS9gB,KAAKuf,OACrBuB,EAAMhf,UAEV9B,KAAKyf,SAAS3d,UACd/B,MAAM+B,SACV,ECvMG,MAAM2f,GAIT,eAAI/V,GACA,OAAO1L,KAAK0hB,UAAUhW,WAC1B,CAIA,eAAIG,GACA,OAAO7L,KAAK0hB,UAAU7V,WAC1B,CAIA,SAAInC,GACA,OAAO1J,KAAK0hB,UAAUhY,KAC1B,CAIA,UAAIC,GACA,OAAO3J,KAAK0hB,UAAU/X,MAC1B,CAIA,UAAIpI,GACA,OAAOvB,KAAK0hB,UAAUngB,MAC1B,CAIA,eAAI+L,GACA,OAAOtN,KAAK0hB,UAAUpU,WAC1B,CAIA,UAAIqU,GACA,OAAO3hB,KAAK0hB,UAAUC,MAC1B,CAIA,uBAAIC,GACA,OAAO5hB,KAAK0hB,UAAUE,mBAC1B,CAKA,qBAAIxB,GACA,OAAOpgB,KAAK0hB,UAAUtB,iBAC1B,CAIA,gBAAIzR,GACA,OAAO3O,KAAK0hB,UAAU/S,YAC1B,CAIA,mBAAIE,GACA,OAAO7O,KAAK0hB,UAAU7S,eAC1B,CACAlP,WAAAA,CAAY+hB,GACR1hB,KAAK0hB,UAAYA,CACrB,CAIAG,aAAAA,CAAcre,GACVxD,KAAK0hB,UAAUG,cAAcre,EACjC,CAKAse,WAAAA,CAAYzB,EAAO7O,GACfxR,KAAK0hB,UAAUI,YAAYzB,EAAO7O,EACtC,CAIAuQ,KAAAA,GACI/hB,KAAK0hB,UAAUK,OACnB,CAIAZ,QAAAA,CAAS/B,GACL,OAAOpf,KAAK0hB,UAAUP,SAAS/B,EACnC,CAIAvK,MAAAA,CAAOnL,EAAOC,GACV,OAAO3J,KAAK0hB,UAAU7M,OAAOnL,EAAOC,EACxC,CAIAqY,QAAAA,CAASxe,GACL,OAAOxD,KAAK0hB,UAAUM,SAASxe,EACnC,CAIAye,SAAAA,CAAUzc,EAAM2F,GACZnL,KAAK0hB,UAAUO,UAAUzc,EAAM2F,EACnC,CAIA2R,QAAAA,CAASpc,GACLV,KAAK0hB,UAAU5E,SAASpc,EAC5B,CAEAsa,MAAAA,GACI,OAAOhb,KAAK0hB,UAAU1G,QAC1B,CAIA1X,KAAAA,GACItD,KAAK0hB,UAAUpe,OACnB,EAEG,MAAM4e,GAIT,eAAIxW,GACA,OAAO1L,KAAK0hB,UAAUhW,WAC1B,CAIA,eAAIG,GACA,OAAO7L,KAAK0hB,UAAU7V,WAC1B,CAIA,SAAInC,GACA,OAAO1J,KAAK0hB,UAAUhY,KAC1B,CAIA,UAAIC,GACA,OAAO3J,KAAK0hB,UAAU/X,MAC1B,CAIA,UAAIgY,GACA,OAAO3hB,KAAK0hB,UAAUC,MAC1B,CAIA,qBAAIvB,GACA,OAAOpgB,KAAK0hB,UAAUtB,iBAC1B,CAIA,uBAAIwB,GACA,OAAO5hB,KAAK0hB,UAAUE,mBAC1B,CAIA,gBAAIjT,GACA,OAAO3O,KAAK0hB,UAAU/S,YAC1B,CAIA,mBAAIE,GACA,OAAO7O,KAAK0hB,UAAU7S,eAC1B,CAIA,aAAIsT,GACA,MAAMC,EAAU,IAAInf,EACdoD,EAAarG,KAAK0hB,UAAUS,WAAW/d,IACzCge,EAAQje,KAAKke,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGle,GAAI,CAAEme,IAAKviB,OAAQ,IAMpE,OAJAoiB,EAAQtgB,QAAU,KACduE,EAAWvE,UACXsgB,EAAQtgB,SAAS,EAEdsgB,EAAQze,KACnB,CACAhE,WAAAA,CAAY+hB,GACR1hB,KAAK0hB,UAAYA,CACrB,CAIAI,WAAAA,CAAYzB,GACRrgB,KAAK0hB,UAAUI,YAAYzB,EAC/B,CAIAc,QAAAA,CAAS/B,GACL,OAAOpf,KAAK0hB,UAAUP,SAAS/B,EACnC,CAIA6C,SAAAA,CAAUzc,EAAM2F,GACZnL,KAAK0hB,UAAUO,UAAUzc,EAAM2F,EACnC,CAIA4W,KAAAA,GACI/hB,KAAK0hB,UAAUK,OACnB,CAIAlN,MAAAA,CAAOnL,EAAOC,GACV3J,KAAK0hB,UAAU7M,OAAOnL,EAAOC,EACjC,CAIAqY,QAAAA,CAASxe,GACL,OAAOxD,KAAK0hB,UAAUM,SAASxe,EACnC,CAIAsZ,QAAAA,CAASpc,GACLV,KAAK0hB,UAAU5E,SAASpc,EAC5B,CAIAsa,MAAAA,GACI,OAAOhb,KAAK0hB,UAAU1G,QAC1B,CAIA1X,KAAAA,GACItD,KAAK0hB,UAAUpe,OACnB,EAEG,MAAMkf,GAIT,SAAI9Y,GACA,OAAO1J,KAAK0hB,UAAUhY,KAC1B,CAIA,UAAIC,GACA,OAAO3J,KAAK0hB,UAAU/X,MAC1B,CAIA,iBAAI8N,GACA,OAAOzX,KAAK0hB,UAAUjK,aAC1B,CAIA,iBAAIC,GACA,OAAO1X,KAAK0hB,UAAUhK,aAC1B,CAIA,gBAAIH,GACA,OAAOvX,KAAK0hB,UAAUnK,YAC1B,CAIA,gBAAIC,GACA,OAAOxX,KAAK0hB,UAAUlK,YAC1B,CAIA,qBAAI4I,GACA,OAAOpgB,KAAK0hB,UAAUtB,iBAC1B,CAIA,iBAAIqC,GACA,OAAOziB,KAAK0hB,UAAUgB,aAC1B,CAIA,oBAAIC,GACA,OAAO3iB,KAAK0hB,UAAUkB,gBAC1B,CAIA,0BAAIC,GACA,OAAO7iB,KAAK0hB,UAAUoB,sBAC1B,CAIA,uBAAIlB,GACA,OAAO5hB,KAAK0hB,UAAUE,mBAC1B,CAIA,UAAID,GACA,OAAO3hB,KAAK0hB,UAAUnC,MAC1B,CAIA,eAAIjS,GACA,OAAOtN,KAAK0hB,UAAUpU,WAC1B,CACA,eAAIA,CAAY5K,GACZ1C,KAAK0hB,UAAUG,cAAc,CAAEvU,YAAa5K,GAChD,CACA/C,WAAAA,CAAY+hB,GACR1hB,KAAK0hB,UAAYA,CACrB,CAIAK,KAAAA,GACI/hB,KAAK0hB,UAAUK,OACnB,CAIAlN,MAAAA,CAAOnL,EAAOC,EAAQoZ,QAAK,IAALA,IAAAA,GAAQ,GAC1B/iB,KAAK0hB,UAAU7M,OAAOnL,EAAOC,EAAQoZ,EACzC,CAIAf,QAAAA,CAASxe,GACL,OAAOxD,KAAK0hB,UAAUM,SAASxe,EACnC,CAIAse,WAAAA,CAAYzB,EAAO7O,GACfxR,KAAK0hB,UAAUI,YAAYzB,EAAO7O,EACtC,CAIAyQ,SAAAA,CAAU5B,EAAO7c,GACbxD,KAAK0hB,UAAUO,UAAU5B,EAAO7c,EACpC,CAIA2d,QAAAA,CAAS/B,GACL,OAAOpf,KAAK0hB,UAAUP,SAAS/B,EACnC,CAIAtC,QAAAA,CAASpc,GACL,OAAOV,KAAK0hB,UAAU5E,SAASpc,EACnC,CAIAsa,MAAAA,GACI,OAAOhb,KAAK0hB,UAAU1G,QAC1B,CAIA1X,KAAAA,GACItD,KAAK0hB,UAAUpe,OACnB,EAEG,MAAM0f,GAIT,MAAI5D,GACA,OAAOpf,KAAK0hB,UAAUtC,EAC1B,CAIA,SAAI1V,GACA,OAAO1J,KAAK0hB,UAAUhY,KAC1B,CAIA,UAAIC,GACA,OAAO3J,KAAK0hB,UAAU/X,MAC1B,CAIA,iBAAI8N,GACA,OAAOzX,KAAK0hB,UAAUjK,aAC1B,CAIA,iBAAIC,GACA,OAAO1X,KAAK0hB,UAAUhK,aAC1B,CAIA,gBAAIH,GACA,OAAOvX,KAAK0hB,UAAUnK,YAC1B,CAIA,gBAAIC,GACA,OAAOxX,KAAK0hB,UAAUlK,YAC1B,CAIA,QAAIzS,GACA,OAAO/E,KAAK0hB,UAAU3c,IAC1B,CAIA,eAAIke,GACA,OAAOjjB,KAAK0hB,UAAUuB,WAC1B,CAIA,0BAAIH,GACA,OAAO9iB,KAAK0hB,UAAUoB,sBAC1B,CAIA,iBAAIJ,GACA,OAAO1iB,KAAK0hB,UAAUgB,aAC1B,CAIA,oBAAIE,GACA,OAAO5iB,KAAK0hB,UAAUkB,gBAC1B,CAIA,0BAAIC,GACA,OAAO7iB,KAAK0hB,UAAUmB,sBAC1B,CAIA,iBAAIJ,GACA,OAAOziB,KAAK0hB,UAAUe,aAC1B,CAIA,oBAAIE,GACA,OAAO3iB,KAAK0hB,UAAUiB,gBAC1B,CAIA,uBAAIf,GACA,OAAO5hB,KAAK0hB,UAAUE,mBAC1B,CAIA,qBAAIxB,GACA,OAAOpgB,KAAK0hB,UAAUtB,iBAC1B,CAIA,aAAI+B,GACA,OAAOniB,KAAK0hB,UAAUS,SAC1B,CAOA,cAAIe,GACA,OAAOljB,KAAK0hB,UAAUwB,UAC1B,CAOA,qBAAIC,GACA,OAAOnjB,KAAK0hB,UAAUyB,iBAC1B,CAOA,mBAAIC,GACA,OAAOpjB,KAAK0hB,UAAU0B,eAC1B,CAMA,mBAAIC,GACA,OAAOrjB,KAAK0hB,UAAU2B,eAC1B,CACA,4BAAIC,GACA,OAAOtjB,KAAK0hB,UAAU4B,wBAC1B,CAIA,UAAI3B,GACA,OAAO3hB,KAAK0hB,UAAUC,MAC1B,CAIA,UAAIpC,GACA,OAAOvf,KAAK0hB,UAAUnC,MAC1B,CAIA,eAAIgE,GACA,OAAOvjB,KAAK0hB,UAAU6B,WAC1B,CAIA,eAAI7D,GACA,OAAO1f,KAAK0hB,UAAUhC,WAC1B,CACA/f,WAAAA,CAAY+hB,GACR1hB,KAAK0hB,UAAYA,CACrB,CAIAK,KAAAA,GACI/hB,KAAK0hB,UAAUK,OACnB,CAIAZ,QAAAA,CAAS/B,GACL,OAAOpf,KAAK0hB,UAAU8B,cAAcpE,EACxC,CAIAvK,MAAAA,CAAOnL,EAAOC,EAAQoZ,QAAK,IAALA,IAAAA,GAAQ,GAC1B/iB,KAAK0hB,UAAU7M,OAAOnL,EAAOC,EAAQoZ,EACzC,CAIAf,QAAAA,CAASxe,GACL,OAAOxD,KAAK0hB,UAAUM,SAASxe,EACnC,CAIAse,WAAAA,CAAYzB,GACRrgB,KAAK0hB,UAAUI,YAAYzB,EAC/B,CAIAoD,QAAAA,CAASjgB,GACL,OAAOxD,KAAK0hB,UAAU+B,SAASjgB,EACnC,CAIAkgB,cAAAA,GACI,OAAO1jB,KAAK0hB,UAAUgC,gBAC1B,CAIArC,WAAAA,CAAYP,GACR9gB,KAAK0hB,UAAUL,YAAYP,EAC/B,CAIA6C,QAAAA,CAASvE,GACL,OAAOpf,KAAK0hB,UAAUP,SAAS/B,EACnC,CAIAwE,gBAAAA,CAAiBhW,EAAMiW,GACnB,OAAO7jB,KAAK0hB,UAAUkC,iBAAiBhW,EAAMiW,EACjD,CAIA/G,QAAAA,CAASpc,GACLV,KAAK0hB,UAAU5E,SAASpc,EAC5B,CAIAsa,MAAAA,GACI,OAAOhb,KAAK0hB,UAAU1G,QAC1B,CAIA1X,KAAAA,GACItD,KAAK0hB,UAAUpe,OACnB,CAIAge,UAAAA,CAAW9d,GACPxD,KAAK0hB,UAAUJ,WAAW9d,EAC9B,CAIA+d,cAAAA,CAAe/d,GACXxD,KAAK0hB,UAAUH,eAAe/d,EAClC,CACA+c,aAAAA,CAAcF,GACVrgB,KAAK0hB,UAAUnB,cAAcF,EAAMS,MACvC,CACAH,iBAAAA,GACI,OAAO3gB,KAAK0hB,UAAUf,mBAC1B,CACAD,kBAAAA,GACI1gB,KAAK0hB,UAAUhB,oBACnB,CACA,6BAAIE,GACA,OAAO5gB,KAAK0hB,UAAUd,yBAC1B,CAIAkD,cAAAA,CAAelW,EAAMpK,GACjB,OAAOxD,KAAK0hB,UAAUoC,eAAelW,EAAMpK,EAC/C,ECrqBG,MAAMugB,WAAoBre,EAC7B/F,WAAAA,CAAYoa,GACRha,QACAC,KAAK+Z,GAAKA,EACV/Z,KAAKgkB,eAAiB,IAAI7d,EAC1BnG,KAAKikB,wBAA0B,IAAI9d,EACnCnG,KAAKkkB,aAAe,IAAIjhB,EACxBjD,KAAKmkB,YAAcnkB,KAAKkkB,aAAavgB,MACrC3D,KAAK+F,eAAe/F,KAAKkkB,aAAclkB,KAAKgkB,eAAgBhkB,KAAKikB,yBACjEjkB,KAAKokB,WACT,CACAC,WAAAA,CAAYzgB,GACR,OAAO,CACX,CACAwgB,SAAAA,GACIpkB,KAAK+F,eAAe/F,KAAKkkB,aAActf,EAAsB5E,KAAK+Z,GAAI,aAAcpW,IAChF,GAAIA,EAAMxB,kBAAoBnC,KAAKqkB,YAAY1gB,GAE3C,YADAA,EAAMvB,iBAGV,MAAMiR,EAAU,IACTtL,EAAqB,aACrBA,EAAqB,YAE5B/H,KAAKikB,wBAAwBvhB,MAAQ,CACjCZ,QAASA,KACL,IAAK,MAAMwR,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,MACjC,GAGR,IAAK,MAAMkH,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAMjC,GAJApM,KAAK+Z,GAAG5S,UAAUjD,IAAI,cACtB8E,YAAW,IAAMhJ,KAAK+Z,GAAG5S,UAAUE,OAAO,eAAe,GACzDrH,KAAKgkB,eAAethB,MAAQ1C,KAAKW,QAAQgD,GACzC3D,KAAKkkB,aAAa/f,KAAKR,GACnBA,EAAM2gB,aAAc,CACpB3gB,EAAM2gB,aAAaC,cAAgB,OACnB5gB,EAAM2gB,aAAaE,MAAMjjB,OAAS,GAW9CoC,EAAM2gB,aAAa1jB,QAAQ,aAAc,mCAEjD,KACAgE,EAAsB5E,KAAK+Z,GAAI,WAAW,KAC1C/Z,KAAKikB,wBAAwBniB,UAC7B9B,KAAKgkB,eAAeliB,SAAS,IAErC,EC3DG,MAAM2iB,WAA4B/e,EACrC/F,WAAAA,CAAY6E,EAASkgB,GACjB3kB,QACAC,KAAKwE,QAAUA,EACfxE,KAAK0kB,UAAYA,EACjB1kB,KAAK2kB,OAAS,KACd3kB,KAAK4kB,mBACT,CACAC,WAAAA,CAAYzgB,GACRpE,KAAK2kB,OAASvgB,EAAEugB,OAChB3kB,KAAK0kB,UAAUG,YAAYzgB,EAC/B,CACA0gB,UAAAA,CAAW1gB,GACPA,EAAEhC,iBACEpC,KAAK0kB,UAAUI,YACf9kB,KAAK0kB,UAAUI,WAAW1gB,EAElC,CACA2gB,WAAAA,CAAY3gB,GACJpE,KAAK2kB,SAAWvgB,EAAEugB,SAClB3kB,KAAK2kB,OAAS,KACd3kB,KAAK0kB,UAAUK,YAAY3gB,GAEnC,CACA4gB,SAAAA,CAAU5gB,GACNpE,KAAK2kB,OAAS,KACd3kB,KAAK0kB,UAAUM,UAAU5gB,EAC7B,CACA6gB,MAAAA,CAAO7gB,GACHpE,KAAK0kB,UAAUO,OAAO7gB,EAC1B,CACAwgB,iBAAAA,GACI5kB,KAAK+F,eAAenB,EAAsB5E,KAAKwE,QAAS,aAAcJ,IAClEpE,KAAK6kB,YAAYzgB,EAAE,IACpB,IACHpE,KAAK+F,eAAenB,EAAsB5E,KAAKwE,QAAS,YAAaJ,IACjEpE,KAAK8kB,WAAW1gB,EAAE,IACnB,IACHpE,KAAK+F,eAAenB,EAAsB5E,KAAKwE,QAAS,aAAcJ,IAClEpE,KAAK+kB,YAAY3gB,EAAE,KAEvBpE,KAAK+F,eAAenB,EAAsB5E,KAAKwE,QAAS,WAAYJ,IAChEpE,KAAKglB,UAAU5gB,EAAE,KAErBpE,KAAK+F,eAAenB,EAAsB5E,KAAKwE,QAAS,QAASJ,IAC7DpE,KAAKilB,OAAO7gB,EAAE,IAEtB,EC5CG,MAAM8gB,WAA6BjjB,EACtC,eAAIkjB,GACA,OAAOnlB,KAAKwD,QAAQ2hB,WACxB,CACA,YAAItP,GACA,OAAO7V,KAAKwD,QAAQqS,QACxB,CACAlW,WAAAA,CAAY6D,GACRzD,QACAC,KAAKwD,QAAUA,CACnB,EAEG,SAAS4hB,GAAoB7K,GAChC,OAAQA,GACJ,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAI/X,MAAO,sBAAqB+X,MAElD,CACO,SAAS8K,GAAoBxP,GAChC,OAAQA,GACJ,IAAK,MACD,MAAO,QACX,IAAK,SACD,MAAO,QACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAIrT,MAAO,qBAAoBqT,MAEjD,CACA,MAAMyP,GAA0B,CAC5B5iB,MAAO,GACP+B,KAAM,cAEJ8gB,GAAe,CACjB7iB,MAAO,GACP+B,KAAM,cAIH,MAAM+gB,WAAmB9f,EAC5B,SAAI2Q,GACA,OAAOrW,KAAKylB,MAChB,CACA9lB,WAAAA,CAAY6E,EAAShB,GACjBzD,QACAC,KAAKwE,QAAUA,EACfxE,KAAKwD,QAAUA,EACfxD,KAAK0lB,QAAU,IAAIziB,EACnBjD,KAAKilB,OAASjlB,KAAK0lB,QAAQ/hB,MAC3B3D,KAAK2lB,mBAAqB,IAAI1iB,EAC9BjD,KAAKmjB,kBAAoBnjB,KAAK2lB,mBAAmBhiB,MAEjD3D,KAAK4lB,wBAA0B,IAAIC,IAAI7lB,KAAKwD,QAAQsiB,qBACpD9lB,KAAK+lB,IAAM,IAAItB,GAAoBzkB,KAAKwE,QAAS,CAC7CqgB,YAAaA,KAAe,EAC5BC,WAAa1gB,IACT,GAA0C,IAAtCpE,KAAK4lB,wBAAwB7gB,KAE7B,YADA/E,KAAKgmB,mBAGT,MAAMtc,EAAQ1J,KAAKwE,QAAQyhB,YACrBtc,EAAS3J,KAAKwE,QAAQ0hB,aAC5B,GAAc,IAAVxc,GAA0B,IAAXC,EACf,OAEJ,MAAMwc,EAAO/hB,EAAEgiB,cAAcxc,wBACvB2F,EAAInL,EAAEoP,QAAU2S,EAAK3c,KACrB6c,EAAIjiB,EAAEqP,QAAU0S,EAAK1c,IACrB6c,EAAWtmB,KAAKumB,kBAAkBvmB,KAAK4lB,wBAAyBrW,EAAG8W,EAAG3c,EAAOC,GAMnF,GAAI3J,KAAKwmB,cAAcpiB,IAAmB,OAAbkiB,EAGzB,YADAtmB,KAAKgmB,mBAGT,IAAKhmB,KAAKwD,QAAQijB,kBAAkBriB,EAAGkiB,GAEnC,YADAtmB,KAAKgmB,mBAGT,MAAMU,EAAuB,IAAIxB,GAAqB,CAClDC,YAAa/gB,EACbyR,SAAUyQ,IAMdtmB,KAAK2lB,mBAAmBxhB,KAAKuiB,GACzBA,EAAqBvkB,iBACrBnC,KAAKgmB,oBAGThmB,KAAK2mB,WAAWviB,GACXpE,KAAK4mB,gBACN5mB,KAAK4mB,cAAgBze,SAAS2K,cAAc,OAC5C9S,KAAK4mB,cAAcpf,UAAY,uBAC/BxH,KAAK6mB,eAAiB1e,SAAS2K,cAAc,OAC7C9S,KAAK6mB,eAAerf,UAAY,wBAChCxH,KAAKylB,OAAS,SACdzlB,KAAK4mB,cAAczV,YAAYnR,KAAK6mB,gBACpC7mB,KAAKwE,QAAQ2C,UAAUjD,IAAI,eAC3BlE,KAAKwE,QAAQsiB,OAAO9mB,KAAK4mB,gBAE7B5mB,KAAK+mB,cAAcT,EAAU5c,EAAOC,GACpC3J,KAAKylB,OAASa,EAAQ,EAE1BvB,YAAaA,KACT/kB,KAAKgmB,kBAAkB,EAE3BhB,UAAWA,KACPhlB,KAAKgmB,kBAAkB,EAE3Bf,OAAS7gB,IACLA,EAAEhC,iBACF,MAAMiU,EAAQrW,KAAKylB,OACnBzlB,KAAKgmB,mBACD3P,IAGAjS,EAAE4iB,kBACFhnB,KAAK0lB,QAAQvhB,KAAK,CAAE0R,SAAUQ,EAAO8O,YAAa/gB,IACtD,IAGRpE,KAAK+F,eAAe/F,KAAK0lB,QAAS1lB,KAAK2lB,mBAAoB3lB,KAAK+lB,IACpE,CACAkB,cAAAA,CAAenB,GACX9lB,KAAK4lB,wBAA0B,IAAIC,IAAIC,EAC3C,CACAoB,eAAAA,CAAgBC,GACZnnB,KAAKwD,QAAQ4jB,aAAeD,CAChC,CACArlB,OAAAA,GACI9B,KAAKgmB,mBACLjmB,MAAM+B,SACV,CAIA6kB,UAAAA,CAAWhjB,GACPA,EAAM6hB,GAAW6B,gBAAiB,CACtC,CAIAb,aAAAA,CAAc7iB,GACV,MAAMjB,EAAQiB,EAAM6hB,GAAW6B,eAC/B,MAAwB,kBAAV3kB,GAAuBA,CACzC,CACAqkB,aAAAA,CAAcT,EAAU5c,EAAOC,GAC3B,IAAIpH,EAAI+kB,EACR,IAAKtnB,KAAK6mB,eACN,OAEJ,MAAMU,EAAW7d,EAzHI,IA0Hf8d,EAAW7d,EAzHK,IA0HhB8d,EAAsB,SAAbnB,EACToB,EAAuB,UAAbpB,EACVqB,EAAqB,QAAbrB,EACRsB,EAAwB,WAAbtB,EACXuB,GAAcN,GAAYG,EAC1BI,GAAaP,GAAYE,EACzBM,GAAYP,GAAYG,EACxBK,GAAeR,GAAYI,EACjC,IAAI7iB,EAAO,EACX,MAAMkjB,EAAuG,QAAxFX,EAA0C,QAApC/kB,EAAKvC,KAAKwD,QAAQ4jB,oBAAiC,IAAP7kB,OAAgB,EAASA,EAAGwC,YAAyB,IAAPuiB,EAAgBA,EAAK/B,GACjH,eAArB0C,EAAYxjB,KACZM,EAAO4F,EAAMsd,EAAYvlB,MAAO,EAAG,KAAO,MAGtCmlB,GAAcC,KACd/iB,EAAO4F,EAAM,EAAGsd,EAAYvlB,MAAOgH,GAASA,IAE5Cqe,GAAYC,KACZjjB,EAAO4F,EAAM,EAAGsd,EAAYvlB,MAAOiH,GAAUA,IAGrD,MAAMmR,EAAM,CAAErR,IAAK,MAAOD,KAAM,MAAOE,MAAO,OAAQC,OAAQ,QAoB1Dke,GACA/M,EAAItR,KAAU,KAAO,EAAIzE,GAAb,IACZ+V,EAAIpR,MAAW,IAAM3E,EAAR,KAER+iB,EACLhN,EAAIpR,MAAW,IAAM3E,EAAR,IAERgjB,EACLjN,EAAInR,OAAY,IAAM5E,EAAR,IAETijB,IACLlN,EAAIrR,IAAS,KAAO,EAAI1E,GAAb,IACX+V,EAAInR,OAAY,IAAM5E,EAAR,KAElB/E,KAAK6mB,eAAe1a,MAAM1C,IAAMqR,EAAIrR,IACpCzJ,KAAK6mB,eAAe1a,MAAM3C,KAAOsR,EAAItR,KACrCxJ,KAAK6mB,eAAe1a,MAAMzC,MAAQoR,EAAIpR,MACtC1J,KAAK6mB,eAAe1a,MAAMxC,OAASmR,EAAInR,OACvCpC,EAAYvH,KAAK6mB,eAAgB,gCAAiCW,GAClEjgB,EAAYvH,KAAK6mB,eAAgB,kCAAmCU,GACpEhgB,EAAYvH,KAAK6mB,eAAgB,sBAAuBY,GACxDlgB,EAAYvH,KAAK6mB,eAAgB,uBAAwBa,GACzDngB,EAAYvH,KAAK6mB,eAAgB,qBAAsBc,GACvDpgB,EAAYvH,KAAK6mB,eAAgB,wBAAyBe,GAC1DrgB,EAAYvH,KAAK6mB,eAAgB,wBAAsC,WAAbP,EAC9D,CACAC,iBAAAA,CAAkB2B,EAAa3Y,EAAG8W,EAAG3c,EAAOC,GACxC,IAAIpH,EAAI+kB,EACR,MAAMa,EAA2H,QAAlGb,EAA0C,QAApC/kB,EAAKvC,KAAKwD,QAAQ4jB,oBAAiC,IAAP7kB,OAAgB,EAASA,EAAG6lB,sBAAmC,IAAPd,EAAgBA,EAAKhC,GAE9J,MADoD,eAA/B6C,EAAsB1jB,KAiB5C,SAAuCyjB,EAAa3Y,EAAG8W,EAAG3c,EAAOC,EAAQ0e,GAC5E,MAAMC,EAAM,IAAM/Y,EAAK7F,EACjB6e,EAAM,IAAMlC,EAAK1c,EACvB,GAAIue,EAAYlH,IAAI,SAAWsH,EAAKD,EAChC,MAAO,OAEX,GAAIH,EAAYlH,IAAI,UAAYsH,EAAK,IAAMD,EACvC,MAAO,QAEX,GAAIH,EAAYlH,IAAI,QAAUuH,EAAKF,EAC/B,MAAO,MAEX,GAAIH,EAAYlH,IAAI,WAAauH,EAAK,IAAMF,EACxC,MAAO,SAEX,IAAKH,EAAYlH,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlCmBwH,CAA8BN,EAAa3Y,EAAG8W,EAAG3c,EAAOC,EAAQwe,EAAsBzlB,OAmClG,SAAmCwlB,EAAa3Y,EAAG8W,EAAG3c,EAAOC,EAAQ0e,GACxE,GAAIH,EAAYlH,IAAI,SAAWzR,EAAI8Y,EAC/B,MAAO,OAEX,GAAIH,EAAYlH,IAAI,UAAYzR,EAAI7F,EAAQ2e,EACxC,MAAO,QAEX,GAAIH,EAAYlH,IAAI,QAAUqF,EAAIgC,EAC9B,MAAO,MAEX,GAAIH,EAAYlH,IAAI,WAAaqF,EAAI1c,EAAS0e,EAC1C,MAAO,SAEX,IAAKH,EAAYlH,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlDeyH,CAA0BP,EAAa3Y,EAAG8W,EAAG3c,EAAOC,EAAQwe,EAAsBzlB,MAC7F,CACAsjB,gBAAAA,GACQhmB,KAAK4mB,gBACL5mB,KAAKylB,YAAShlB,EACdT,KAAKwE,QAAQyO,YAAYjT,KAAK4mB,eAC9B5mB,KAAK4mB,mBAAgBnmB,EACrBT,KAAK6mB,oBAAiBpmB,EACtBT,KAAKwE,QAAQ2C,UAAUE,OAAO,eAEtC,EAEJme,GAAW6B,cAAgB,wCCxQpB,MAAMqB,WAAuBzmB,EAChCtC,WAAAA,GACII,OACJ,EAKG,MAAM4oB,WAAqBjjB,EAC9B,aAAIkjB,GACA,OAAO5oB,KAAK6oB,UAChB,CACA,YAAIC,GACA,OAAO9oB,KAAK+oB,SAChB,CACA,aAAIzI,GACA,OAAOtgB,KAAKgpB,UAChB,CACA,SAAItf,GACA,OAAO1J,KAAKipB,MAChB,CACA,UAAItf,GACA,OAAO3J,KAAKkpB,OAChB,CACAvpB,WAAAA,CAAYyf,EAAIsC,GACZ3hB,QACAC,KAAKof,GAAKA,EACVpf,KAAK0hB,UAAYA,EACjB1hB,KAAK6oB,YAAa,EAClB7oB,KAAK+oB,WAAY,EACjB/oB,KAAKgpB,YAAa,EAClBhpB,KAAKipB,OAAS,EACdjpB,KAAKkpB,QAAU,EACflpB,KAAKmpB,YAAc,CAAC,EACpBnpB,KAAKopB,uBAAyB,IAAIjjB,EAClCnG,KAAKqpB,sBAAwB,IAAIpmB,EACjCjD,KAAKspB,sBAAwBtpB,KAAKqpB,sBAAsB1lB,MACxD3D,KAAKupB,kBAAoB,IAAItmB,EAC7BjD,KAAKwpB,iBAAmBxpB,KAAKupB,kBAAkB5lB,MAE/C3D,KAAKypB,aAAe,IAAIxmB,EACxBjD,KAAK0pB,YAAc1pB,KAAKypB,aAAa9lB,MAErC3D,KAAKqY,uBAAyB,IAAIpV,EAClCjD,KAAKsY,sBAAwBtY,KAAKqY,uBAAuB1U,MACzD3D,KAAK2pB,wBAA0B,IAAI1mB,EACnCjD,KAAK4pB,uBAAyB5pB,KAAK2pB,wBAAwBhmB,MAC3D3D,KAAKigB,mBAAqB,IAAIhd,EAC9BjD,KAAKkgB,kBAAoBlgB,KAAKigB,mBAAmBtc,MACjD3D,KAAK6pB,gBAAkB,IAAI5mB,EAC3BjD,KAAK8pB,eAAiB9pB,KAAK6pB,gBAAgBlmB,MAC3C3D,KAAK+pB,uBAAyB,IAAI9mB,EAClCjD,KAAKgqB,sBAAwBhqB,KAAK+pB,uBAAuBpmB,MACzD3D,KAAK+F,eAAe/F,KAAKwpB,kBAAkB7lB,IACvC3D,KAAK6oB,WAAallB,EAAMilB,SAAS,IACjC5oB,KAAKkgB,mBAAmBvc,IACxB3D,KAAK+oB,UAAYplB,EAAMmlB,QAAQ,IAC/B9oB,KAAKsY,uBAAuB3U,IAC5B3D,KAAKgpB,WAAarlB,EAAM2c,SAAS,IACjCtgB,KAAKspB,uBAAuB3lB,IAC5B3D,KAAKipB,OAAStlB,EAAM+F,MACpB1J,KAAKkpB,QAAUvlB,EAAMgG,MAAM,IAC3B3J,KAAKopB,uBAAwBppB,KAAKqpB,sBAAuBrpB,KAAKupB,kBAAmBvpB,KAAKqY,uBAAwBrY,KAAKigB,mBAAoBjgB,KAAKypB,aAAczpB,KAAK6pB,gBAAiB7pB,KAAKypB,aAAczpB,KAAK2pB,wBAAyB3pB,KAAK+pB,uBAC9O,CACAE,aAAAA,GACI,OAAOjqB,KAAKmpB,WAChB,CACAe,UAAAA,CAAW7J,GACPrgB,KAAKopB,uBAAuB1mB,MAAQ1C,KAAK+pB,uBAAuBpmB,OAAOwmB,IACnEnqB,KAAKmpB,YAAcgB,EACnB9J,EAAM+J,OAAO,CACTC,OAAQF,GACV,GAEV,CACA9d,UAAAA,CAAWiU,GACPtgB,KAAK2pB,wBAAwBxlB,KAAK,CAAEmc,aACxC,CACAc,SAAAA,GACIphB,KAAK6pB,gBAAgB1lB,MACzB,CACAmmB,gBAAAA,CAAiBH,GACbnqB,KAAK+pB,uBAAuB5lB,KAAKgmB,EACrC,ECnFG,MAAMI,WAA8B5B,GAEvChpB,WAAAA,CAAYyf,EAAIsC,GACZ3hB,MAAMqf,EAAIsC,GACV1hB,KAAKwqB,gCAAkC,IAAIvnB,EAC3CjD,KAAKyqB,+BAAiCzqB,KAAKwqB,gCAAgC7mB,MAE3E3D,KAAK0qB,wBAA0B,IAAIznB,EAAQ,CACvCY,QAAQ,IAEZ7D,KAAK2qB,uBAAyB3qB,KAAK0qB,wBAAwB/mB,MAE3D3D,KAAK4qB,iBAAmB,IAAI3nB,EAC5BjD,KAAK6qB,gBAAkB7qB,KAAK4qB,iBAAiBjnB,MAC7C3D,KAAK+F,eAAe/F,KAAKwqB,gCAAiCxqB,KAAK0qB,wBAAyB1qB,KAAK4qB,iBACjG,CACAE,cAAAA,CAAepoB,GACX1C,KAAKwqB,gCAAgCrmB,KAAKzB,EAC9C,CACAqoB,OAAAA,CAAQpnB,GACJ3D,KAAK4qB,iBAAiBzmB,KAAKR,EAC/B,ECrBG,MAAMqnB,WAA6BT,GACtC,QAAI1T,CAAKA,GACL7W,KAAKirB,MAAQpU,CACjB,CACAlX,WAAAA,CAAYyf,EAAIsC,GACZ3hB,MAAMqf,EAAIsC,GACV1hB,KAAKkrB,sBAAwB,IAAIjoB,EAAQ,CACrCY,QAAQ,IAEZ7D,KAAKmrB,qBAAuBnrB,KAAKkrB,sBAAsBvnB,MACvD3D,KAAKorB,cAAgB,IAAInoB,EAAQ,CAAC,GAClCjD,KAAKqrB,aAAerrB,KAAKorB,cAAcznB,MACvC3D,KAAKsrB,cAAgB,IAAIroB,EAAQ,CAAC,GAClCjD,KAAKurB,aAAevrB,KAAKsrB,cAAc3nB,MACvC3D,KAAK+F,eAAe/F,KAAKkrB,sBAAuBlrB,KAAKorB,cAAeprB,KAAKsrB,cAC7E,CACAE,WAAAA,CAAYC,GACR,IAAIlpB,EACkB,QAArBA,EAAKvC,KAAKirB,aAA0B,IAAP1oB,GAAyBA,EAAGipB,YAAYC,EAC1E,CACA,cAAIA,GACA,IAAIlpB,EACJ,SAAgC,QAArBA,EAAKvC,KAAKirB,aAA0B,IAAP1oB,OAAgB,EAASA,EAAGkpB,aACxE,ECtBG,MAAMC,WAAsBhmB,EAC/B,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA,SAAI7U,GACA,OAAO1J,KAAKipB,MAChB,CACA,UAAItf,GACA,OAAO3J,KAAKkpB,OAChB,CACA,UAAImB,GACA,IAAI9nB,EACJ,OAA+B,QAAvBA,EAAKvC,KAAK2rB,eAA4B,IAAPppB,OAAgB,EAASA,EAAG8nB,MACvE,CACA1qB,WAAAA,CAAYyf,EAAIsC,EAAWa,GACvBxiB,QACAC,KAAKof,GAAKA,EACVpf,KAAK0hB,UAAYA,EACjB1hB,KAAKuiB,IAAMA,EACXviB,KAAKkpB,QAAU,EACflpB,KAAKipB,OAAS,EACdjpB,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAASqN,UAAY,EAC1B5rB,KAAKue,SAASpS,MAAM0f,QAAU,OAC9B7rB,KAAKue,SAASpS,MAAMxC,OAAS,OAC7B3J,KAAKue,SAASpS,MAAMzC,MAAQ,OAC5B1J,KAAKue,SAASpS,MAAM2f,SAAW,SAC/B,MAAMC,EAAe3jB,EAAWpI,KAAKue,UACrCve,KAAK+F,eAAe/F,KAAKuiB,IAAKwJ,EAAaxjB,YAAW,KAClDvI,KAAKuiB,IAAIgH,kBAAkBplB,KAAK,CAAEykB,WAAW,GAAO,IACpDmD,EAAatjB,WAAU,KACvBzI,KAAKuiB,IAAIgH,kBAAkBplB,KAAK,CAAEykB,WAAW,GAAQ,IACrDmD,EACR,CACAhK,KAAAA,GACI,MAAMpe,EAAQ,IAAI+kB,GAClB1oB,KAAKuiB,IAAIkH,aAAatlB,KAAKR,GACvBA,EAAMxB,kBAGVnC,KAAKue,SAASwD,OAClB,CACAlN,MAAAA,CAAOnL,EAAOC,GACV3J,KAAKipB,OAASvf,EACd1J,KAAKkpB,QAAUvf,EACf3J,KAAKuiB,IAAI8G,sBAAsBllB,KAAK,CAAEuF,QAAOC,WACzC3J,KAAKgsB,MACDhsB,KAAK2rB,SACL3rB,KAAKgsB,KAAK5B,OAAOpqB,KAAK2rB,QAAQtB,OAG1C,CACA4B,IAAAA,CAAK9B,GACDnqB,KAAK2rB,QAAUxB,EACfnqB,KAAKgsB,KAAOhsB,KAAKksB,cACrB,CACA9B,MAAAA,CAAOzmB,GACH,IAAIpB,EAAI+kB,EAERtnB,KAAK2rB,QAAUtJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtiB,KAAK2rB,SAAU,CAAEtB,OAAQhI,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA2B,QAAvB/f,EAAKvC,KAAK2rB,eAA4B,IAAPppB,OAAgB,EAASA,EAAG8nB,QAAS1mB,EAAM0mB,UAKnL,IAAK,MAAM8B,KAAO9J,OAAO+J,KAAKzoB,EAAM0mB,aACN5pB,IAAtBkD,EAAM0mB,OAAO8B,WACNnsB,KAAK2rB,QAAQtB,OAAO8B,GAId,QAApB7E,EAAKtnB,KAAKgsB,YAAyB,IAAP1E,GAAyBA,EAAG8C,OAAO,CAAEC,OAAQrqB,KAAK2rB,QAAQtB,QAC3F,CACArP,MAAAA,GACI,IAAIzY,EAAI+kB,EACR,MAAM+C,EAAuF,QAA7E/C,EAA6B,QAAvB/kB,EAAKvC,KAAK2rB,eAA4B,IAAPppB,OAAgB,EAASA,EAAG8nB,cAA2B,IAAP/C,EAAgBA,EAAK,CAAC,EAC3H,MAAO,CACHlI,GAAIpf,KAAKof,GACTsC,UAAW1hB,KAAK0hB,UAChB2I,OAAQhI,OAAO+J,KAAK/B,GAAQ9oB,OAAS,EAAI8oB,OAAS5pB,EAE1D,CACAqB,OAAAA,GACI,IAAIS,EACJvC,KAAKuiB,IAAIzgB,UACY,QAApBS,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAGT,UACzD/B,MAAM+B,SACV,ECpFG,MAAMuqB,WAAsBX,GAC/B,eAAIpe,CAAY5K,GACZ1C,KAAKuN,aAAe7K,CACxB,CACA,eAAI4K,GACA,OAAOtN,KAAKuN,YAChB,CACA,eAAI7B,GAIA,OAHmB1L,KAAKssB,YACPtsB,KAAKyrB,aACazrB,KAAKusB,iBAAmB,EAE/D,CACA,eAAI1gB,GAIA,OAHmB7L,KAAKssB,YACPtsB,KAAKyrB,aACazrB,KAAKwsB,iBAAmB,EAE/D,CACA,QAAIznB,GACA,OAAO/E,KAAKsL,KAChB,CACA,kBAAI2B,GACA,OAAOjN,KAAKkN,eAChB,CACA,kBAAID,CAAelI,GACf/E,KAAKkN,gBAAkBnI,CAC3B,CACA,mBAAI0nB,GACA,OAAOzsB,KAAKusB,gBAChB,CACA,mBAAIE,CAAgB/pB,GAChB1C,KAAKusB,iBAAoC,iBAAV7pB,EAAqBA,EAAQ,CAChE,CACA,mBAAIgqB,GACA,OAAO1sB,KAAKwsB,gBAChB,CACA,mBAAIE,CAAgBhqB,GAChB1C,KAAKwsB,iBACgB,iBAAV9pB,EAAqBA,EAAQmL,OAAOC,iBACnD,CACA,iBAAI6e,GACA,OAAO3sB,KAAK4sB,cAChB,CACA,iBAAID,CAAcjqB,GACd1C,KAAK4sB,eAAiBlqB,EACtB1C,KAAK6sB,OAAO1gB,MAAM2gB,QAAUpqB,EAAQ,GAAK,MAC7C,CACA/C,WAAAA,CAAYyf,EAAIsC,EAAWqL,EAAiBzf,EAAame,EAAYuB,GACjEjtB,MAAMqf,EAAIsC,EAAW,IAAIsJ,GAAqB5L,EAAIsC,IAClD1hB,KAAK+sB,gBAAkBA,EACvB/sB,KAAKitB,2BAA6B,IAAIhqB,EAAQ,CAAEY,QAAQ,IACxD7D,KAAK8W,0BAA4B9W,KAAKitB,2BAA2BtpB,MACjE3D,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKssB,WAAa,GAClBtsB,KAAKkN,gBAAkB,EACvBlN,KAAKsL,MAAQ,EACbtL,KAAKusB,iBAAmB,IACxBvsB,KAAKwsB,iBAAmB3e,OAAOC,kBAC/B9N,KAAKktB,aAAc,EACnBltB,KAAKmtB,aAAe,EACpBntB,KAAKuiB,IAAI1L,KAAO7W,KAChBA,KAAKuiB,IAAI2H,WAAWlqB,MACpBA,KAAKktB,YAAczB,EACnBzrB,KAAK4sB,eAAiBI,EACtBhtB,KAAKitB,2BAA2B9oB,KAAKnE,KAAKyrB,cAC1CzrB,KAAKuN,aAAeD,EACpBtN,KAAKwE,QAAQ2C,UAAUjD,IAAI,QAC3BlE,KAAK+F,eAAe/F,KAAKuiB,IAAIqH,wBAAwBjmB,IACjD,MAAM,UAAE2c,GAAc3c,GAChB,SAAEypB,GAAaptB,KAAK2rB,QAC1ByB,EAAS/gB,WAAWrM,KAAMsgB,EAAU,IACpCtgB,KAAKuiB,IAAIsI,iBAAiBlnB,IAC1B3D,KAAK2W,aAAaxS,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAC5CH,EAAsB5E,KAAKwE,QAAS,cAAe6oB,IACnDrtB,KAAKuiB,IAAI6I,cAAcjnB,KAAKkpB,EAAG,IAC/BzoB,EAAsB5E,KAAKwE,QAAS,cAAe6oB,IACnDrtB,KAAKuiB,IAAI+I,cAAcnnB,KAAKkpB,EAAG,KAEnCrtB,KAAK+F,eAAe/F,KAAKitB,2BAA4BjtB,KAAK8W,2BAA2BwW,IACjFttB,KAAKuiB,IAAI2I,sBAAsB/mB,KAAK,CAChCsnB,WAAY6B,GACd,IACFttB,KAAKuiB,IAAIiH,kBAAkBplB,IACtBpE,KAAK6sB,SAGNzoB,EAAEwkB,UACFthB,EAAWtH,KAAK6sB,OAAQ,WAGxB7lB,EAAchH,KAAK6sB,OAAQ,WAC/B,KAEJ7sB,KAAKutB,YACT,CACAlhB,UAAAA,CAAWiU,GACPtgB,KAAKuiB,IAAIlK,uBAAuBlU,KAAK,CAAEmc,aAC3C,CACAc,SAAAA,CAAU0H,GACN9oB,KAAKuiB,IAAItC,mBAAmB9b,KAAK,CAAE2kB,YACvC,CACA2C,UAAAA,GACI,OAAOzrB,KAAKktB,WAChB,CACA1B,WAAAA,CAAYgC,GACJxtB,KAAKktB,cAAgBM,IAGzBxtB,KAAKktB,YAAcM,EACfA,GACIxtB,KAAKoX,gBACLC,aAAarX,KAAKoX,gBAElBpX,KAAKytB,MACLztB,KAAKwE,QAAQ2M,YAAYnR,KAAKytB,OAIlCztB,KAAKoX,eAAiBpO,YAAW,KAC7B,IAAIzG,EACiB,QAApBA,EAAKvC,KAAKytB,YAAyB,IAAPlrB,GAAyBA,EAAG8E,QAAQ,GAClE,KAEPrH,KAAK2W,aAAaxS,KAAKqpB,EAAW,CAAEzoB,KAAM/E,KAAK0J,OAAU,CAAC,GAC1D1J,KAAKitB,2BAA2B9oB,KAAKqpB,GACzC,CACA3Y,MAAAA,CAAO9P,EAAMkI,GACTjN,KAAKsL,MAAQvG,EACb/E,KAAKkN,gBAAkBD,EACvB,MAAOvD,EAAOC,GAAU3J,KAAKsN,cAAgBf,EAAYkB,WACnD,CAAC1I,EAAMkI,GACP,CAACA,EAAgBlI,GACnB/E,KAAKyrB,eACLzrB,KAAKmtB,aAAezjB,GAExB3J,MAAM8U,OAAOnL,EAAOC,EACxB,CACAsiB,IAAAA,CAAK9B,GACD,IAAI5nB,EAAI+kB,EACRvnB,MAAMksB,KAAK9B,GAC+B,iBAA/BA,EAAWsC,kBAClBzsB,KAAKysB,gBAAkBtC,EAAWsC,iBAEI,iBAA/BtC,EAAWuC,kBAClB1sB,KAAK0sB,gBAAkBvC,EAAWuC,iBAEtC1sB,KAAK0tB,SAAW1tB,KAAK2tB,mBACrB3tB,KAAK4tB,WAAa5tB,KAAK6tB,qBACvB7tB,KAAK0tB,SAASzB,KAAK5J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG6H,GAAa,CAAE5H,IAAKviB,KAAKuiB,OAC5EviB,KAAK4tB,WAAW3B,KAAK5J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG6H,GAAa,CAAE5H,IAAKviB,KAAKuiB,OACzD,QAApBhgB,EAAKvC,KAAKytB,YAAyB,IAAPlrB,GAAyBA,EAAGukB,OAAO9mB,KAAK0tB,SAASlpB,SACvD,QAAtB8iB,EAAKtnB,KAAK6sB,cAA2B,IAAPvF,GAAyBA,EAAGR,OAAO9mB,KAAK4tB,WAAWppB,SAC7C,kBAA1B2lB,EAAWsB,YAClBzrB,KAAKwrB,YAAYrB,EAAWsB,WAEpC,CACAzQ,MAAAA,GACI,MAAMqP,EAASrqB,KAAK2rB,QACpB,OAAOtJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGviB,MAAMib,UAAW,CAAE+R,gBAAiB/sB,KAAK+sB,gBAAiBe,MAAOzD,EAAOyD,OACnH,CACAP,UAAAA,GACIvtB,KAAK6sB,OAAS1kB,SAAS2K,cAAc,OACrC9S,KAAK6sB,OAAOjB,SAAW,EACvB5rB,KAAK6sB,OAAOrlB,UAAY,cACxBxH,KAAK6sB,OAAO1gB,MAAMxC,OAAU,GAAE3J,KAAKssB,eACnCtsB,KAAK6sB,OAAO1gB,MAAM4hB,WAAc,GAAE/tB,KAAKssB,eACvCtsB,KAAK6sB,OAAO1gB,MAAM6hB,UAAa,GAAEhuB,KAAKssB,eACtCtsB,KAAK6sB,OAAO1gB,MAAM8hB,UAAa,GAAEjuB,KAAKssB,eACtCtsB,KAAKwE,QAAQ2M,YAAYnR,KAAK6sB,QAC9B7sB,KAAKytB,KAAOtlB,SAAS2K,cAAc,OACnC9S,KAAKytB,KAAKjmB,UAAY,YACtBxH,KAAKwE,QAAQ2M,YAAYnR,KAAKytB,KAClC,CAEAvB,YAAAA,GACI,MAAO,CACH9B,OAASC,IACL,IAAI9nB,EAAI+kB,EACiB,QAAxB/kB,EAAKvC,KAAK0tB,gBAA6B,IAAPnrB,GAAyBA,EAAG6nB,OAAO,CAAEC,WAC3C,QAA1B/C,EAAKtnB,KAAK4tB,kBAA+B,IAAPtG,GAAyBA,EAAG8C,OAAO,CAAEC,UAAS,EAErFvoB,QAASA,KACL,IAAIS,EAAI+kB,EACiB,QAAxB/kB,EAAKvC,KAAK0tB,gBAA6B,IAAPnrB,GAAyBA,EAAGT,UAClC,QAA1BwlB,EAAKtnB,KAAK4tB,kBAA+B,IAAPtG,GAAyBA,EAAGxlB,SAAS,EAGpF,EC5LG,MAAMosB,WAA+B7B,GACxC1sB,WAAAA,CAAYytB,EAAUhO,EAAIsC,EAAWqL,EAAiBzf,EAAame,EAAY0C,GAC3EpuB,MAAMqf,EAAIsC,EAAWqL,EAAiBzf,EAAame,GAAY,GAC/DzrB,KAAKotB,SAAWA,EAChBptB,KAAKouB,WAAa,IAAInrB,EACtBjD,KAAKmiB,UAAYniB,KAAKouB,WAAWzqB,MAC5BwqB,GACDnuB,KAAKquB,kBAEb,CACAA,gBAAAA,GACI,IAAKruB,KAAK6sB,OACN,OAEJ,MAAMzN,EAAKpf,KAAKof,GACVkP,EAAatuB,KAAKotB,SAAShO,GACjCpf,KAAK6sB,OAAO0B,WAAY,EACxBvuB,KAAKwuB,QAAU,IAAK,cAA8BzK,GAC9CpjB,OAAAA,GAEI,OADAR,EAAuBC,cAAcQ,QAAQ,CAAC,IAAIX,EAAaquB,EAAYlP,IAAMnf,EAAac,WACvF,CACHe,QAASA,KACL3B,EAAuBC,cAAcI,UAAUP,EAAac,UAAU,EAGlF,GACDf,KAAK6sB,QACR7sB,KAAK2kB,OAAS,IAAIa,GAAWxlB,KAAKwE,QAAS,CACvCshB,oBAAqB,CAAC,MAAO,UAC7BsB,aAAc,CACVgB,eAAgB,CAAE3jB,KAAM,aAAc/B,MAAO,KAEjD+jB,kBAAoB9iB,IAChB,MAAMjD,EAAOM,IACb,SAAIN,GACIA,EAAKR,SAAWF,KAAKof,IACrB1e,EAAKd,SAAWI,KAAKotB,SAAShO,OAIlCpf,KAAKotB,SAAS5pB,QAAQirB,gBACfzuB,KAAKotB,SAAS5pB,QAAQirB,eAAe,CACxCtJ,YAAaxhB,EACbhD,QAASK,EACTqf,MAAOrgB,MAGH,IAGpBA,KAAK+F,eAAe/F,KAAKouB,WAAYpuB,KAAKwuB,QAASxuB,KAAK2kB,OAAQ3kB,KAAK2kB,OAAOM,QAAQthB,IAChF3D,KAAKilB,OAAOthB,EAAM,IAE1B,CACAshB,MAAAA,CAAOthB,GACH,MAAMjD,EAAOM,IACb,IAAKN,GAAQA,EAAKd,SAAWI,KAAKotB,SAAShO,GAIvC,YADApf,KAAKouB,WAAWjqB,KAAKke,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG3e,GAAQ,CAAE0c,MAAOrgB,KAAMuiB,IAAK,IAAIL,GAAYliB,KAAKotB,UAAWzsB,QAASK,KAG9H,MAAM0tB,EAAe1uB,KAAK2rB,QACrB+C,aACC5uB,EAAUY,EAAKR,OACfyuB,EAAgBD,EAAavN,SAASrhB,GAC5C,IAAK6uB,EAGD,YADA3uB,KAAKouB,WAAWjqB,KAAKke,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG3e,GAAQ,CAAE0c,MAAOrgB,KAAMW,QAASK,EAAauhB,IAAK,IAAIL,GAAYliB,KAAKotB,aAGhI,MAAMwB,EAAYF,EAAa/M,OACzBkN,EAAYD,EAAU5qB,QAAQ2qB,GACpC,IAAIG,EAAUJ,EAAa/M,OAAO3d,QAAQhE,MACnB,SAAnB2D,EAAMkS,UAA0C,QAAnBlS,EAAMkS,WACnCiZ,EAAUhkB,KAAKD,IAAI,EAAGikB,EAAU,IAEb,UAAnBnrB,EAAMkS,UAA2C,WAAnBlS,EAAMkS,WAChCgZ,EAAYC,GACZA,IAEJA,EAAUhkB,KAAKF,IAAIgkB,EAAUrtB,OAAS,EAAGutB,IAE7CJ,EAAazM,UAAU4M,EAAWC,EACtC,ECrFG,MAAMC,WAAyBrpB,EAClC,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,CAAYytB,EAAUtM,GAClB/gB,QACAC,KAAKotB,SAAWA,EAChBptB,KAAK8gB,MAAQA,EACb9gB,KAAKqG,WAAa,IAAIF,EACtBnG,KAAKsI,YAAc,IAAIrF,EACvBjD,KAAKuI,WAAavI,KAAKsI,YAAY3E,MACnC3D,KAAKwI,WAAa,IAAIvF,EACtBjD,KAAKyI,UAAYzI,KAAKwI,WAAW7E,MACjC3D,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,oBAC1BxH,KAAKue,SAASqN,UAAY,EAC1B5rB,KAAK+F,eAAe/F,KAAKsI,YAAatI,KAAKwI,YAC3CxI,KAAKgvB,WAAa,IAAIxJ,GAAWxlB,KAAKwE,QAAS,CAC3CshB,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDW,kBAAmBA,CAAC9iB,EAAOkS,KACvB,GAA0B,mBAAtB7V,KAAK8gB,MAAM1F,QACVpb,KAAK8gB,MAAM1F,QAAuB,WAAbvF,EACtB,OAAO,EAEX,MAAMnV,EAAOG,IACb,IAAKH,GACDiD,EAAMsrB,UACuB,aAA7BjvB,KAAK8gB,MAAMxG,SAAS7V,KACpB,OAAO,EAEX,GAAI/D,GAAQA,EAAKd,SAAWI,KAAKotB,SAAShO,GAAI,CAC1C,GAAI1e,EAAKb,UAAYG,KAAK8gB,MAAM1B,GAAI,CAChC,GAAiB,WAAbvJ,EAEA,OAAO,EAEX,GAAqB,OAAjBnV,EAAKZ,QAEL,OAAO,CAEf,CAGA,QAF4E,IAA7BE,KAAK8gB,MAAMa,OAAOpgB,QAC7Db,EAAKb,UAAYG,KAAK8gB,MAAM1B,GAEpC,CACA,OAAOpf,KAAK8gB,MAAM2F,kBAAkB9iB,EAAOkS,EAAU,UAAU,IAGvE7V,KAAK+F,eAAe/F,KAAKgvB,WAC7B,CACAE,IAAAA,GACIlvB,KAAKwE,QAAQ2H,MAAM2gB,QAAU,EACjC,CACAqC,IAAAA,GACInvB,KAAKwE,QAAQ2H,MAAM2gB,QAAU,MACjC,CACAsC,WAAAA,CAAY/O,EAAO7c,QAAO,IAAPA,IAAAA,EAAU,CAAE6rB,UAAU,IACrC,MAAMC,EAAW9rB,EAAQ6rB,UACpBrvB,KAAKqgB,OAASrgB,KAAK8gB,MAAMyO,cAAcvvB,KAAKqgB,OASjD,IAAInU,EACJ,OATIlM,KAAKqgB,OACLrgB,KAAKqgB,MAAM1U,KAAK6jB,QAAQhrB,QAAQqV,gBAAkB7Z,KAAKue,UAIvDve,KAAKue,SAAStL,YAAYjT,KAAKqgB,MAAM1U,KAAK6jB,QAAQhrB,SAEtDxE,KAAKqgB,MAAQA,EAELA,EAAMkC,IAAIkN,UACd,IAAK,kBACDzvB,KAAK8gB,MAAM4O,gBAAgBC,QAAQtP,GAC/BrgB,KAAKqgB,OACDiP,GACAtvB,KAAKue,SAASpN,YAAYnR,KAAKqgB,MAAM1U,KAAK6jB,QAAQhrB,SAG1D0H,EAAYlM,KAAKue,SACjB,MACJ,IAAK,SACG8B,EAAM1U,KAAK6jB,QAAQhrB,QAAQqV,gBAAkB7Z,KAAKue,UAClDve,KAAKue,SAAStL,YAAYoN,EAAM1U,KAAK6jB,QAAQhrB,SAEjD0H,EAAYlM,KAAK8gB,MAAM4O,gBAAgBE,OAAO,CAC1CvP,QACAwP,mBAAoB7vB,OAIhC,GAAIsvB,EAAU,CACV,MAAMvD,EAAe3jB,EAAW8D,GAC1B7F,EAAa,IAAIX,EACvBW,EAAWN,eAAegmB,EAAcA,EAAaxjB,YAAW,IAAMvI,KAAKsI,YAAYnE,SAAS4nB,EAAatjB,WAAU,IAAMzI,KAAKwI,WAAWrE,UAC7InE,KAAKqG,WAAW3D,MAAQ2D,CAC5B,CACJ,CACAypB,SAAAA,CAAUzP,GACFrgB,KAAKqgB,QAAUA,GAGnBrgB,KAAKovB,YAAY/O,EACrB,CACAxL,MAAAA,CAAOoU,EAAQC,GACX,CAEJ6G,UAAAA,GACI,IAAIxtB,EACAvC,KAAKqgB,OAC2B,oBAA5BrgB,KAAKqgB,MAAMkC,IAAIkN,WAC0C,QAAxDltB,EAAKvC,KAAKqgB,MAAM1U,KAAK6jB,QAAQhrB,QAAQqV,qBAAkC,IAAPtX,GAAyBA,EAAG0Q,YAAYjT,KAAKqgB,MAAM1U,KAAK6jB,QAAQhrB,UAGzIxE,KAAKqgB,WAAQ5f,CACjB,CACAqB,OAAAA,GACI9B,KAAKqG,WAAWvE,UAChB/B,MAAM+B,SACV,ECnHJ,MAAMkuB,WAAuBjM,GACzBpkB,WAAAA,CAAY6E,EAAS4oB,EAAUtM,EAAOT,GAClCtgB,MAAMyE,GACNxE,KAAKotB,SAAWA,EAChBptB,KAAK8gB,MAAQA,EACb9gB,KAAKqgB,MAAQA,EACbrgB,KAAKc,cAAgBX,EAAuBC,aAChD,CACAO,OAAAA,CAAQgD,GAEJ,OADA3D,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAKotB,SAAShO,GAAIpf,KAAK8gB,MAAM1B,GAAIpf,KAAKqgB,MAAMjB,KAAM1f,EAAcqB,WACvG,CACHe,QAASA,KACL9B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EAEG,MAAMkvB,WAAYvqB,EACrB,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,CAAY0gB,EAAO+M,EAAUtM,GACzB/gB,QACAC,KAAKqgB,MAAQA,EACbrgB,KAAKotB,SAAWA,EAChBptB,KAAK8gB,MAAQA,EACb9gB,KAAKwvB,aAAU/uB,EACfT,KAAKkwB,WAAa,IAAIjtB,EACtBjD,KAAKmwB,UAAYnwB,KAAKkwB,WAAWvsB,MACjC3D,KAAKowB,WAAa,IAAIntB,EACtBjD,KAAKilB,OAASjlB,KAAKowB,WAAWzsB,MAC9B3D,KAAKkkB,aAAe,IAAIjhB,EACxBjD,KAAKmkB,YAAcnkB,KAAKkkB,aAAavgB,MACrC3D,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,MAC1BxH,KAAKue,SAASqN,SAAW,EACzB5rB,KAAKue,SAASgQ,WAAY,EAC1BhnB,EAAYvH,KAAKwE,QAAS,gBAAgB,GAC1C,MAAM6rB,EAAc,IAAIL,GAAehwB,KAAKue,SAAUve,KAAKotB,SAAUptB,KAAK8gB,MAAO9gB,KAAKqgB,OACtFrgB,KAAKgvB,WAAa,IAAIxJ,GAAWxlB,KAAKue,SAAU,CAC5CuH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAAC9iB,EAAOkS,KACvB,GAAI7V,KAAK8gB,MAAM1F,OACX,OAAO,EAEX,MAAM1a,EAAOG,IACb,OAAIH,GAAQV,KAAKotB,SAAShO,KAAO1e,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAK8gB,MAAM1B,KAIzBpf,KAAKqgB,MAAMjB,KAAO1e,EAAKZ,QAE3BE,KAAK8gB,MAAMqG,MAAMV,kBAAkB9iB,EAAOkS,EAAU,MAAM,IAGzE7V,KAAKmjB,kBAAoBnjB,KAAKgvB,WAAW7L,kBACzCnjB,KAAK+F,eAAe/F,KAAKkwB,WAAYlwB,KAAKowB,WAAYpwB,KAAKkkB,aAAcmM,EAAYlM,aAAaxgB,IAC9F3D,KAAKkkB,aAAa/f,KAAKR,EAAM,IAC7B0sB,EAAazrB,EAAsB5E,KAAKue,SAAU,aAAc5a,IAC5DA,EAAMxB,kBAGVnC,KAAKkwB,WAAW/rB,KAAKR,EAAM,IAC3B3D,KAAKgvB,WAAW/J,QAAQthB,IACxB3D,KAAKowB,WAAWjsB,KAAKR,EAAM,IAC3B3D,KAAKgvB,WACb,CACA5N,SAAAA,CAAU0H,GACNvhB,EAAYvH,KAAKwE,QAAS,aAAcskB,GACxCvhB,EAAYvH,KAAKwE,QAAS,gBAAiBskB,EAC/C,CACAwH,UAAAA,CAAWtE,GACHhsB,KAAKwvB,SACLxvB,KAAKue,SAAStL,YAAYjT,KAAKwvB,QAAQhrB,SAE3CxE,KAAKwvB,QAAUxD,EACfhsB,KAAKue,SAASpN,YAAYnR,KAAKwvB,QAAQhrB,QAC3C,CACA1C,OAAAA,GACI/B,MAAM+B,SACV,ECnFG,MAAMyuB,WAAyBxM,GAClCpkB,WAAAA,CAAY6E,EAAS4oB,EAAUtM,GAC3B/gB,MAAMyE,GACNxE,KAAKotB,SAAWA,EAChBptB,KAAK8gB,MAAQA,EACb9gB,KAAKc,cAAgBX,EAAuBC,cAC5CJ,KAAK+F,eAAenB,EAAsBJ,EAAS,aAAcJ,IACzDA,EAAE6qB,WAMkB7qB,EvBsG1BgF,IAA6B,EuBrG3B,IACD,GACP,CACAib,WAAAA,CAAYzgB,GACR,MAAqC,aAAjC5D,KAAK8gB,MAAMyB,IAAIjI,SAAS7V,OAAwBb,EAAOqrB,QAI/D,CACAtuB,OAAAA,CAAQ6vB,GACJ,MAAMlM,EAAekM,EAAUlM,aAC/BtkB,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAKotB,SAAShO,GAAIpf,KAAK8gB,MAAM1B,GAAI,OAAQ1f,EAAcqB,WACrG,MAAMoL,EAAQpD,OAAO0nB,iBAAiBzwB,KAAK+Z,IACrC2W,EAAUvkB,EAAMwkB,iBAAiB,sDACjCC,EAAQzkB,EAAMwkB,iBAAiB,2CACrC,GAAIrM,EAAc,CACd,MAAMuM,EAAe1oB,SAAS2K,cAAc,OAC5C+d,EAAa1kB,MAAM2kB,gBAAkBJ,EACrCG,EAAa1kB,MAAMykB,MAAQA,EAC3BC,EAAa1kB,MAAM4kB,QAAU,UAC7BF,EAAa1kB,MAAMxC,OAAS,OAC5BknB,EAAa1kB,MAAM6kB,SAAW,OAC9BH,EAAa1kB,MAAM4hB,WAAa,OAChC8C,EAAa1kB,MAAM8kB,aAAe,OAClCJ,EAAa1kB,MAAM0J,SAAW,WAC9Bgb,EAAaK,YAAe,oBAAmBlxB,KAAK8gB,MAAM/b,QC3C/D,SAAuBuf,EAAcuM,GAExCvpB,EAAWupB,EAAc,cACzB1oB,SAASslB,KAAKtc,YAAY0f,GAC1BvM,EAAa6M,aAAaN,EAAc,EAAG,GAC3C7nB,YAAW,KACPhC,EAAc6pB,EAAc,cAC5BA,EAAaxpB,QAAQ,GACtB,EACP,CDmCY+pB,CAAc9M,EAAcuM,EAChC,CACA,MAAO,CACH/uB,QAASA,KACL9B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EE9CG,MAAMswB,WAAsB3rB,EAC/B,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,CAAYytB,EAAUtM,GAClB/gB,QACAC,KAAKotB,SAAWA,EAChBptB,KAAK8gB,MAAQA,EACb9gB,KAAK0lB,QAAU,IAAIziB,EACnBjD,KAAKilB,OAASjlB,KAAK0lB,QAAQ/hB,MAC3B3D,KAAKkkB,aAAe,IAAIjhB,EACxBjD,KAAKmkB,YAAcnkB,KAAKkkB,aAAavgB,MACrC3D,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,iBAC1BxH,KAAKue,SAASqN,SAAW,EACzB5rB,KAAKue,SAASgQ,WAAY,EAC1BvuB,KAAK+F,eAAe/F,KAAK0lB,QAAS1lB,KAAKkkB,aAActf,EAAsB5E,KAAKue,SAAU,SAAS,KAC/Fve,KAAKotB,SAAS5M,iBAAiBxgB,KAAK8gB,MAAM,KAE9C,MAAM0N,EAAU,IAAI+B,GAAiBvwB,KAAKue,SAAU6O,EAAUtM,GAC9D9gB,KAAKsxB,WAAa,IAAI9L,GAAWxlB,KAAKue,SAAU,CAC5CuH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAAC9iB,EAAOkS,KACvB,IAAItT,EACJ,MAAM7B,EAAOG,IACb,OAAIH,GAAQV,KAAKotB,SAAShO,KAAO1e,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAK8gB,MAAM1B,MAKW,QAAlC7c,GxBhCRyH,EwBgCkBhK,KAAK8gB,MAAMa,QxB/BnCpgB,OAAS,EAAIyI,EAAIA,EAAIzI,OAAS,QAAKd,SwB+B4B,IAAP8B,OAAgB,EAASA,EAAG6c,MAAQ1e,EAAKZ,QAEzFghB,EAAMqG,MAAMV,kBAAkB9iB,EAAOkS,EAAU,gBxBlC/D,IAAc7L,CwBkCgE,IAG7EhK,KAAKmjB,kBAAoBnjB,KAAKsxB,WAAWnO,kBACzCnjB,KAAK+F,eAAeyoB,EAASA,EAAQrK,aAAaxgB,IAC9C3D,KAAKkkB,aAAa/f,KAAKR,EAAM,IAC7B3D,KAAKsxB,WAAWrM,QAAQthB,IACxB3D,KAAK0lB,QAAQvhB,KAAKR,EAAM,IACxB3D,KAAKsxB,WACb,EC1CG,MAAMC,WAAsB7rB,EAC/B,UAAIic,GACA,OAAO3hB,KAAKwxB,KAAK5vB,KAAKoO,GAAMA,EAAEtN,MAAM2d,MAAMjB,IAC9C,CACA,QAAIra,GACA,OAAO/E,KAAKwxB,KAAKjwB,MACrB,CACA,UAAIkwB,GACA,OAAOzxB,KAAK0xB,OAChB,CACA,UAAID,CAAO/uB,GACP1C,KAAK0xB,QAAUhvB,EACf1C,KAAKwE,QAAQ2H,MAAM2gB,QAAUpqB,EAAQ,OAAS,EAClD,CACAwsB,IAAAA,GACSlvB,KAAKyxB,SACNzxB,KAAKwE,QAAQ2H,MAAM2gB,QAAU,GAErC,CACAqC,IAAAA,GACInvB,KAAKue,SAASpS,MAAM2gB,QAAU,MAClC,CACA6E,sBAAAA,CAAuBntB,GACfxE,KAAK4xB,eAAiBptB,IAGtBxE,KAAK4xB,eACL5xB,KAAK4xB,aAAavqB,SAClBrH,KAAK4xB,kBAAenxB,GAEpB+D,IACAxE,KAAK6xB,sBAAsB1gB,YAAY3M,GACvCxE,KAAK4xB,aAAeptB,GAE5B,CACAstB,qBAAAA,CAAsBttB,GACdxE,KAAK+xB,cAAgBvtB,IAGrBxE,KAAK+xB,cACL/xB,KAAK+xB,YAAY1qB,SACjBrH,KAAK+xB,iBAActxB,GAEnB+D,IACAxE,KAAKgyB,qBAAqB7gB,YAAY3M,GACtCxE,KAAK+xB,YAAcvtB,GAE3B,CACAytB,uBAAAA,CAAwBztB,GAChBxE,KAAKkyB,aAAe1tB,IAGpBxE,KAAKkyB,aACLlyB,KAAKkyB,WAAW7qB,SAChBrH,KAAKkyB,gBAAazxB,GAElB+D,IACAxE,KAAKmyB,oBAAoBhhB,YAAY3M,GACrCxE,KAAKkyB,WAAa1tB,GAE1B,CACA,WAAIA,GACA,OAAOxE,KAAKue,QAChB,CACAuK,QAAAA,CAASsJ,GACL,OAAQpyB,KAAKqyB,eAAiB,GAC1BryB,KAAKwxB,KAAKxxB,KAAKqyB,eAAe3vB,QAAU0vB,CAChD,CACApuB,OAAAA,CAAQob,GACJ,OAAOpf,KAAKwxB,KAAK/mB,WAAW2nB,GAAQA,EAAI1vB,MAAM2d,MAAMjB,KAAOA,GAC/D,CACAzf,WAAAA,CAAYytB,EAAUtM,GAClB/gB,QACAC,KAAKotB,SAAWA,EAChBptB,KAAK8gB,MAAQA,EACb9gB,KAAKwxB,KAAO,GACZxxB,KAAKqyB,eAAiB,EACtBryB,KAAK0xB,SAAU,EACf1xB,KAAK0lB,QAAU,IAAIziB,EACnBjD,KAAKilB,OAASjlB,KAAK0lB,QAAQ/hB,MAC3B3D,KAAKsyB,gBAAkB,IAAIrvB,EAC3BjD,KAAKuyB,eAAiBvyB,KAAKsyB,gBAAgB3uB,MAC3C3D,KAAKwyB,kBAAoB,IAAIvvB,EAC7BjD,KAAKyyB,iBAAmBzyB,KAAKwyB,kBAAkB7uB,MAC/C3D,KAAK2lB,mBAAqB,IAAI1iB,EAC9BjD,KAAKmjB,kBAAoBnjB,KAAK2lB,mBAAmBhiB,MACjD3D,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,6BAC1BD,EAAYvH,KAAKue,SAAU,2BAAoE,cAAxCve,KAAKotB,SAAS5pB,QAAQkvB,eAC7E1yB,KAAK6xB,sBAAwB1pB,SAAS2K,cAAc,OACpD9S,KAAK6xB,sBAAsBrqB,UAAY,0BACvCxH,KAAKgyB,qBAAuB7pB,SAAS2K,cAAc,OACnD9S,KAAKgyB,qBAAqBxqB,UAAY,yBACtCxH,KAAKmyB,oBAAsBhqB,SAAS2K,cAAc,OAClD9S,KAAKmyB,oBAAoB3qB,UAAY,wBACrCxH,KAAK2yB,aAAexqB,SAAS2K,cAAc,OAC3C9S,KAAK2yB,aAAanrB,UAAY,iBAC9BxH,KAAK4yB,cAAgB,IAAIvB,GAAcrxB,KAAKotB,SAAUptB,KAAK8gB,OAC3D9gB,KAAKue,SAASpN,YAAYnR,KAAKmyB,qBAC/BnyB,KAAKue,SAASpN,YAAYnR,KAAK2yB,cAC/B3yB,KAAKue,SAASpN,YAAYnR,KAAKgyB,sBAC/BhyB,KAAKue,SAASpN,YAAYnR,KAAK4yB,cAAcpuB,SAC7CxE,KAAKue,SAASpN,YAAYnR,KAAK6xB,uBAC/B7xB,KAAK+F,eAAe/F,KAAKotB,SAAS3K,eAAere,IACzCA,EAAEme,IAAIzB,QAAU9gB,KAAK8gB,OACrBvZ,EAAYvH,KAAKue,SAAU,gBAA+B,IAAdve,KAAK+E,KACrD,IACA/E,KAAKotB,SAASzK,kBAAkBve,IAC5BA,EAAEme,IAAIzB,QAAU9gB,KAAK8gB,OACrBvZ,EAAYvH,KAAKue,SAAU,gBAA+B,IAAdve,KAAK+E,KACrD,IACA/E,KAAK2lB,mBAAoB3lB,KAAK0lB,QAAS1lB,KAAKsyB,gBAAiBtyB,KAAKwyB,kBAAmBxyB,KAAK4yB,cAAe5yB,KAAK4yB,cAAczO,aAAaxgB,IACzI3D,KAAKwyB,kBAAkBruB,KAAK,CACxBghB,YAAaxhB,EACbmd,MAAO9gB,KAAK8gB,OACd,IACF9gB,KAAK4yB,cAAc3N,QAAQthB,IAC3B3D,KAAK0lB,QAAQvhB,KAAK,CACdR,MAAOA,EAAMwhB,YACbphB,MAAO/D,KAAKwxB,KAAKjwB,QACnB,IACFvB,KAAK4yB,cAAczP,mBAAmBxf,IACtC3D,KAAK2lB,mBAAmBxhB,KAAK,IAAI0uB,GAA6BlvB,EAAO,CACjEmvB,KAAM,eACNzS,MAAOrgB,KAAK8gB,MAAMyC,YAClBhB,IAAKviB,KAAKotB,SAAS7K,IACnBzB,MAAO9gB,KAAK8gB,MACZngB,QAASE,IACV,IACH+D,EAAsB5E,KAAK4yB,cAAcpuB,QAAS,aAAcb,IAEhE,IADiC3D,KAAKotB,SAAS5pB,QAAQuvB,uBAEnDpvB,EAAMsrB,UAC2B,aAAjCjvB,KAAK8gB,MAAMyB,IAAIjI,SAAS7V,KAAqB,CAC7Cd,EAAMvB,iBACN,MAAM,IAAEqH,EAAG,KAAED,GAASxJ,KAAKwE,QAAQoF,yBAC3BH,IAAKupB,EAASxpB,KAAMypB,GAAajzB,KAAKotB,SAAS5oB,QAAQoF,wBAC/D5J,KAAKotB,SAASxJ,iBAAiB5jB,KAAK8gB,MAAO,CACvCvR,EAAG/F,EAAOypB,EAAW,GACrB5M,EAAG5c,EAAMupB,EAAU,IACpB,CAAEE,YAAY,GACrB,KACAtuB,EAAsB5E,KAAK2yB,aAAc,aAAchvB,IACvD,GAAIA,EAAMxB,iBACN,OAEiC,IAAjBwB,EAAMwvB,QAEtBnzB,KAAKotB,SAAS5M,iBAAiBxgB,KAAK8gB,MACxC,IAER,CACAM,SAAAA,CAAUgS,GACN,CAEJC,MAAAA,CAAOjB,EAAKruB,GACR,QADa,IAALA,IAAAA,EAAQ/D,KAAKwxB,KAAKjwB,QACtBwC,EAAQ,GAAKA,EAAQ/D,KAAKwxB,KAAKjwB,OAC/B,MAAM,IAAIiB,MAAM,oBAEpBxC,KAAK2yB,aAAazf,aAAakf,EAAI1vB,MAAM8B,QAASxE,KAAK2yB,aAAavzB,SAAS2E,IAC7E/D,KAAKwxB,KAAO,IACLxxB,KAAKwxB,KAAKvpB,MAAM,EAAGlE,GACtBquB,KACGpyB,KAAKwxB,KAAKvpB,MAAMlE,IAEnB/D,KAAKqyB,cAAgB,IACrBryB,KAAKqyB,cAAgBtuB,EAE7B,CACAO,OAAO8a,GACH,MAAMrb,EAAQ/D,KAAKwxB,KAAK/mB,WAAW2nB,GAAQA,EAAI1vB,MAAM2d,MAAMjB,KAAOA,IAC5DkU,EAActzB,KAAKwxB,KAAKvtB,OAAOF,EAAO,GAAG,IACzC,MAAErB,EAAK,WAAE2D,GAAeitB,EAC9BjtB,EAAWvE,UACXY,EAAMZ,UACNY,EAAM8B,QAAQ6C,QAClB,CACAksB,cAAAA,CAAelT,GACXrgB,KAAKwxB,KAAKzvB,SAASqwB,IACf,MAAMoB,EAAgBnT,EAAMjB,KAAOgT,EAAI1vB,MAAM2d,MAAMjB,GACnDgT,EAAI1vB,MAAM0e,UAAUoS,EAAc,GAE1C,CACA1D,SAAAA,CAAUzP,EAAOtc,GACb,IAAIxB,EACJ,QAFkB,IAALwB,IAAAA,EAAQ/D,KAAKwxB,KAAKjwB,QAE3BvB,KAAKwxB,KAAKiC,MAAMrB,GAAQA,EAAI1vB,MAAM2d,MAAMjB,KAAOiB,EAAMjB,KACrD,OAEJ,MAAMgT,EAAM,IAAInC,GAAI5P,EAAOrgB,KAAKotB,SAAUptB,KAAK8gB,OAC/C,KAA4B,QAArBve,EAAK8d,EAAM1U,YAAyB,IAAPpJ,OAAgB,EAASA,EAAG6vB,KAC5D,MAAM,IAAI5vB,MAAM,4BAEpB4vB,EAAI9B,WAAWjQ,EAAM1U,KAAKymB,KAC1B,MAAM/rB,EAAa,IAAIX,EAAoB0sB,EAAIjO,aAAaxgB,IACxD3D,KAAKsyB,gBAAgBnuB,KAAK,CAAEghB,YAAaxhB,EAAO0c,SAAQ,IACxD+R,EAAIjC,WAAWxsB,IACf,MAAM+vB,GAA2B1zB,KAAKotB,SAAS5pB,QAAQuvB,sBACjDY,EAA0D,aAAjC3zB,KAAK8gB,MAAMyB,IAAIjI,SAAS7V,MACrC,IAAdzE,KAAK+E,KACT,GAAI2uB,IACCC,GACDhwB,EAAMsrB,SAAU,CAChBtrB,EAAMvB,iBACN,MAAMie,EAAQrgB,KAAKotB,SAAS5J,cAAc4O,EAAI/R,MAAMjB,KAC9C,IAAE3V,EAAG,KAAED,GAAS4oB,EAAI5tB,QAAQoF,yBAC1BH,IAAKupB,EAASxpB,KAAMypB,GAAajzB,KAAKotB,SAAS5oB,QAAQoF,wBAK/D,YAJA5J,KAAKotB,SAASxJ,iBAAiBvD,EAAO,CAClC9Q,EAAG/F,EAAOypB,EACV5M,EAAG5c,EAAMupB,GACV,CAAEE,YAAY,GAErB,CACqC,IAAjBvvB,EAAMwvB,SACNxvB,EAAMxB,kBAGtBnC,KAAK8gB,MAAMyC,cAAgBlD,GAC3BrgB,KAAK8gB,MAAMqG,MAAM2I,UAAUzP,EAC/B,IACA+R,EAAInN,QAAQthB,IACZ3D,KAAK0lB,QAAQvhB,KAAK,CACdR,MAAOA,EAAMwhB,YACbphB,MAAO/D,KAAKwxB,KAAK/mB,WAAW8E,GAAMA,EAAE7M,QAAU0vB,KAChD,IACFA,EAAIjP,mBAAmBxf,IACvB3D,KAAK2lB,mBAAmBxhB,KAAK,IAAI0uB,GAA6BlvB,EAAO,CACjEmvB,KAAM,MACNzS,MAAOrgB,KAAK8gB,MAAMyC,YAClBhB,IAAKviB,KAAKotB,SAAS7K,IACnBzB,MAAO9gB,KAAK8gB,MACZngB,QAASE,IACV,KAED6B,EAAQ,CAAEA,MAAO0vB,EAAK/rB,cAC5BrG,KAAKqzB,OAAO3wB,EAAOqB,EACvB,CACAgsB,UAAAA,CAAW1P,GACPrgB,KAAKsE,OAAO+b,EAAMjB,GACtB,CACAtd,OAAAA,GACI/B,MAAM+B,UACN,IAAK,MAAM,MAAEY,EAAK,WAAE2D,KAAgBrG,KAAKwxB,KACrCnrB,EAAWvE,UACXY,EAAMZ,UAEV9B,KAAKwxB,KAAO,EAChB,EC7PG,MAAMoC,GACT,cAAIC,GACA,OAAO7zB,KAAK8zB,WAChB,CACAn0B,WAAAA,CAAYwlB,EAAaR,EAAQ9O,EAAUlV,EAASmgB,GAChD9gB,KAAKmlB,YAAcA,EACnBnlB,KAAK2kB,OAASA,EACd3kB,KAAK6V,SAAWA,EAChB7V,KAAKW,QAAUA,EACfX,KAAK8gB,MAAQA,EACb9gB,KAAK8zB,aAAc,CACvB,CACAC,MAAAA,GACI/zB,KAAK8zB,aAAc,CACvB,EAEG,MAAME,GAAgB,MAKzB,MAAMC,EAAa,CACfrU,yBAAqBnf,EACrByzB,iBAAazzB,EACbiyB,mBAAejyB,EACfsyB,2BAAuBtyB,EACvB0zB,yBAAqB1zB,EACrB2zB,eAAW3zB,EACX4zB,qBAAiB5zB,EACjB6zB,WAAO7zB,EACP8zB,sBAAkB9zB,EAClB2a,YAAQ3a,EACR0tB,gBAAY1tB,GAEhB,OAAO4hB,OAAO+J,KAAK6H,EACtB,EAnB4B,GCRtB,MAAMO,WAA6BvyB,EACtC,eAAIkjB,GACA,OAAOnlB,KAAKwD,QAAQ2hB,WACxB,CACA,YAAItP,GACA,OAAO7V,KAAKwD,QAAQqS,QACxB,CACA,SAAIwK,GACA,OAAOrgB,KAAKwD,QAAQ6c,KACxB,CACA,SAAIS,GACA,OAAO9gB,KAAKwD,QAAQsd,KACxB,CACA,OAAIyB,GACA,OAAOviB,KAAKwD,QAAQ+e,GACxB,CACA5iB,WAAAA,CAAY6D,GACRzD,QACAC,KAAKwD,QAAUA,CACnB,CACA7C,OAAAA,GACI,OAAOX,KAAKwD,QAAQ7C,SACxB,EAEG,MAAM8zB,WAA8BD,GACvC,QAAI1B,GACA,OAAO9yB,KAAK00B,KAChB,CACA/0B,WAAAA,CAAY6D,GACRzD,MAAMyD,GACNxD,KAAK00B,MAAQlxB,EAAQsvB,IACzB,EAEG,MAAMD,GACT,QAAIC,GACA,OAAO9yB,KAAKwD,QAAQsvB,IACxB,CACA,eAAI3N,GACA,OAAOnlB,KAAK2D,MAAMwhB,WACtB,CACA,YAAItP,GACA,OAAO7V,KAAK2D,MAAMkS,QACtB,CACA,oBAAI1T,GACA,OAAOnC,KAAK2D,MAAMxB,gBACtB,CACA,SAAIke,GACA,OAAOrgB,KAAKwD,QAAQ6c,KACxB,CACA,OAAIkC,GACA,OAAOviB,KAAKwD,QAAQ+e,GACxB,CACA,SAAIzB,GACA,OAAO9gB,KAAKwD,QAAQsd,KACxB,CACA1e,cAAAA,GACIpC,KAAK2D,MAAMvB,gBACf,CACAzB,OAAAA,GACI,OAAOX,KAAKwD,QAAQ7C,SACxB,CACAhB,WAAAA,CAAYgE,EAAOH,GACfxD,KAAK2D,MAAQA,EACb3D,KAAKwD,QAAUA,CACnB,EAEG,MAAMmxB,WAAgCjvB,EACzC,WAAIlB,GACA,MAAM,IAAIhC,MAAM,gBACpB,CACA,eAAI+gB,GACA,OAAOvjB,KAAK40B,YAChB,CACA,UAAIxZ,GACA,OAAOpb,KAAKqb,OAChB,CACA,UAAID,CAAO1Y,GACP1C,KAAKqb,QAAU3Y,EACf6E,EAAYvH,KAAKkM,UAAW,mBAA8B,mBAAVxJ,GAA8BA,EAClF,CACA,YAAIomB,GACA,OAAO9oB,KAAKozB,cAChB,CACA,UAAIzR,GACA,OAAO3hB,KAAK60B,OAChB,CACA,QAAI9vB,GACA,OAAO/E,KAAK60B,QAAQtzB,MACxB,CACA,WAAIuzB,GACA,OAA+B,IAAxB90B,KAAK60B,QAAQtzB,MACxB,CACA,gBAAIwzB,GACA,SAAU/0B,KAAKg1B,YAAah1B,KAAKkM,UAAU9E,SAASpH,KAAKg1B,UAAUxwB,SACvE,CACA,UAAIqoB,GACA,OAAO7sB,KAAKi1B,aAChB,CACA,oBAAIC,GACA,QAAK/sB,SAASQ,eAGPhB,EAAWQ,SAASQ,cAAe3I,KAAKm1B,iBAAiB3wB,QACpE,CACA,YAAI8V,GACA,OAAOta,KAAKo1B,SAChB,CACA,YAAI9a,CAAS5X,GAIT,OAHA1C,KAAKo1B,UAAY1yB,EACjB6E,EAAYvH,KAAKkM,UAAW,yBAAyB,GACrD3E,EAAYvH,KAAKkM,UAAW,uBAAuB,GAC3CxJ,EAAM+B,MACV,IAAK,OACDzE,KAAKm1B,iBAAiBnG,WAAW/H,eAAe,CAC5C,MACA,SACA,OACA,QACA,WAEJ,MACJ,IAAK,WACDjnB,KAAKm1B,iBAAiBnG,WAAW/H,eAAe,CAAC,WACjDjnB,KAAKm1B,iBAAiBnG,WAAW/H,eAAevkB,EAC1C,CAAC,UACD,CAAC,MAAO,SAAU,OAAQ,QAAS,WACzC6E,EAAYvH,KAAKkM,UAAW,yBAAyB,GACrD,MACJ,IAAK,SACDlM,KAAKm1B,iBAAiBnG,WAAW/H,eAAe,CAAC,WACjD1f,EAAYvH,KAAKkM,UAAW,uBAAuB,GAG3DlM,KAAKq1B,WAAW9S,IAAI+S,qBAAqBnxB,KAAK,CAC1CmW,SAAUta,KAAKsa,UAEvB,CACA3a,WAAAA,CAAYuM,EAAWkhB,EAAUhO,EAAI5b,EAAS6xB,GAC1C,IAAI9yB,EACJxC,QACAC,KAAKkM,UAAYA,EACjBlM,KAAKotB,SAAWA,EAChBptB,KAAKof,GAAKA,EACVpf,KAAKwD,QAAUA,EACfxD,KAAKq1B,WAAaA,EAClBr1B,KAAKozB,gBAAiB,EACtBpzB,KAAKqb,SAAU,EACfrb,KAAKo1B,UAAY,CAAE3wB,KAAM,QACzBzE,KAAKu1B,iBAAmB,GACxBv1B,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKipB,OAAS,EACdjpB,KAAKkpB,QAAU,EACflpB,KAAK60B,QAAU,GACf70B,KAAKw1B,kBAAoB,IAAI1wB,IAC7B9E,KAAKy1B,QAAU,IAAIxyB,EACnBjD,KAAK01B,OAAS11B,KAAKy1B,QAAQ9xB,MAC3B3D,KAAKouB,WAAa,IAAInrB,EACtBjD,KAAKmiB,UAAYniB,KAAKouB,WAAWzqB,MACjC3D,KAAK21B,YAAc,IAAI1yB,EACvBjD,KAAKkjB,WAAaljB,KAAK21B,YAAYhyB,MACnC3D,KAAK2lB,mBAAqB,IAAI1iB,EAC9BjD,KAAKmjB,kBAAoBnjB,KAAK2lB,mBAAmBhiB,MACjD3D,KAAKsyB,gBAAkB,IAAIrvB,EAC3BjD,KAAKuyB,eAAiBvyB,KAAKsyB,gBAAgB3uB,MAC3C3D,KAAKwyB,kBAAoB,IAAIvvB,EAC7BjD,KAAKyyB,iBAAmBzyB,KAAKwyB,kBAAkB7uB,MAC/C3D,KAAK41B,eAAiB,IAAI3yB,EAC1BjD,KAAKyiB,cAAgBziB,KAAK41B,eAAejyB,MACzC3D,KAAK61B,uBAAyB,IAAI5yB,EAClCjD,KAAK81B,sBAAwB91B,KAAK61B,uBAAuBlyB,MACzD3D,KAAK+1B,4BAA8B,IAAI9yB,EACvCjD,KAAKg2B,2BAA6Bh2B,KAAK+1B,4BAA4BpyB,MACnE3D,KAAKi2B,kBAAoB,IAAIhzB,EAC7BjD,KAAK2iB,iBAAmB3iB,KAAKi2B,kBAAkBtyB,MAC/C3D,KAAKk2B,wBAA0B,IAAIjzB,EACnCjD,KAAK6iB,uBAAyB7iB,KAAKk2B,wBAAwBvyB,MAC3D3D,KAAKm2B,0BAA4B,IAAIlzB,EACrCjD,KAAKsjB,yBAA2BtjB,KAAKm2B,0BAA0BxyB,MAC/D3D,KAAKo2B,0BAA4B,KACjC7uB,EAAYvH,KAAKkM,UAAW,aAAa,GACzClM,KAAKq2B,KAAO,IAAIrT,GAAYhjB,KAAKotB,UACjCptB,KAAKi1B,cAAgB,IAAI1D,GAAcvxB,KAAKotB,SAAUptB,KAAKq1B,YAC3Dr1B,KAAKm1B,iBAAmB,IAAIpG,GAAiB/uB,KAAKotB,SAAUptB,MAC5DkM,EAAU4a,OAAO9mB,KAAKi1B,cAAczwB,QAASxE,KAAKm1B,iBAAiB3wB,SACnExE,KAAK6sB,OAAO4E,SAAWjuB,EAAQ8yB,WAC/Bt2B,KAAKob,OAAmC,QAAzB7Y,EAAKiB,EAAQ4X,cAA2B,IAAP7Y,GAAgBA,EAChEvC,KAAK+F,eAAe/F,KAAKsyB,gBAAiBtyB,KAAKwyB,kBAAmBxyB,KAAK2lB,mBAAoB3lB,KAAKi1B,cAAc1C,gBAAgB5uB,IAC1H3D,KAAKsyB,gBAAgBnuB,KAAKR,EAAM,IAChC3D,KAAKi1B,cAAcxC,kBAAkB9uB,IACrC3D,KAAKwyB,kBAAkBruB,KAAKR,EAAM,IAClC3D,KAAKi1B,cAAchQ,QAAQthB,IAC3B3D,KAAKu2B,gBAAgB,SAAU5yB,EAAMA,MAAO,SAAUA,EAAMI,MAAM,IAClE/D,KAAKm1B,iBAAiB5sB,YAAW,KACjCvI,KAAKotB,SAAS5M,iBAAiBxgB,KAAKq1B,WAAW,IAC/Cr1B,KAAKm1B,iBAAiB1sB,WAAU,SAEhCzI,KAAKm1B,iBAAiBnG,WAAW/J,QAAQthB,IACzC3D,KAAKu2B,gBAAgB,UAAW5yB,EAAMwhB,YAAaxhB,EAAMkS,SAAS,IAClE7V,KAAKi1B,cAAc9R,mBAAmBxf,IACtC3D,KAAK2lB,mBAAmBxhB,KAAKR,EAAM,IACnC3D,KAAKm1B,iBAAiBnG,WAAW7L,mBAAmBxf,IACpD3D,KAAK2lB,mBAAmBxhB,KAAK,IAAI0uB,GAA6BlvB,EAAO,CACjEmvB,KAAM,UACNzS,MAAOrgB,KAAKujB,YACZhB,IAAKviB,KAAKq2B,KACVvV,MAAO9gB,KAAKq1B,WACZ10B,QAASE,IACV,IACHb,KAAKy1B,QAASz1B,KAAK2W,aAAc3W,KAAKouB,WAAYpuB,KAAK21B,YAAa31B,KAAK41B,eAAgB51B,KAAKi2B,kBAAmBj2B,KAAKk2B,wBAAyBl2B,KAAKm2B,0BAC5J,CACAK,YAAAA,GACIx2B,KAAKm1B,iBAAiB3wB,QAAQud,OAClC,CACA,mBAAI2N,CAAgBhtB,GAChB1C,KAAK2hB,OAAO5f,SAASse,IACjBrgB,KAAK0vB,gBAAgBC,QAAQtP,EAAM,IAEvCrgB,KAAKo2B,0BAA4B1zB,EACjC1C,KAAK2hB,OAAO5f,SAASse,IACjBrgB,KAAKy2B,SAASpW,EAAM,GAE5B,CACA,mBAAIqP,GACA,IAAIntB,EACJ,OAAkD,QAAzCA,EAAKvC,KAAKo2B,iCAA8C,IAAP7zB,EAAgBA,EAAKvC,KAAKotB,SAASsJ,sBACjG,CACAxM,UAAAA,GACQlqB,KAAKwD,QAAQme,QACb3hB,KAAKwD,QAAQme,OAAO5f,SAASse,IACzBrgB,KAAK22B,WAAWtW,EAAM,IAG1BrgB,KAAKwD,QAAQ+f,aACbvjB,KAAK8vB,UAAU9vB,KAAKwD,QAAQ+f,aAIhCvjB,KAAKohB,UAAUphB,KAAK8oB,UAAU,GAC9B9oB,KAAK42B,kBACD52B,KAAKotB,SAAS5pB,QAAQqzB,mCACtB72B,KAAK82B,oBACD92B,KAAKotB,SAAS5pB,QAAQqzB,iCAAiC72B,KAAKq1B,YAChEr1B,KAAK+F,eAAe/F,KAAK82B,qBACzB92B,KAAK82B,oBAAoB7K,KAAK,CAC1ByC,aAAc1uB,KAAKq2B,KACnB9T,IAAKviB,KAAKq1B,WAAW9S,IACrBzB,MAAO9gB,KAAKq1B,aAEhBr1B,KAAKi1B,cAActD,uBAAuB3xB,KAAK82B,oBAAoBtyB,UAEnExE,KAAKotB,SAAS5pB,QAAQuzB,kCACtB/2B,KAAKg3B,mBACDh3B,KAAKotB,SAAS5pB,QAAQuzB,gCAAgC/2B,KAAKq1B,YAC/Dr1B,KAAK+F,eAAe/F,KAAKg3B,oBACzBh3B,KAAKg3B,mBAAmB/K,KAAK,CACzByC,aAAc1uB,KAAKq2B,KACnB9T,IAAKviB,KAAKq1B,WAAW9S,IACrBzB,MAAO9gB,KAAKq1B,aAEhBr1B,KAAKi1B,cAAcnD,sBAAsB9xB,KAAKg3B,mBAAmBxyB,UAEjExE,KAAKotB,SAAS5pB,QAAQyzB,oCACtBj3B,KAAKk3B,qBACDl3B,KAAKotB,SAAS5pB,QAAQyzB,kCAAkCj3B,KAAKq1B,YACjEr1B,KAAK+F,eAAe/F,KAAKk3B,sBACzBl3B,KAAKk3B,qBAAqBjL,KAAK,CAC3ByC,aAAc1uB,KAAKq2B,KACnB9T,IAAKviB,KAAKq1B,WAAW9S,IACrBzB,MAAO9gB,KAAKq1B,aAEhBr1B,KAAKi1B,cAAchD,wBAAwBjyB,KAAKk3B,qBAAqB1yB,SAE7E,CACAiyB,QAAAA,CAASpW,GACLrgB,KAAKm1B,iBAAiB/F,YAAY/O,EAAO,CAAEgP,UAAU,GACzD,CACArrB,OAAAA,CAAQqc,GACJ,OAAOrgB,KAAKi1B,cAAcjxB,QAAQqc,EAAMjB,GAC5C,CACApE,MAAAA,GACI,IAAIzY,EACJ,MAAM6I,EAAS,CACXkG,MAAOtR,KAAKi1B,cAActT,OAC1BwV,WAAyC,QAA5B50B,EAAKvC,KAAK40B,oBAAiC,IAAPryB,OAAgB,EAASA,EAAG6c,GAC7EA,GAAIpf,KAAKof,IAQb,OANoB,IAAhBpf,KAAKob,SACLhQ,EAAOgQ,OAASpb,KAAKob,QAErBpb,KAAK6sB,OAAO4E,SACZrmB,EAAOkrB,YAAa,GAEjBlrB,CACX,CACAkW,UAAAA,CAAW9d,GACFA,IACDA,EAAU,CAAC,GAEVA,EAAQ6c,QACT7c,EAAQ6c,MAAQrgB,KAAKujB,aAEzB,MAAMxf,EAAQP,EAAQ6c,MAAQrgB,KAAK2hB,OAAO3d,QAAQR,EAAQ6c,QAAU,EACpE,IAAI+W,EACJ,GAAIrzB,EAAQ/D,KAAK2hB,OAAOpgB,OAAS,EAC7B61B,EAAkBrzB,EAAQ,MAEzB,IAAKP,EAAQ6zB,aAId,OAHAD,EAAkB,CAItB,CACAp3B,KAAK8vB,UAAU9vB,KAAK2hB,OAAOyV,GAC/B,CACA7V,cAAAA,CAAe/d,GAOX,GANKA,IACDA,EAAU,CAAC,GAEVA,EAAQ6c,QACT7c,EAAQ6c,MAAQrgB,KAAKujB,cAEpB/f,EAAQ6c,MACT,OAEJ,MAAMtc,EAAQ/D,KAAK2hB,OAAO3d,QAAQR,EAAQ6c,OAC1C,IAAI+W,EACJ,GAAIrzB,EAAQ,EACRqzB,EAAkBrzB,EAAQ,MAEzB,IAAKP,EAAQ6zB,aAId,OAHAD,EAAkBp3B,KAAK2hB,OAAOpgB,OAAS,CAI3C,CACAvB,KAAK8vB,UAAU9vB,KAAK2hB,OAAOyV,GAC/B,CACAE,aAAAA,CAAcjX,GACV,OAAOrgB,KAAK2hB,OAAOtF,SAASgE,EAChC,CACA4L,IAAAA,CAAKN,GACD,CAEJvB,MAAAA,CAAOuB,GACH,CAEJ5J,KAAAA,GACI,IAAIxf,EACyB,QAA5BA,EAAKvC,KAAK40B,oBAAiC,IAAPryB,GAAyBA,EAAGwf,OACrE,CACA+N,SAAAA,CAAUzP,EAAO7c,QAAO,IAAPA,IAAAA,EAAU,CAAC,IAOK,iBAAlBA,EAAQO,OACfP,EAAQO,MAAQ/D,KAAK2hB,OAAOpgB,UAC5BiC,EAAQO,MAAQ/D,KAAK2hB,OAAOpgB,QAEhC,MAAMg2B,IAAkB/zB,EAAQ+zB,cAEhClX,EAAMmX,kBAAkBx3B,KAAKq1B,WAAY,CACrCkC,cAAe/zB,EAAQ+zB,gBAE3Bv3B,KAAK22B,WAAWtW,EAAO7c,EAAQO,MAAO,CAClCwzB,cAAeA,IAEfv3B,KAAK40B,eAAiBvU,GAIrBkX,GACDv3B,KAAKy3B,iBAAiBpX,GAErB7c,EAAQk0B,oBACT13B,KAAKotB,SAAS5M,iBAAiBxgB,KAAKq1B,YAEnC7xB,EAAQ+zB,eACTv3B,KAAK42B,mBAVL52B,KAAKm1B,iBAAiB/F,YAAY/O,EAAO,CAAEgP,UAAU,GAY7D,CACAvN,WAAAA,CAAY6V,EAAen0B,QAAO,IAAPA,IAAAA,EAAU,CACjC+zB,eAAe,IAEf,MAAMnY,EAA8B,iBAAlBuY,EACZA,EACAA,EAAcvY,GACdwY,EAAgB53B,KAAK60B,QAAQpB,MAAMpT,GAAUA,EAAMjB,KAAOA,IAChE,IAAKwY,EACD,MAAM,IAAIp1B,MAAM,qBAEpB,OAAOxC,KAAK63B,aAAaD,EAAep0B,EAC5C,CACAs0B,cAAAA,GACI,GAAI93B,KAAK2hB,OAAOpgB,OAAS,EAAG,CAExB,MAAMw2B,EAAc,IAAI/3B,KAAK2hB,QAC7B,IAAK,MAAMtB,KAAS0X,EAChB/3B,KAAKg4B,QAAQ3X,EAErB,MAEIrgB,KAAKotB,SAAS/L,YAAYrhB,KAAKq1B,WAEvC,CACAtF,UAAAA,CAAW1P,GACPrgB,KAAKg4B,QAAQ3X,EACjB,CACA2X,OAAAA,CAAQ3X,GACJrgB,KAAKotB,SAAStL,YAAYzB,EAC9B,CACAkP,aAAAA,CAAclP,GACV,OAAOrgB,KAAK40B,eAAiBvU,CACjC,CACA4X,aAAAA,CAAczzB,GACVxE,KAAKi1B,cAActD,uBAAuBntB,EAC9C,CACA4c,SAAAA,CAAU8W,EAAenV,QAAK,IAALA,IAAAA,GAAQ,IACxBA,GAAS/iB,KAAK8oB,WAAaoP,KAGhCl4B,KAAKozB,eAAiB8E,EACtB3wB,EAAYvH,KAAKkM,UAAW,eAAgBgsB,GAC5C3wB,EAAYvH,KAAKkM,UAAW,kBAAmBgsB,GAC/Cl4B,KAAKi1B,cAAc7T,UAAUphB,KAAK8oB,WAC7B9oB,KAAK40B,cAAgB50B,KAAK2hB,OAAOpgB,OAAS,GAC3CvB,KAAKy3B,iBAAiBz3B,KAAK2hB,OAAO,IAEtC3hB,KAAK42B,kBACT,CACA/hB,MAAAA,CAAOnL,EAAOC,GACV,IAAIpH,EACJvC,KAAKipB,OAASvf,EACd1J,KAAKkpB,QAAUvf,EACf3J,KAAKm1B,iBAAiBtgB,OAAO7U,KAAKipB,OAAQjpB,KAAKkpB,UACd,QAA5B3mB,EAAKvC,KAAK40B,oBAAiC,IAAPryB,OAAgB,EAASA,EAAGsS,SACjE7U,KAAK40B,aAAa/f,OAAO7U,KAAKipB,OAAQjpB,KAAKkpB,QAEnD,CACA2O,YAAAA,CAAaxX,EAAO7c,GAChB,MAAMgwB,EAAgBxzB,KAAK40B,eAAiBvU,EAE5C,GADArgB,KAAKm4B,cAAc9X,GACfmT,GAAiBxzB,KAAK2hB,OAAOpgB,OAAS,EAAG,CACzC,MAAM62B,EAAYp4B,KAAKu1B,iBAAiB,GACxCv1B,KAAK8vB,UAAUsI,EAAW,CACtBb,cAAe/zB,EAAQ+zB,cACvBG,mBAAoBl0B,EAAQ60B,oBAEpC,CAOA,OANIr4B,KAAK40B,cAAuC,IAAvB50B,KAAK2hB,OAAOpgB,QACjCvB,KAAKy3B,sBAAiBh3B,GAErB+C,EAAQ+zB,eACTv3B,KAAK42B,kBAEFvW,CACX,CACA8X,aAAAA,CAAc9X,GACV,MAAMtc,EAAQ/D,KAAK2hB,OAAO3d,QAAQqc,GAMlC,GALIrgB,KAAK40B,eAAiBvU,GACtBrgB,KAAKm1B,iBAAiBpF,aAE1B/vB,KAAKi1B,cAAc3wB,OAAO+b,EAAMjB,IAChCpf,KAAK60B,QAAQ5wB,OAAOF,EAAO,GACvB/D,KAAKu1B,iBAAiBlZ,SAASgE,GAAQ,CACvC,MAAMtc,EAAQ/D,KAAKu1B,iBAAiBvxB,QAAQqc,GAC5CrgB,KAAKu1B,iBAAiBtxB,OAAOF,EAAO,EACxC,CACA,MAAMsC,EAAarG,KAAKw1B,kBAAkBvU,IAAIZ,EAAMjB,IAChD/Y,IACAA,EAAWvE,UACX9B,KAAKw1B,kBAAkBlxB,OAAO+b,EAAMjB,KAExCpf,KAAKi2B,kBAAkB9xB,KAAK,CAAEkc,SAClC,CACAsW,UAAAA,CAAWtW,EAAOtc,EAA4BP,QAAvB,IAALO,IAAAA,EAAQ/D,KAAK2hB,OAAOpgB,aAAe,IAAPiC,IAAAA,EAAU,CAAE+zB,eAAe,IACrE,MACMe,EADgBt4B,KAAK60B,QAAQ7wB,QAAQqc,IACD,EAC1CrgB,KAAKi1B,cAAc/F,OACnBlvB,KAAKm1B,iBAAiBjG,OACtBlvB,KAAKi1B,cAAcnF,UAAUzP,EAAOtc,GAC/BP,EAAQ+zB,eACTv3B,KAAKm1B,iBAAiBrF,UAAUzP,GAEhCiY,IAIJt4B,KAAKu4B,UAAUlY,GACfrgB,KAAK2hB,OAAO1d,OAAOF,EAAO,EAAGsc,GAC7BrgB,KAAKw1B,kBAAkBxwB,IAAIqb,EAAMjB,GAAI,IAAI1Z,EAAoB2a,EAAMkC,IAAIiW,kBAAkB70B,GAAU3D,KAAK61B,uBAAuB1xB,KAAKR,KAAS0c,EAAMkC,IAAIyH,uBAAuBrmB,GAAU3D,KAAK+1B,4BAA4B5xB,KAAKR,OAC9N3D,KAAK41B,eAAezxB,KAAK,CAAEkc,UAC/B,CACAoX,gBAAAA,CAAiBpX,GACTrgB,KAAK40B,eAAiBvU,IAG1BrgB,KAAK40B,aAAevU,EAChBA,IACArgB,KAAKi1B,cAAc1B,eAAelT,GAClCA,EAAMxL,OAAO7U,KAAKipB,OAAQjpB,KAAKkpB,SAC/BlpB,KAAKu4B,UAAUlY,GACfrgB,KAAKk2B,wBAAwB/xB,KAAK,CAC9Bkc,WAGZ,CACAkY,SAAAA,CAAUlY,GACFrgB,KAAKu1B,iBAAiBlZ,SAASgE,IAC/BrgB,KAAKu1B,iBAAiBtxB,OAAOjE,KAAKu1B,iBAAiBvxB,QAAQqc,GAAQ,GAEvErgB,KAAKu1B,iBAAmB,CAAClV,KAAUrgB,KAAKu1B,iBAC5C,CACAqB,eAAAA,GACI,IAAIr0B,EAAI+kB,EAGR,GAFA/f,EAAYvH,KAAKkM,UAAW,QAASlM,KAAK80B,SAC1C90B,KAAK2hB,OAAO5f,SAASse,GAAUA,EAAMoY,cACjCz4B,KAAK80B,UAAY90B,KAAKg1B,UAAW,CACjC,MAAMA,EAAYh1B,KAAKotB,SAASsL,2BAChC1D,EAAU/I,KAAK,CACXyC,aAAc1uB,KAAKq2B,KACnBvV,MAAO9gB,KAAKq1B,aAEhBr1B,KAAKg1B,UAAYA,EACjBpwB,EAAsB5E,KAAKg1B,UAAUxwB,QAAS,SAAS,KAC9CxE,KAAK8oB,UACN9oB,KAAKotB,SAAS5M,iBAAiBxgB,KAAKq1B,WACxC,IAEJr1B,KAAKi1B,cAAc9F,OACnBnvB,KAAKm1B,iBAAiB3wB,QAAQ2M,YAAYnR,KAAKg1B,UAAUxwB,SACzDxE,KAAKg1B,UAAUwC,kBAAkBx3B,KAAKq1B,YAAY,EACtD,EACKr1B,KAAK80B,SAAW90B,KAAKg1B,YACtBh1B,KAAKg1B,UAAUxwB,QAAQ6C,SACkB,QAAxCigB,GAAM/kB,EAAKvC,KAAKg1B,WAAWlzB,eAA4B,IAAPwlB,GAAyBA,EAAGpf,KAAK3F,GAClFvC,KAAKg1B,eAAYv0B,EACjBT,KAAKi1B,cAAc/F,OAE3B,CACAzI,iBAAAA,CAAkB9iB,EAAOkS,EAAU8O,GAC/B,MAAMgU,EAAa,IAAI/E,GAA+BjwB,EAAOghB,EAAQ9O,EAAUhV,EAAcb,KAAKotB,SAASjM,SAASnhB,KAAKof,KAEzH,OADApf,KAAKm2B,0BAA0BhyB,KAAKw0B,GAC7BA,EAAW9E,UACtB,CACA0C,eAAAA,CAAgB9xB,EAAMd,EAAOkS,EAAU9R,GACnC,GAAoB,mBAAhB/D,KAAKob,OACL,OAUJ,MAAMiF,EAAyB,iBAAVtc,EAAqB/D,KAAK2hB,OAAO5d,QAAStD,EACzDm4B,EAAgB,IAAInE,GAAsB,CAC5CtP,YAAaxhB,EACbkS,WACAwK,QACA1f,QAASA,IAAME,IACfiyB,KAdJ,WACI,OAAQruB,GACJ,IAAK,SACD,MAAwB,iBAAVV,EAAqB,MAAQ,eAC/C,IAAK,UACD,MAAO,UAEnB,CAOU80B,GACN/X,MAAO9gB,KAAKq1B,WACZ9S,IAAKviB,KAAKq2B,OAGd,GADAr2B,KAAK21B,YAAYxxB,KAAKy0B,GAClBA,EAAcz2B,iBACd,OAEJ,MAAMzB,EAAOG,IACb,GAAIH,GAAQA,EAAKd,SAAWI,KAAKotB,SAAShO,GAAI,CAC1C,GAAqB,OAAjB1e,EAAKZ,QAAkB,CAEvB,MAAM,QAAED,GAAYa,EAMpB,YALAV,KAAKy1B,QAAQtxB,KAAK,CACdwgB,OAAQ9O,EACRhW,QAASA,EACTkE,SAGR,CAEA,IADoE,IAA9C/D,KAAKi1B,cAAcjxB,QAAQtD,EAAKZ,UACL,IAA5BE,KAAKi1B,cAAclwB,KACpC,OAEJ,MAAM,QAAElF,EAAO,QAAEC,GAAYY,EAE7B,GADoBV,KAAKof,KAAOvf,IACZgW,EAAU,CAE1B,GADiB7V,KAAKi1B,cAAcjxB,QAAQlE,KAC3BiE,EACb,MAER,CACA/D,KAAKy1B,QAAQtxB,KAAK,CACdwgB,OAAQ9O,EACRhW,QAASa,EAAKb,QACdi5B,OAAQp4B,EAAKZ,QACbiE,SAER,MAEI/D,KAAKouB,WAAWjqB,KAAK,IAAIqwB,GAAqB,CAC1CrP,YAAaxhB,EACbkS,WACAwK,QACA1f,QAASA,IAAME,IACfigB,MAAO9gB,KAAKq1B,WACZ9S,IAAKviB,KAAKq2B,OAGtB,CACAv0B,OAAAA,GACI,IAAIS,EAAI+kB,EAAIyR,EACZh5B,MAAM+B,UACoB,QAAzBS,EAAKvC,KAAKg1B,iBAA8B,IAAPzyB,GAAyBA,EAAGiC,QAAQ6C,SACW,QAAhF0xB,EAA+B,QAAzBzR,EAAKtnB,KAAKg1B,iBAA8B,IAAP1N,OAAgB,EAASA,EAAGxlB,eAA4B,IAAPi3B,GAAyBA,EAAG7wB,KAAKof,GAC1HtnB,KAAKg1B,eAAYv0B,EACjB,IAAK,MAAM4f,KAASrgB,KAAK2hB,OACrBtB,EAAMve,UAEV9B,KAAKi1B,cAAcnzB,UACnB9B,KAAKm1B,iBAAiBrzB,SAC1B,ECznBG,MAAMk3B,WAA6BrQ,GACtChpB,WAAAA,CAAYyf,EAAIsC,EAAWrB,GACvBtgB,MAAMqf,EAAIsC,GACV1hB,KAAKwqB,gCAAkC,IAAIvnB,EAC3CjD,KAAKyqB,+BAAiCzqB,KAAKwqB,gCAAgC7mB,MAC3E3D,KAAK0qB,wBAA0B,IAAIznB,EACnCjD,KAAK2qB,uBAAyB3qB,KAAK0qB,wBAAwB/mB,MAC3D3D,KAAK4qB,iBAAmB,IAAI3nB,EAC5BjD,KAAK6qB,gBAAkB7qB,KAAK4qB,iBAAiBjnB,MAC7C3D,KAAK+F,eAAe/F,KAAKwqB,gCAAiCxqB,KAAK0qB,wBAAyB1qB,KAAK4qB,kBACzFvK,GACArgB,KAAKkqB,WAAW7J,EAExB,CACAyK,cAAAA,CAAepoB,GACX1C,KAAKwqB,gCAAgCrmB,KAAKzB,EAC9C,CACAqoB,OAAAA,CAAQpnB,GACJ3D,KAAK4qB,iBAAiBzmB,KAAKR,EAC/B,EClBG,MAAMs1B,WAAsBvN,GAC/B,YAAI3f,GACA,OAAO/L,KAAKk5B,SAChB,CACA,QAAIltB,GACA,OAAOhM,KAAKm5B,KAChB,CACA,gBAAI5hB,GACA,MAAM7N,EAAsC,mBAAvB1J,KAAKo5B,cACpBp5B,KAAKo5B,gBACLp5B,KAAKo5B,cAKX,OAJI1vB,IAAU1J,KAAKq5B,yBACfr5B,KAAKq5B,uBAAyB3vB,EAC9B1J,KAAKs5B,qBAEF5vB,CACX,CACA,iBAAI+N,GACA,MAAM9N,EAAwC,mBAAxB3J,KAAKu5B,eACrBv5B,KAAKu5B,iBACLv5B,KAAKu5B,eAKX,OAJI5vB,IAAW3J,KAAKw5B,0BAChBx5B,KAAKw5B,wBAA0B7vB,EAC/B3J,KAAKs5B,qBAEF3vB,CACX,CACA,iBAAI+N,GACA,MAAM/N,EAAwC,mBAAxB3J,KAAKy5B,eACrBz5B,KAAKy5B,iBACLz5B,KAAKy5B,eAKX,OAJI9vB,IAAW3J,KAAK05B,0BAChB15B,KAAK05B,wBAA0B/vB,EAC/B3J,KAAKs5B,qBAEF3vB,CACX,CACA,gBAAI6N,GACA,MAAM9N,EAAsC,mBAAvB1J,KAAK25B,cACpB35B,KAAK25B,gBACL35B,KAAK25B,cAKX,OAJIjwB,IAAU1J,KAAK45B,yBACf55B,KAAK45B,uBAAyBlwB,EAC9B1J,KAAKs5B,qBAEF5vB,CACX,CACA,YAAIof,GACA,OAAO9oB,KAAKuiB,IAAIuG,QACpB,CACAnpB,WAAAA,CAAYyf,EAAIsC,EAAWle,EAAS+e,GAChCxiB,MAAMqf,EAAIsC,EAAWa,QAAiCA,EAAM,IAAIyW,GAAqB5Z,EAAIsC,IACzF1hB,KAAKq5B,uBAAyB,EAC9Br5B,KAAK45B,uBAAyB/rB,OAAOgsB,iBACrC75B,KAAKw5B,wBAA0B,EAC/Bx5B,KAAK05B,wBAA0B7rB,OAAOgsB,iBACtC75B,KAAKo5B,cAAgB,EACrBp5B,KAAKu5B,eAAiB,EACtBv5B,KAAK25B,cAAgB9rB,OAAOgsB,iBAC5B75B,KAAKy5B,eAAiB5rB,OAAOgsB,iBAC7B75B,KAAKm5B,OAAQ,EACbn5B,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACmD,iBAA5EH,aAAyC,EAASA,EAAQ+T,gBAClEvX,KAAKo5B,cAAgB51B,EAAQ+T,cAEuD,iBAA5E/T,aAAyC,EAASA,EAAQgU,gBAClExX,KAAK25B,cAAgBn2B,EAAQgU,cAEwD,iBAA7EhU,aAAyC,EAASA,EAAQiU,iBAClEzX,KAAKu5B,eAAiB/1B,EAAQiU,eAEuD,iBAA7EjU,aAAyC,EAASA,EAAQkU,iBAClE1X,KAAKy5B,eAAiBj2B,EAAQkU,eAElC1X,KAAKuiB,IAAI2H,WAAWlqB,MACpBA,KAAK+F,eAAe/F,KAAKuiB,IAAIqH,wBAAwBjmB,IACjD,MAAM,UAAE2c,GAAc3c,GAChB,SAAEypB,GAAaptB,KAAK2rB,QAC1ByB,EAAS/gB,WAAWrM,KAAMsgB,EAAU,IACpCtgB,KAAKuiB,IAAIuH,gBAAe,KACxB,MAAM,SAAEsD,GAAaptB,KAAK2rB,QAC1ByB,EAAS5M,iBAAiBxgB,KAAK,IAC/BA,KAAKuiB,IAAIkI,gCAAgC9mB,IACP,iBAAvBA,EAAM4T,cACiB,mBAAvB5T,EAAM4T,eACbvX,KAAKo5B,cAAgBz1B,EAAM4T,cAEI,iBAAxB5T,EAAM8T,eACkB,mBAAxB9T,EAAM8T,gBACbzX,KAAKu5B,eAAiB51B,EAAM8T,eAEE,iBAAvB9T,EAAM6T,cACiB,mBAAvB7T,EAAM6T,eACbxX,KAAK25B,cAAgBh2B,EAAM6T,cAEI,iBAAxB7T,EAAM+T,eACkB,mBAAxB/T,EAAM+T,gBACb1X,KAAKy5B,eAAiB91B,EAAM+T,cAChC,IACA1X,KAAKuiB,IAAIsI,iBAAiBlnB,IAC1B3D,KAAK2W,aAAaxS,KAAK,CACnBwF,OAAQhG,EAAMgG,OACdD,MAAO/F,EAAM+F,OACf,IACF1J,KAAK2W,aACb,CACAtK,UAAAA,CAAWiU,GACPtgB,KAAKuiB,IAAIlK,uBAAuBlU,KAAK,CAAEmc,aAC3C,CACAc,SAAAA,CAAU0H,GACN9oB,KAAKuiB,IAAItC,mBAAmB9b,KAAK,CAAE2kB,YACvC,CACAmD,IAAAA,CAAK9B,GACGA,EAAWzS,gBACX1X,KAAKy5B,eAAiBtP,EAAWzS,eAEjCyS,EAAW1S,gBACXzX,KAAKu5B,eAAiBpP,EAAW1S,eAEjC0S,EAAW3S,eACXxX,KAAK25B,cAAgBxP,EAAW3S,cAEhC2S,EAAW5S,eACXvX,KAAKo5B,cAAgBjP,EAAW5S,cAEpCvX,KAAKk5B,UAAY/O,EAAWpe,SAC5B/L,KAAKm5B,QAAUhP,EAAWne,KAC1BjM,MAAMksB,KAAK9B,GACyB,kBAAzBA,EAAW7J,WAClBtgB,KAAKqM,WAAW8d,EAAW7J,UAEnC,CACAgZ,iBAAAA,GACIt5B,KAAKuiB,IAAImI,wBAAwBvmB,KAAK,CAClCoT,aAAcvX,KAAKq5B,uBACnB7hB,aAAcxX,KAAK45B,uBACnBniB,cAAezX,KAAKw5B,wBACpB9hB,cAAe1X,KAAK05B,yBAE5B,CACA1e,MAAAA,GACI,MAAM3E,EAAQtW,MAAMib,SACd8e,EAAWp3B,GAAUA,IAAUmL,OAAOgsB,sBAAmBp5B,EAAYiC,EACrEq3B,EAAWr3B,GAAWA,GAAS,OAAIjC,EAAYiC,EACrD,OAAO2f,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGjM,GAAQ,CAAEoB,cAAesiB,EAAQ/5B,KAAKyX,eAAgBC,cAAeoiB,EAAQ95B,KAAK0X,eAAgBH,aAAcwiB,EAAQ/5B,KAAKuX,cAAeC,aAAcsiB,EAAQ95B,KAAKwX,cAAexL,KAAMhM,KAAKgM,KAAMD,SAAU/L,KAAK+L,UACjQ,ECjJJ,MAAMiuB,GAA0B,sDACzB,MAAMC,WAAkCjB,GAC3C,YAAI1e,GACA,IAAKta,KAAKk6B,OACN,MAAM,IAAI13B,MAAMw3B,IAEpB,OAAOh6B,KAAKk6B,OAAO/S,MAAM7M,QAC7B,CACA3a,WAAAA,CAAYyf,EAAIgO,GACZrtB,MAAMqf,EAAI,qBACVpf,KAAKotB,SAAWA,EAChBptB,KAAKm6B,mBAAqB,IAAIh0B,EAC9BnG,KAAKs1B,qBAAuB,IAAIryB,EAChCjD,KAAKo6B,oBAAsBp6B,KAAKs1B,qBAAqB3xB,MACrD3D,KAAKk2B,wBAA0B,IAAIjzB,EACnCjD,KAAK6iB,uBAAyB7iB,KAAKk2B,wBAAwBvyB,MAC3D3D,KAAK+F,eAAe/F,KAAKs1B,qBAAsBt1B,KAAKk2B,wBAAyBl2B,KAAKm6B,mBACtF,CACAE,KAAAA,GACI,GAAKr6B,KAAKk6B,OAGV,OAAOl6B,KAAKotB,SAAS/L,YAAYrhB,KAAKk6B,OAC1C,CACAI,SAAAA,GACI,MAA8B,WAAvBt6B,KAAKsa,SAAS7V,KACfzE,KAAKsa,SAASggB,YACdvxB,MACV,CACAwxB,MAAAA,CAAO/2B,GACH,IAAIjB,EAAI+kB,EAAIyR,EACZ,IAAK/4B,KAAKk6B,OACN,MAAM,IAAI13B,MAAMw3B,IAEpB,MAAMlZ,EAAiC,QAAxBve,EAAKiB,EAAQsd,aAA0B,IAAPve,EAAgBA,EAAKvC,KAAKotB,SAAS3J,SAAS,CACvFlJ,UAAW8K,GAAgD,QAA3BiC,EAAK9jB,EAAQqS,gBAA6B,IAAPyR,EAAgBA,EAAK,SACxFiQ,eAAe,IAEnBv3B,KAAKotB,SAASoN,iBAAiB,CAC3Bh1B,KAAM,CAAE3F,QAASG,KAAKk6B,OAAO9a,IAC7BjU,GAAI,CACA2V,QACAjL,SAAUrS,EAAQsd,OACgB,QAA3BiY,EAAKv1B,EAAQqS,gBAA6B,IAAPkjB,EAAgBA,EACpD,WAGlB,CACA0B,QAAAA,GACI,IAAKz6B,KAAKk6B,OACN,MAAM,IAAI13B,MAAMw3B,IAEO,SAAvBh6B,KAAKsa,SAAS7V,MAIlBzE,KAAKotB,SAAS7M,cAAcvgB,KAAKk6B,OACrC,CACAQ,WAAAA,GACI,IAAK16B,KAAKk6B,OACN,MAAM,IAAI13B,MAAMw3B,IAEpB,OAAOh6B,KAAKotB,SAAS3M,iBAAiBzgB,KAAKk6B,OAC/C,CACAS,aAAAA,GACI,IAAK36B,KAAKk6B,OACN,MAAM,IAAI13B,MAAMw3B,IAEhBh6B,KAAK06B,eACL16B,KAAKotB,SAAS1M,oBAEtB,CACAwJ,UAAAA,CAAWpJ,GAQP9gB,KAAKk6B,OAASpZ,EACdzc,gBAAe,KACXrE,KAAKm6B,mBAAmBz3B,MACpB1C,KAAKk6B,OAAO/S,MAAMtE,wBAAwBlf,IACtC3D,KAAKk2B,wBAAwB/xB,KAAKR,EAAM,GAC1C,GAEd,ECtFG,MAAMi3B,WAA2B3B,GACpC,UAAItX,GACA,OAAO3hB,KAAK66B,OAAOlZ,MACvB,CACA,eAAI4B,GACA,OAAOvjB,KAAK66B,OAAOtX,WACvB,CACA,QAAIxe,GACA,OAAO/E,KAAK66B,OAAO91B,IACvB,CACA,SAAIoiB,GACA,OAAOnnB,KAAK66B,MAChB,CACA,UAAIzf,GACA,OAAOpb,KAAK66B,OAAOzf,MACvB,CACA,UAAIA,CAAO1Y,GACP1C,KAAK66B,OAAOzf,OAAS1Y,CACzB,CACA,UAAImqB,GACA,OAAO7sB,KAAK66B,OAAOhO,MACvB,CACAltB,WAAAA,CAAYytB,EAAUhO,EAAI5b,GACtBzD,MAAMqf,EAAI,oBAAqB,CAC3B3H,cAzBgC,IA0BhCF,aA3B+B,KA4BhC,IAAI0iB,GAA0B7a,EAAIgO,IACrCptB,KAAKuiB,IAAI2H,WAAWlqB,MACpBA,KAAK66B,OAAS,IAAIlG,GAAwB30B,KAAKwE,QAAS4oB,EAAUhO,EAAI5b,EAASxD,KACnF,CACA+hB,KAAAA,GACS/hB,KAAKuiB,IAAIuG,UACV9oB,KAAKuiB,IAAInB,YAEbrhB,MAAMgiB,OACV,CACAmI,UAAAA,GACIlqB,KAAK66B,OAAO3Q,YAChB,CACA9I,SAAAA,CAAU0H,GACN/oB,MAAMqhB,UAAU0H,GAChB9oB,KAAKmnB,MAAM/F,UAAU0H,EACzB,CACAjU,MAAAA,CAAOnL,EAAOC,GACV5J,MAAM8U,OAAOnL,EAAOC,GACpB3J,KAAKmnB,MAAMtS,OAAOnL,EAAOC,EAC7B,CACAuiB,YAAAA,GACI,OAAOlsB,KAAK66B,MAChB,CACA7f,MAAAA,GACI,OAAOhb,KAAKmnB,MAAMnM,QACtB,ECtDG,MAAM8f,WAA6B9B,GACtC,YAAI1e,GACA,OAAOta,KAAK8gB,MAAMyB,IAAIjI,QAC1B,CACA,SAAIwT,GACA,OAAO9tB,KAAKqgB,MAAMyN,KACtB,CACA,iBAAIoK,GACA,OAAOl4B,KAAK8gB,MAAMgI,QACtB,CACA,YAAI2G,GACA,OAAOzvB,KAAKqgB,MAAMoP,QACtB,CACA,SAAI3O,CAAMpe,GACN,MAAMq4B,EAAW/6B,KAAKk6B,OAClBl6B,KAAKk6B,SAAWx3B,IAChB1C,KAAKk6B,OAASx3B,EACd1C,KAAKg7B,kBAAkB72B,KAAK,CAAC,GAC7BnE,KAAKi7B,yBAAyBF,GAC9B/6B,KAAKs1B,qBAAqBnxB,KAAK,CAC3BmW,SAAUta,KAAK8gB,MAAMyB,IAAIjI,WAGrC,CACA,SAAIwG,GACA,OAAO9gB,KAAKk6B,MAChB,CACA,gBAAIgB,GACA,OAAOl7B,KAAKm7B,aAChB,CACAx7B,WAAAA,CAAY0gB,EAAOS,EAAOsM,EAAU1L,EAAWwZ,GAC3Cn7B,MAAMsgB,EAAMjB,GAAIsC,GAChB1hB,KAAKqgB,MAAQA,EACbrgB,KAAKotB,SAAWA,EAChBptB,KAAKo7B,kBAAoB,IAAIn4B,EAC7BjD,KAAKw4B,iBAAmBx4B,KAAKo7B,kBAAkBz3B,MAC/C3D,KAAKq7B,wBAA0B,IAAIp4B,EACnCjD,KAAK8iB,uBAAyB9iB,KAAKq7B,wBAAwB13B,MAC3D3D,KAAKg7B,kBAAoB,IAAI/3B,EAC7BjD,KAAKs7B,iBAAmBt7B,KAAKg7B,kBAAkBr3B,MAC/C3D,KAAKu7B,qBAAuB,IAAIt4B,EAChCjD,KAAKw7B,oBAAsBx7B,KAAKu7B,qBAAqB53B,MACrD3D,KAAKs1B,qBAAuB,IAAIryB,EAChCjD,KAAKo6B,oBAAsBp6B,KAAKs1B,qBAAqB3xB,MACrD3D,KAAKy7B,sBAAwB,IAAIt1B,EACjCnG,KAAKm7B,cAAgBD,EACrBl7B,KAAKkqB,WAAW7J,GAChBrgB,KAAKk6B,OAASpZ,EACd9gB,KAAKi7B,2BACLj7B,KAAK+F,eAAe/F,KAAKy7B,sBAAuBz7B,KAAKu7B,qBAAsBv7B,KAAKo7B,kBAAmBp7B,KAAKg7B,kBAAmBh7B,KAAKq7B,wBAAyBr7B,KAAKs1B,qBAClK,CACAgF,SAAAA,GACI,OAAOt6B,KAAK8gB,MAAMyB,IAAI+X,WAC1B,CACAC,MAAAA,CAAO/2B,GACH,IAAIjB,EACJvC,KAAKotB,SAASoN,iBAAiB,CAC3Bh1B,KAAM,CAAE3F,QAASG,KAAKk6B,OAAO9a,GAAItf,QAASE,KAAKqgB,MAAMjB,IACrDjU,GAAI,CACA2V,MAAOtd,EAAQsd,MACfjL,SAAsC,QAA3BtT,EAAKiB,EAAQqS,gBAA6B,IAAPtT,EAAgBA,EAAK,SACnEwB,MAAOP,EAAQO,QAG3B,CACA23B,QAAAA,CAAS5N,GACL9tB,KAAKqgB,MAAMqb,SAAS5N,EACxB,CACA6N,WAAAA,CAAYlM,GACRzvB,KAAKqgB,MAAMsb,YAAYlM,EAC3B,CACA4K,KAAAA,GACIr6B,KAAK8gB,MAAMqG,MAAM4I,WAAW/vB,KAAKqgB,MACrC,CACAoa,QAAAA,GACIz6B,KAAK8gB,MAAMyB,IAAIkY,UACnB,CACAC,WAAAA,GACI,OAAO16B,KAAK8gB,MAAMyB,IAAImY,aAC1B,CACAC,aAAAA,GACI36B,KAAK8gB,MAAMyB,IAAIoY,eACnB,CACAM,wBAAAA,CAAyBW,GACrB,IAAIr5B,EACJ,IAAIs5B,EAAoH,QAA/Ft5B,EAAKq5B,aAAqD,EAASA,EAAc9S,gBAA6B,IAAPvmB,GAAgBA,EAChJvC,KAAKy7B,sBAAsB/4B,MAAQ,IAAIgD,EAAoB1F,KAAK8gB,MAAMyB,IAAIjK,uBAAuB3U,IAC7F,MAAMm4B,GAAmBn4B,EAAM2c,WAAatgB,KAAKsgB,UAC3Cyb,EAAmBp4B,EAAM2c,YAActgB,KAAKsgB,UAC5CkT,EAAgBxzB,KAAK8gB,MAAMqG,MAAMoI,cAAcvvB,KAAKqgB,QACtDyb,GAAoBC,GAAoBvI,IACxCxzB,KAAKqY,uBAAuBlU,KAAKR,EACrC,IACA3D,KAAK8gB,MAAMyB,IAAI6X,qBAAqBz2B,IAChC3D,KAAK8gB,QAAU9gB,KAAKqgB,MAAMS,OAG9B9gB,KAAKs1B,qBAAqBnxB,KAAKR,EAAM,IACrC3D,KAAK8gB,MAAMyB,IAAIrC,mBAAkB,KAC7BlgB,KAAK8gB,QAAU9gB,KAAKqgB,MAAMS,OAG1B+a,IAAsB77B,KAAKk4B,gBAC3B2D,EAAoB77B,KAAKk4B,cACzBl4B,KAAKq7B,wBAAwBl3B,KAAK,CAC9B2kB,SAAU9oB,KAAKk4B,gBAEvB,IAER,EC7GG,MAAM8D,WAAsBt2B,EAC/B,UAAI2kB,GACA,OAAOrqB,KAAK2rB,OAChB,CACA,SAAImC,GACA,OAAO9tB,KAAKi8B,MAChB,CACA,SAAInb,GACA,OAAO9gB,KAAKk6B,MAChB,CACA,YAAIzK,GACA,IAAIltB,EACJ,OAAiC,QAAzBA,EAAKvC,KAAKk8B,iBAA8B,IAAP35B,EAAgBA,EAAKvC,KAAKotB,SAASqC,QAChF,CACA9vB,WAAAA,CAAYyf,EAAIsC,EAAWwZ,EAAc9N,EAAUsB,EAAc5N,EAAOnV,EAAMnI,GAC1EzD,QACAC,KAAKof,GAAKA,EACVpf,KAAKotB,SAAWA,EAChBptB,KAAK0uB,aAAeA,EACpB1uB,KAAK2L,KAAOA,EACZ3L,KAAKk8B,UAAY14B,EAAQisB,SACzBzvB,KAAKk6B,OAASpZ,EACd9gB,KAAKuiB,IAAM,IAAIuY,GAAqB96B,KAAMA,KAAKk6B,OAAQ9M,EAAU1L,EAAWwZ,GAC5El7B,KAAK+F,eAAe/F,KAAKuiB,IAAIuH,gBAAe,KACxCsD,EAASmG,eAAevzB,KAAK,IAC7BA,KAAKuiB,IAAIsI,iBAAiBlnB,IAG1B3D,KAAK8gB,MAAMyB,IAAIwI,QAAQpnB,EAAM,IAC7B3D,KAAKuiB,IAAIiZ,qBAAqB73B,IAC9B3D,KAAK8gB,MAAMqG,MAAMsP,SAASz2B,KAAK,IAEvC,CACAisB,IAAAA,CAAK5B,GACDrqB,KAAK2rB,QAAUtB,EAAOA,OACtBrqB,KAAK2L,KAAKsgB,KAAK5J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG+H,GAAS,CAAE9H,IAAKviB,KAAKuiB,IAAKmM,aAAc1uB,KAAK0uB,gBAC5F1uB,KAAK07B,SAASrR,EAAOyD,MACzB,CACA/L,KAAAA,GACI,MAAMpe,EAAQ,IAAI+kB,GAClB1oB,KAAKuiB,IAAIkH,aAAatlB,KAAKR,GACvBA,EAAMxB,kBAGLnC,KAAKuiB,IAAIuG,UACV9oB,KAAKuiB,IAAInB,WAEjB,CACApG,MAAAA,GACI,MAAO,CACHoE,GAAIpf,KAAKof,GACT+c,iBAAkBn8B,KAAK2L,KAAKwwB,iBAC5BjB,aAAcl7B,KAAK2L,KAAKuvB,aACxB7Q,OAAQhI,OAAO+J,KAAKpsB,KAAK2rB,SAAW,CAAC,GAAGpqB,OAAS,EAC3CvB,KAAK2rB,aACLlrB,EACNqtB,MAAO9tB,KAAK8tB,MACZ2B,SAAUzvB,KAAKk8B,UAEvB,CACAR,QAAAA,CAAS5N,GACkBA,IAAU9tB,KAAK8tB,QAElC9tB,KAAKi8B,OAASnO,EACd9tB,KAAKuiB,IAAI6Y,kBAAkBj3B,KAAK,CAAE2pB,UAE1C,CACA6N,WAAAA,CAAYlM,GACUA,IAAazvB,KAAKyvB,WAEhCzvB,KAAKk8B,UAAYzM,EACjBzvB,KAAKuiB,IAAIgZ,qBAAqBp3B,KAAK,CAC/BsrB,SAAUA,IAGtB,CACArF,MAAAA,CAAOzmB,GACH,IAAIpB,EAEJvC,KAAK2rB,QAAUtJ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA4B,QAAvB/f,EAAKvC,KAAK2rB,eAA4B,IAAPppB,EAAgBA,EAAK,CAAC,GAAKoB,EAAM0mB,QAKjH,IAAK,MAAM8B,KAAO9J,OAAO+J,KAAKzoB,EAAM0mB,aACN5pB,IAAtBkD,EAAM0mB,OAAO8B,WACNnsB,KAAK2rB,QAAQQ,GAI5BnsB,KAAK2L,KAAKye,OAAO,CACbC,OAAQrqB,KAAK2rB,SAErB,CACA6L,iBAAAA,CAAkB1W,EAAOtd,GACrBxD,KAAKk6B,OAASpZ,EACd9gB,KAAKuiB,IAAIzB,MAAQ9gB,KAAKk6B,OACtB,MAAMkC,EAAiBp8B,KAAKk6B,OAAO/S,MAAMoI,cAAcvvB,MACjD8oB,EAAW9oB,KAAK8gB,MAAMyB,IAAIuG,UAAYsT,GACtC54B,aAAyC,EAASA,EAAQ+zB,gBACxDv3B,KAAKuiB,IAAIuG,WAAaA,GACtB9oB,KAAKuiB,IAAItC,mBAAmB9b,KAAK,CAC7B2kB,SAAU9oB,KAAK8gB,MAAMyB,IAAIuG,UAAYsT,IAI7Cp8B,KAAKuiB,IAAIjC,YAAc8b,GACvBp8B,KAAKuiB,IAAIlK,uBAAuBlU,KAAK,CACjCmc,UAAW8b,GAGvB,CACA3D,SAAAA,GACI,MAAM2D,EAAiBp8B,KAAKk6B,OAAO/S,MAAMoI,cAAcvvB,MACjD8oB,EAAW9oB,KAAK8gB,MAAMyB,IAAIuG,UAAYsT,EACxCp8B,KAAKuiB,IAAIuG,WAAaA,GACtB9oB,KAAKuiB,IAAItC,mBAAmB9b,KAAK,CAC7B2kB,SAAU9oB,KAAK8gB,MAAMyB,IAAIuG,UAAYsT,IAGzCp8B,KAAKuiB,IAAIjC,YAAc8b,GACvBp8B,KAAKuiB,IAAIlK,uBAAuBlU,KAAK,CACjCmc,UAAW8b,GAGvB,CACAvnB,MAAAA,CAAOnL,EAAOC,GAEV3J,KAAKuiB,IAAI8G,sBAAsBllB,KAAK,CAChCuF,QACAC,OAAQA,IAEZ3J,KAAK2L,KAAKkJ,OAAOnL,EAAOC,EAC5B,CACA7H,OAAAA,GACI9B,KAAKuiB,IAAIzgB,UACT9B,KAAK2L,KAAK7J,SACd,EC5IJ,MAAMu6B,GAA4BhS,IAC9B,MAAMiS,EAAMn0B,SAASo0B,gBAAgB,6BAA8B,OACnED,EAAIE,eAAe,KAAM,SAAUnS,EAAO1gB,QAC1C2yB,EAAIE,eAAe,KAAM,QAASnS,EAAO3gB,OACzC4yB,EAAIE,eAAe,KAAM,UAAWnS,EAAOoS,SAC3CH,EAAIE,eAAe,KAAM,cAAe,SACxCF,EAAIE,eAAe,KAAM,YAAa,SACtCF,EAAIn1B,UAAUjD,IAAI,gBAClB,MAAMmZ,EAAOlV,SAASo0B,gBAAgB,6BAA8B,QAGpE,OAFAlf,EAAKmf,eAAe,KAAM,IAAKnS,EAAOhN,MACtCif,EAAInrB,YAAYkM,GACTif,CAAG,EAEDI,GAAoBA,IAAML,GAAyB,CAC5D3yB,MAAO,KACPC,OAAQ,KACR8yB,QAAS,YACTpf,KAAM,+HCdH,MAAMsf,WAAmBj3B,EAC5B,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,GACII,QAEAC,KAAKqqB,OAAS,CAAC,EACfrqB,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,iBAE1BxH,KAAK48B,SAAWz0B,SAAS2K,cAAc,OACvC9S,KAAK48B,SAASp1B,UAAY,yBAC1BxH,KAAK68B,OAAS10B,SAAS2K,cAAc,OACrC9S,KAAK68B,OAAOr1B,UAAY,wBACxBxH,KAAK68B,OAAO1rB,YAAYurB,MAExB18B,KAAKue,SAASpN,YAAYnR,KAAK48B,UAC/B58B,KAAKue,SAASpN,YAAYnR,KAAK68B,QAE/B78B,KAAK+F,eAAenB,EAAsB5E,KAAK68B,OAAQ,aAAcxP,IACjEA,EAAGjrB,gBAAgB,KAEvBpC,KAAK88B,QACT,CACA1S,MAAAA,CAAOzmB,GACH3D,KAAKqqB,OAAShI,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtiB,KAAKqqB,QAAS1mB,EAAM0mB,QAClErqB,KAAK88B,QACT,CACA/a,KAAAA,GACI,CAEJkK,IAAAA,CAAK5B,GACDrqB,KAAKqqB,OAASA,EACdrqB,KAAK48B,SAAS1L,YAAc7G,EAAOyD,MACnClpB,EAAsB5E,KAAK68B,OAAQ,SAAUxP,IACzCA,EAAGjrB,iBACHpC,KAAKqqB,OAAO9H,IAAI8X,OAAO,GAE/B,CACA0C,aAAAA,CAAc7C,GACVl6B,KAAK88B,QACT,CACAE,oBAAAA,CAAqBC,GACjBj9B,KAAK88B,QACT,CACAjoB,MAAAA,CAAOoU,EAAQC,GACX,CAEJ4T,MAAAA,GACQ98B,KAAK48B,SAAS1L,cAAgBlxB,KAAKqqB,OAAOyD,QAC1C9tB,KAAK48B,SAAS1L,YAAclxB,KAAKqqB,OAAOyD,MAEhD,ECvDG,MAAMoP,GACT,WAAI1N,GACA,OAAOxvB,KAAK48B,QAChB,CACA,OAAIxK,GACA,OAAOpyB,KAAKm9B,IAChB,CACAx9B,WAAAA,CAAYytB,EAAUhO,EAAI+c,EAAkBjB,GACxCl7B,KAAKotB,SAAWA,EAChBptB,KAAKof,GAAKA,EACVpf,KAAKm8B,iBAAmBA,EACxBn8B,KAAKk7B,aAAeA,EACpBl7B,KAAK48B,SAAW58B,KAAKo9B,uBAAuBp9B,KAAKof,GAAI+c,GACrDn8B,KAAKm9B,KAAOn9B,KAAKq9B,mBAAmBr9B,KAAKof,GAAI8b,EACjD,CACAjP,IAAAA,CAAK5B,GACDrqB,KAAKwvB,QAAQvD,KAAK5B,GAClBrqB,KAAKoyB,IAAInG,KAAK5B,EAClB,CACAmN,iBAAAA,CAAkB0C,EAAQ+C,GACtB,CAEJpoB,MAAAA,CAAOnL,EAAOC,GACV,IAAIpH,EAAI+kB,EAC8B,QAArCA,GAAM/kB,EAAKvC,KAAKwvB,SAAS3a,cAA2B,IAAPyS,GAAyBA,EAAGpf,KAAK3F,EAAImH,EAAOC,EAC9F,CACAygB,MAAAA,CAAOzmB,GACH,IAAIpB,EAAI+kB,EAAIyR,EAAIuE,EACsB,QAArChW,GAAM/kB,EAAKvC,KAAKwvB,SAASpF,cAA2B,IAAP9C,GAAyBA,EAAGpf,KAAK3F,EAAIoB,GACjD,QAAjC25B,GAAMvE,EAAK/4B,KAAKoyB,KAAKhI,cAA2B,IAAPkT,GAAyBA,EAAGp1B,KAAK6wB,EAAIp1B,EACnF,CACA7B,OAAAA,GACI,IAAIS,EAAI+kB,EAAIyR,EAAIuE,EACuB,QAAtChW,GAAM/kB,EAAKvC,KAAKwvB,SAAS1tB,eAA4B,IAAPwlB,GAAyBA,EAAGpf,KAAK3F,GAC7C,QAAlC+6B,GAAMvE,EAAK/4B,KAAKoyB,KAAKtwB,eAA4B,IAAPw7B,GAAyBA,EAAGp1B,KAAK6wB,EAChF,CACAqE,sBAAAA,CAAuBhe,EAAIme,GACvB,OAAOv9B,KAAKotB,SAAS5pB,QAAQg6B,gBAAgB,CACzCpe,KACAqe,KAAMF,GAEd,CACAF,kBAAAA,CAAmBje,EAAIme,GACnB,MAAME,EAAOF,QAAqDA,EAAgBv9B,KAAKotB,SAAS5pB,QAAQk6B,oBACxG,GAAID,EAAM,CACN,GAAIz9B,KAAKotB,SAAS5pB,QAAQ65B,mBAAoB,CAC1C,MAAM3b,EAAY1hB,KAAKotB,SAAS5pB,QAAQ65B,mBAAmB,CACvDje,KACAqe,SAEJ,OAAI/b,GAIO,IAAIib,EAEnB,CACA/5B,QAAQC,KAAM,2BAA0B06B,qDAC5C,CACA,OAAO,IAAIZ,EACf,EC1DG,MAAMgB,GACTh+B,WAAAA,CAAYytB,GACRptB,KAAKotB,SAAWA,CACpB,CACAtQ,QAAAA,CAAS8gB,EAAW9c,GAChB,IAAIve,EAAI+kB,EACR,MAAMxnB,EAAU89B,EAAUxe,GACpBiL,EAASuT,EAAUvT,OACnByD,EAAQ8P,EAAU9P,MAClB+P,EAAWD,EAAUjyB,KACrBwwB,EAAmB0B,EACnBA,EAASrO,QAAQpQ,GACqB,QAArC7c,EAAKq7B,EAAUzB,wBAAqC,IAAP55B,EAAgBA,EAAK,UACnE24B,EAAe2C,EACS,QAAvBvW,EAAKuW,EAASzL,WAAwB,IAAP9K,OAAgB,EAASA,EAAGlI,GAC5Dwe,EAAU1C,aACVvvB,EAAO,IAAIuxB,GAAmBl9B,KAAKotB,SAAUttB,EAASq8B,EAAkBjB,GACxE7a,EAAQ,IAAI2b,GAAcl8B,EAASq8B,EAAkBjB,EAAcl7B,KAAKotB,SAAU,IAAIpK,GAAYhjB,KAAKotB,UAAWtM,EAAOnV,EAAM,CACjI8jB,SAAUmO,EAAUnO,WAMxB,OAJApP,EAAM4L,KAAK,CACP6B,MAAOA,QAAqCA,EAAQhuB,EACpDuqB,OAAQA,QAAuCA,EAAS,CAAC,IAEtDhK,CACX,ECxBG,MAAMyd,WAAkBp4B,EAC3B,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,GACII,QACAC,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,YAC1B,MAAMsmB,EAAQ3lB,SAAS2K,cAAc,OACrCgb,EAAMtmB,UAAY,kBAClB,MAAMu2B,EAAa51B,SAAS2K,cAAc,QAC1CirB,EAAW5xB,MAAM6xB,SAAW,IAC5B,MAAMxO,EAAUrnB,SAAS2K,cAAc,OACvC0c,EAAQhoB,UAAY,oBACpBxH,KAAKue,SAASpN,YAAY2c,GAC1B9tB,KAAKue,SAASpN,YAAYqe,GAC1B,MAAMyO,EAAmB91B,SAAS2K,cAAc,OAChDmrB,EAAiBz2B,UAAY,oBAC7B,MAAM02B,EAAc/1B,SAAS2K,cAAc,OAC3CorB,EAAY12B,UAAY,eACxB02B,EAAY/sB,YAAYurB,MACxBuB,EAAiB9sB,YAAY+sB,GAC7BpQ,EAAM3c,YAAY4sB,GAClBjQ,EAAM3c,YAAY8sB,GAClBj+B,KAAK+F,eAAenB,EAAsBs5B,EAAa,SAAU7Q,IAC7D,IAAI9qB,EACJ8qB,EAAGjrB,iBACCpC,KAAKk6B,SACgB,QAApB33B,EAAKvC,KAAKq2B,YAAyB,IAAP9zB,GAAyBA,EAAG8e,YAAYrhB,KAAKk6B,QAC9E,IAER,CACA9P,MAAAA,CAAOxmB,GACH,CAEJme,KAAAA,GACI,CAEJlN,MAAAA,CAAOoU,EAAQC,GACX,CAEJ+C,IAAAA,CAAKN,GACD3rB,KAAKq2B,KAAO1K,EAAQ+C,aACpB1uB,KAAK88B,QACT,CACAtF,iBAAAA,CAAkB1W,EAAOqd,GACrBn+B,KAAKk6B,OAASpZ,EACd9gB,KAAK88B,QACT,CACAh7B,OAAAA,GACI/B,MAAM+B,SACV,CACAg7B,MAAAA,GACI,MAAMsB,KAAgBp+B,KAAKq2B,MAAQr2B,KAAKq2B,KAAKtxB,MAAQ,GACrDwC,EAAYvH,KAAKwE,QAAS,cAAe45B,EAC7C,ECvDJ,MAAMC,GAAsB,MACxB,IAAI/oB,EAAW,KAQf,OAPA,SAAmB9Q,GACX8Q,IAAa9Q,GAAwB,OAAb8Q,GACxB/N,EAAY+N,EAAU,qBAAqB,GAE/C/N,EAAY/C,EAAS,qBAAqB,GAC1C8Q,EAAW9Q,CACf,CAEH,EAV2B,GAWrB,MAAM85B,WAAgB54B,EACzB,0BAAI64B,CAAuB77B,GACvB1C,KAAKwD,QAAQ+6B,uBAAyB77B,CAC1C,CACA,2BAAI87B,CAAwB97B,GACxB1C,KAAKwD,QAAQg7B,wBAA0B97B,CAC3C,CACA/C,WAAAA,CAAY6D,GACRzD,QACAC,KAAKwD,QAAUA,EACfxD,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKy+B,gBAAkB,IAAIx7B,EAC3BjD,KAAK0+B,eAAiB1+B,KAAKy+B,gBAAgB96B,MAC3C3D,KAAK+F,eAAe/F,KAAK2W,aAAc3W,KAAKy+B,iBAC5Cz+B,KAAKue,SAAS/W,UAAY,sBAC1BxH,KAAK2+B,YAAY,OACjB3+B,KAAK2+B,YAAY,UACjB3+B,KAAK2+B,YAAY,QACjB3+B,KAAK2+B,YAAY,SACjB3+B,KAAK2+B,YAAY,WACjB3+B,KAAK2+B,YAAY,YACjB3+B,KAAK2+B,YAAY,cACjB3+B,KAAK2+B,YAAY,eACjB3+B,KAAKue,SAASpN,YAAYnR,KAAKwD,QAAQgsB,SACvCxvB,KAAKwD,QAAQ0I,UAAUiF,YAAYnR,KAAKue,UAExCve,KAAK4+B,UAAU,CACXj1B,OAAQ3J,KAAKwD,QAAQmG,OACrBD,MAAO1J,KAAKwD,QAAQkG,MACpBD,IAAKzJ,KAAKwD,QAAQiG,IAClBD,KAAMxJ,KAAKwD,QAAQgG,MAE3B,CACAo1B,SAAAA,CAAUC,QAAM,IAANA,IAAAA,EAAS,CAAC,GACa,iBAAlBA,EAAOl1B,SACd3J,KAAKue,SAASpS,MAAMxC,OAAU,GAAEk1B,EAAOl1B,YAEf,iBAAjBk1B,EAAOn1B,QACd1J,KAAKue,SAASpS,MAAMzC,MAAS,GAAEm1B,EAAOn1B,WAEhB,iBAAfm1B,EAAOp1B,MACdzJ,KAAKue,SAASpS,MAAM1C,IAAO,GAAEo1B,EAAOp1B,SAEb,iBAAhBo1B,EAAOr1B,OACdxJ,KAAKue,SAASpS,MAAM3C,KAAQ,GAAEq1B,EAAOr1B,UAEzC,MAAMs1B,EAAgB9+B,KAAKwD,QAAQ0I,UAAUtC,wBACvCm1B,EAAc/+B,KAAKue,SAAS3U,wBAG5Bo1B,EAAUl0B,KAAKD,IAAI,EAAG7K,KAAKi/B,gBAAgBF,EAAYr1B,QAEvDw1B,EAA0D,iBAAzCl/B,KAAKwD,QAAQg7B,wBAC9B1zB,KAAKD,IAAI,EAAG7K,KAAKm/B,iBAAiBJ,EAAYp1B,SAC9C,EACAH,EAAOmB,EAAMo0B,EAAYv1B,KAAOs1B,EAAct1B,MAAOw1B,EAASl0B,KAAKD,IAAI,EAAGi0B,EAAcp1B,MAAQq1B,EAAYr1B,MAAQs1B,IACpHv1B,EAAMkB,EAAMo0B,EAAYt1B,IAAMq1B,EAAcr1B,KAAMy1B,EAASp0B,KAAKD,IAAI,EAAGi0B,EAAcn1B,OAASo1B,EAAYp1B,OAASu1B,IACzHl/B,KAAKue,SAASpS,MAAM3C,KAAQ,GAAEA,MAC9BxJ,KAAKue,SAASpS,MAAM1C,IAAO,GAAEA,MAC7BzJ,KAAK2W,aAAaxS,MACtB,CACA6W,MAAAA,GACI,MAAM9O,EAAYlM,KAAKwD,QAAQ0I,UAAUtC,wBACnCpF,EAAUxE,KAAKue,SAAS3U,wBAC9B,MAAO,CACHH,IAAKjF,EAAQiF,IAAMyC,EAAUzC,IAC7BD,KAAMhF,EAAQgF,KAAO0C,EAAU1C,KAC/BE,MAAOlF,EAAQkF,MACfC,OAAQnF,EAAQmF,OAExB,CACAy1B,SAAAA,CAAUC,EAAY77B,QAAO,IAAPA,IAAAA,EAAU,CAAE0vB,YAAY,IAC1C,MAAMoM,EAAO,IAAIn5B,EACXo5B,EAAQA,KACV,IAAInqB,EAAS,KACb,MAAM/B,EAAU,IACTtL,EAAqB,aACrBA,EAAqB,YAE5B,IAAK,MAAMuL,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjCkzB,EAAK58B,MAAQ,IAAIgD,EAAoB,CACjC5D,QAASA,KACL,IAAK,MAAMwR,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,MACjC,GAEL7H,EAA4BwE,OAAQ,aAAc3E,IACjD,MAAM06B,EAAgB9+B,KAAKwD,QAAQ0I,UAAUtC,wBACvC2F,EAAInL,EAAEoP,QAAUsrB,EAAct1B,KAC9B6c,EAAIjiB,EAAEqP,QAAUqrB,EAAcr1B,IACpClC,EAAYvH,KAAKue,SAAU,gCAAgC,GAC3D,MAAMwgB,EAAc/+B,KAAKue,SAAS3U,wBACnB,OAAXwL,IACAA,EAAS,CACL7F,EAAGnL,EAAEoP,QAAUurB,EAAYv1B,KAC3B6c,EAAGjiB,EAAEqP,QAAUsrB,EAAYt1B,MAGnC,MAAMu1B,EAAUl0B,KAAKD,IAAI,EAAG7K,KAAKi/B,gBAAgBF,EAAYr1B,QACvDw1B,EAAUp0B,KAAKD,IAAI,EAAG7K,KAAKwD,QAAQg7B,wBACnCx+B,KAAKm/B,iBAAiBJ,EAAYp1B,QAClC,GACAH,EAAOmB,EAAM4E,EAAI6F,EAAO7F,GAAIyvB,EAASl0B,KAAKD,IAAI,EAAGi0B,EAAcp1B,MAAQq1B,EAAYr1B,MAAQs1B,IAC3Fv1B,EAAMkB,EAAM0b,EAAIjR,EAAOiR,GAAI6Y,EAASp0B,KAAKD,IAAI,EAAGi0B,EAAcn1B,OAASo1B,EAAYp1B,OAASu1B,IAClGl/B,KAAK4+B,UAAU,CAAEn1B,MAAKD,QAAO,IAC7BjF,EAA4BwE,OAAQ,WAAW,KAC/CxB,EAAYvH,KAAKue,SAAU,gCAAgC,GAC3D+gB,EAAKx9B,UACL9B,KAAKy+B,gBAAgBt6B,MAAM,IAC5B,EAEPnE,KAAK+F,eAAeu5B,EAAM16B,EAAsBy6B,EAAY,aAAc17B,IAClEA,EAAMxB,iBACNwB,EAAMvB,iBAKNiH,EAAsB1F,IAG1B47B,GAAO,IACP36B,EAAsB5E,KAAKwD,QAAQgsB,QAAS,aAAc7rB,IACtDA,EAAMxB,kBAKNkH,EAAsB1F,IAGtBA,EAAMsrB,UACNsQ,GACJ,IACA36B,EAAsB5E,KAAKwD,QAAQgsB,QAAS,aAAa,KACzD6O,GAAoBr+B,KAAKue,SAAS,IACnC,IACH8f,GAAoBr+B,KAAKue,UACrB/a,EAAQ0vB,YACRqM,GAER,CACAZ,WAAAA,CAAYpkB,GACR,MAAMilB,EAAsBr3B,SAAS2K,cAAc,OACnD0sB,EAAoBh4B,UAAa,oBAAmB+S,IACpDva,KAAKue,SAASpN,YAAYquB,GAC1B,MAAMF,EAAO,IAAIn5B,EACjBnG,KAAK+F,eAAeu5B,EAAM16B,EAAsB46B,EAAqB,aAAcp7B,IAC/EA,EAAEhC,iBACF,IAAIq9B,EAAgB,KACpB,MAAMpsB,EAAU,IACTtL,EAAqB,aACrBA,EAAqB,YAE5B,IAAK,MAAMuL,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,OAEjCkzB,EAAK58B,MAAQ,IAAIgD,EAAoBnB,EAA4BwE,OAAQ,aAAc3E,IACnF,MAAM06B,EAAgB9+B,KAAKwD,QAAQ0I,UAAUtC,wBACvCm1B,EAAc/+B,KAAKue,SAAS3U,wBAC5Byc,EAAIjiB,EAAEqP,QAAUqrB,EAAcr1B,IAC9B8F,EAAInL,EAAEoP,QAAUsrB,EAAct1B,KAUpC,IAAIC,EACAE,EACAH,EACAE,EAZkB,OAAlB+1B,IAEAA,EAAgB,CACZC,UAAWrZ,EACXsZ,eAAgBZ,EAAYp1B,OAC5Bi2B,UAAWrwB,EACXswB,cAAed,EAAYr1B,QAOnC,MAAMo2B,EAAUA,KACZr2B,EAAMkB,EAAM0b,GAAIxY,OAAOkyB,UAAWN,EAAcC,UAC5CD,EAAcE,eACdb,EAAcn1B,OACZ3J,KAAKm/B,iBAAiBL,EAAcn1B,QACpCmB,KAAKD,IAAI,EAAG40B,EAAcC,UACxBD,EAAcE,eACdrB,GAAQ0B,iBAChBr2B,EACI81B,EAAcC,UACVD,EAAcE,eACdl2B,CAAG,EAETw2B,EAAaA,KACfx2B,EACIg2B,EAAcC,UACVD,EAAcE,eACtBh2B,EAASgB,EAAM0b,EAAI5c,EAAKA,EAAM,GAEO,iBAD1BzJ,KAAKwD,QACPg7B,yBACF/0B,EACCzJ,KAAKwD,QAAQg7B,wBACfF,GAAQ0B,eAAgBnyB,OAAOkyB,UAAU,EAE7CG,EAAWA,KACb12B,EAAOmB,EAAM4E,GAAI1B,OAAOkyB,UAAWN,EAAcG,UAC7CH,EAAcI,cACdf,EAAcp1B,MACZ1J,KAAKi/B,gBAAgBH,EAAcp1B,OACnCoB,KAAKD,IAAI,EAAG40B,EAAcG,UACxBH,EAAcI,cACdvB,GAAQ6B,gBAChBz2B,EACI+1B,EAAcG,UACVH,EAAcI,cACdr2B,CAAI,EAEV42B,EAAYA,KACd52B,EACIi2B,EAAcG,UACVH,EAAcI,cACtBn2B,EAAQiB,EAAM4E,EAAI/F,EAAMA,EAAO,GAEK,iBADzBxJ,KAAKwD,QACP+6B,wBACF/0B,EACCxJ,KAAKwD,QAAQ+6B,uBACfD,GAAQ6B,cAAetyB,OAAOkyB,UAAU,EAElD,OAAQxlB,GACJ,IAAK,MACDulB,IACA,MACJ,IAAK,SACDG,IACA,MACJ,IAAK,OACDC,IACA,MACJ,IAAK,QACDE,IACA,MACJ,IAAK,UACDN,IACAI,IACA,MACJ,IAAK,WACDJ,IACAM,IACA,MACJ,IAAK,aACDH,IACAC,IACA,MACJ,IAAK,cACDD,IACAG,IAGRpgC,KAAK4+B,UAAU,CAAEj1B,SAAQD,QAAOD,MAAKD,QAAO,IAC5C,CACA1H,QAASA,KACL,IAAK,MAAMwR,KAAUD,EACjBC,EAAOnH,MAAMC,cAAgB,MACjC,GAEL7H,EAA4BwE,OAAQ,WAAW,KAC9Cu2B,EAAKx9B,UACL9B,KAAKy+B,gBAAgBt6B,MAAM,IAC5B,IAEX,CACA86B,eAAAA,CAAgBv1B,GACZ,MAAmD,iBAAxC1J,KAAKwD,QAAQ+6B,uBACb70B,EAAQ1J,KAAKwD,QAAQ+6B,uBAEzB,CACX,CACAY,gBAAAA,CAAiBx1B,GACb,MAAoD,iBAAzC3J,KAAKwD,QAAQg7B,wBACb70B,EAAS3J,KAAKwD,QAAQg7B,wBAE1B70B,CACX,CACA7H,OAAAA,GACI9B,KAAKue,SAASlX,SACdtH,MAAM+B,SACV,EAEJw8B,GAAQ0B,eAAiB,GACzB1B,GAAQ6B,cAAgB,GC9SjB,MAAME,WAAmC36B,EAC5C/F,WAAAA,CAAYmhB,EAAOwf,GACfvgC,QACAC,KAAK8gB,MAAQA,EACb9gB,KAAKsgC,QAAUA,EACftgC,KAAK+F,eAAeu6B,EACxB,CACAzqB,QAAAA,CAASgpB,GACL7+B,KAAKsgC,QAAQ1B,UAAUC,EAC3B,ECVG,MAAM0B,GAAuC,IACvCC,GAA0C,IAA1CA,GAAoD,ICO1D,MAAMC,WAA+B/6B,EACxC/F,WAAAA,CAAY6E,GACRzE,QACAC,KAAKwE,QAAUA,EACfxE,KAAK4B,IAAM,CAAC,EACZ5B,KAAK0D,WAAY,EACjB1D,KAAK+F,eAAe5E,EAAWqE,MAAK,KAChC,IAAK,MAAM9C,KAAS2f,OAAO7C,OAAOxf,KAAK4B,KACnCc,EAAM2D,WAAWvE,UACjBY,EAAMg+B,QAAQ5+B,UAElB9B,KAAK0D,WAAY,CAAI,IAE7B,CACAisB,OAAAA,CAAQtP,GACJ,GAAIrgB,KAAK4B,IAAIye,EAAMkC,IAAInD,IAAK,CACxB,MAAM,WAAE/Y,EAAU,QAAEq6B,GAAY1gC,KAAK4B,IAAIye,EAAMkC,IAAInD,IAInD,OAHA/Y,EAAWvE,UACX4+B,EAAQ5+B,iBACD9B,KAAK4B,IAAIye,EAAMkC,IAAInD,KACnB,CACX,CACA,OAAO,CACX,CACAwQ,MAAAA,CAAOpsB,GACH,MAAM,MAAE6c,EAAK,mBAAEwP,GAAuBrsB,EACtC,IAAKxD,KAAK4B,IAAIye,EAAMkC,IAAInD,IAAK,CACzB,MAAM5a,EAhClB,WACI,MAAMA,EAAU2D,SAAS2K,cAAc,OAEvC,OADAtO,EAAQonB,UAAY,EACbpnB,CACX,CA4B4Bm8B,GAChBn8B,EAAQgD,UAAY,oBACpBxH,KAAK4B,IAAIye,EAAMkC,IAAInD,IAAM,CACrBiB,QACAha,WAAYlF,EAAWoE,KACvBm7B,QAASv/B,EAAWoE,KACpBf,UAER,CACA,MAAMo8B,EAAiB5gC,KAAK4B,IAAIye,EAAMkC,IAAInD,IAAI5a,QAC1C6b,EAAM1U,KAAK6jB,QAAQhrB,QAAQqV,gBAAkB+mB,GAC7CA,EAAezvB,YAAYkP,EAAM1U,KAAK6jB,QAAQhrB,SAE9Co8B,EAAe/mB,gBAAkB7Z,KAAKwE,SACtCxE,KAAKwE,QAAQ2M,YAAYyvB,GAE7B,MAAM9xB,EAASA,KAEX,MAAMgM,EAAMxR,EAAuBumB,EAAmBrrB,SAChDq8B,EAAOv3B,EAAuBtJ,KAAKwE,SACzCo8B,EAAez0B,MAAM3C,KAAUsR,EAAItR,KAAOq3B,EAAKr3B,KAAlB,KAC7Bo3B,EAAez0B,MAAM1C,IAASqR,EAAIrR,IAAMo3B,EAAKp3B,IAAjB,KAC5Bm3B,EAAez0B,MAAMzC,MAAS,GAAEoR,EAAIpR,UACpCk3B,EAAez0B,MAAMxC,OAAU,GAAEmR,EAAInR,WACrCpC,EAAYq5B,EAAgB,0BAA6D,aAAlCvgB,EAAMS,MAAMyB,IAAIjI,SAAS7V,KAAoB,EAElGq8B,EAAoBA,KAClBzgB,EAAMkC,IAAIjC,WACVxR,IAEJ8xB,EAAez0B,MAAM2gB,QAAUzM,EAAMkC,IAAIjC,UAAY,GAAK,MAAM,EAE9Dja,EAAa,IAAIX,EAQvB,IAAI+e,GAAoBmc,EAAgB,CACpC5b,UAAY5gB,IACRyrB,EAAmBb,WAAWjJ,IAAIf,UAAU5gB,EAAE,EAElDygB,YAAczgB,IACVyrB,EAAmBb,WAAWjJ,IAAIlB,YAAYzgB,EAAE,EAEpD2gB,YAAc3gB,IACVyrB,EAAmBb,WAAWjJ,IAAIhB,YAAY3gB,EAAE,EAEpD6gB,OAAS7gB,IACLyrB,EAAmBb,WAAWjJ,IAAId,OAAO7gB,EAAE,EAE/C0gB,WAAa1gB,IACTyrB,EAAmBb,WAAWjJ,IAAIjB,WAAW1gB,EAAE,IAEnDic,EAAMkC,IAAIjK,uBAAuB3U,IAMjCm9B,GAAmB,IACnBzgB,EAAMkC,IAAI+G,uBAAsB,KAC3BjJ,EAAMkC,IAAIjC,WAGfxR,GAAQ,KAwBZ,OAtBA9O,KAAK4B,IAAIye,EAAMkC,IAAInD,IAAIshB,QAAUv/B,EAAWqE,MAAK,KAC7C,IAAIjD,EACA8d,EAAM1U,KAAK6jB,QAAQhrB,QAAQqV,gBAAkB+mB,GAC7CA,EAAe3tB,YAAYoN,EAAM1U,KAAK6jB,QAAQhrB,SAEV,QAAvCjC,EAAKq+B,EAAe/mB,qBAAkC,IAAPtX,GAAyBA,EAAG0Q,YAAY2tB,EAAe,IAE3Gv8B,gBAAe,KACPrE,KAAK2F,YAQTm7B,GAAmB,IAGvB9gC,KAAK4B,IAAIye,EAAMkC,IAAInD,IAAI/Y,WAAWvE,UAElC9B,KAAK4B,IAAIye,EAAMkC,IAAInD,IAAI/Y,WAAaA,EAC7Bu6B,CACX,EC/HJ,IAAIG,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU7+B,GAAS,IAAM8+B,EAAKL,EAAUn2B,KAAKtI,GAAS,CAAE,MAAO0B,GAAKk9B,EAAOl9B,EAAI,CAAE,CAC1F,SAASq9B,EAAS/+B,GAAS,IAAM8+B,EAAKL,EAAiB,MAAEz+B,GAAS,CAAE,MAAO0B,GAAKk9B,EAAOl9B,EAAI,CAAE,CAC7F,SAASo9B,EAAKp2B,GAJlB,IAAe1I,EAIa0I,EAAOs2B,KAAOL,EAAQj2B,EAAO1I,QAJ1CA,EAIyD0I,EAAO1I,MAJhDA,aAAiBw+B,EAAIx+B,EAAQ,IAAIw+B,GAAE,SAAUG,GAAWA,EAAQ3+B,EAAQ,KAIjBi/B,KAAKJ,EAAWE,EAAW,CAC7GD,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKj2B,OAClE,GACJ,EAIO,MAAM62B,WAAqBn8B,EAC9B,UAAIqD,GACA,IAAIxG,EAAI+kB,EACR,OAAoF,QAA5EA,EAA6B,QAAvB/kB,EAAKvC,KAAK8hC,eAA4B,IAAPv/B,OAAgB,EAASA,EAAGG,aAA0B,IAAP4kB,EAAgBA,EAAK,IACrH,CACA3nB,WAAAA,CAAYglB,EAAQnd,EAAWhE,GAC3BzD,QACAC,KAAK2kB,OAASA,EACd3kB,KAAKwH,UAAYA,EACjBxH,KAAKwD,QAAUA,EACfxD,KAAK+hC,aAAe,IAAI9+B,EACxBjD,KAAKgiC,YAAchiC,KAAK+hC,aAAap+B,MACrC3D,KAAKiiC,YAAc,IAAIh/B,EACvBjD,KAAKkiC,WAAaliC,KAAKiiC,YAAYt+B,MACnC3D,KAAK8hC,QAAU,KACf9hC,KAAK+F,eAAe/F,KAAK+hC,aAAc/hC,KAAKiiC,YAAa,CACrDngC,QAASA,KACL9B,KAAKq6B,OAAO,GAGxB,CACA8H,UAAAA,GACI,IAAKniC,KAAK8hC,QACN,OAAO,KAEX,MAAMt4B,EAAOxJ,KAAK8hC,QAAQp/B,MAAM0/B,QAIhC,MAAO,CAAE34B,IAHGzJ,KAAK8hC,QAAQp/B,MAAM2/B,QAGjB74B,OAAME,MAFN1J,KAAK8hC,QAAQp/B,MAAM4/B,WAEN34B,OADZ3J,KAAK8hC,QAAQp/B,MAAM6/B,YAEtC,CACAlI,KAAAA,GACI,IAAI93B,EAAI+kB,EACJtnB,KAAK8hC,UACL9hC,KAAK+hC,aAAa59B,OACyB,QAA1CmjB,GAAM/kB,EAAKvC,KAAKwD,SAASw+B,mBAAgC,IAAP1a,GAAyBA,EAAGpf,KAAK3F,EAAI,CACpF6c,GAAIpf,KAAK2kB,OACT5b,OAAQ/I,KAAK8hC,QAAQp/B,QAEzB1C,KAAK8hC,QAAQz7B,WAAWvE,UACxB9B,KAAK8hC,QAAQp/B,MAAM23B,QACnBr6B,KAAK8hC,QAAU,KACf9hC,KAAKiiC,YAAY99B,OAEzB,CACAq+B,IAAAA,GACI,IAAIjgC,EAAI+kB,EACR,OAAOyZ,GAAU/gC,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAK8hC,QACL,MAAM,IAAIt/B,MAAM,6CAEpB,MAAMigC,EAAO,GAAEziC,KAAKwD,QAAQi/B,MACtBC,EAAWrgB,OAAOsgB,QAAQ,CAC5Bl5B,IAAKzJ,KAAKwD,QAAQiG,IAClBD,KAAMxJ,KAAKwD,QAAQgG,KACnBE,MAAO1J,KAAKwD,QAAQkG,MACpBC,OAAQ3J,KAAKwD,QAAQmG,SAEpB/H,KAAIzC,IAAA,IAAEgtB,EAAKzpB,GAAMvD,EAAA,MAAM,GAAEgtB,KAAOzpB,GAAO,IACvCkgC,KAAK,KAIJC,EAAiB95B,OAAOy5B,KAAKC,EAAKziC,KAAK2kB,OAAQ+d,GACrD,IAAKG,EAID,OAAO,KAEX,MAAMx8B,EAAa,IAAIX,EACvB1F,KAAK8hC,QAAU,CAAEp/B,MAAOmgC,EAAgBx8B,cACxCA,EAAWN,eAAexB,EAA4BwE,OAAQ,gBAAgB,KAO1E/I,KAAKq6B,OAAO,KAEhB,MAAMnuB,EAAYlM,KAAK8iC,8BAQvB,OAPI9iC,KAAKwH,WACL0E,EAAU/E,UAAUjD,IAAIlE,KAAKwH,WAEQ,QAAxC8f,GAAM/kB,EAAKvC,KAAKwD,SAASu/B,iBAA8B,IAAPzb,GAAyBA,EAAGpf,KAAK3F,EAAI,CAClF6c,GAAIpf,KAAK2kB,OACT5b,OAAQ85B,IAEL,IAAIzB,SAASC,IAChBwB,EAAen+B,iBAAiB,UAAWN,QAI3Cy+B,EAAen+B,iBAAiB,QAAQ,KAIpC,MAAMs+B,EAAmBH,EAAe16B,SACxC66B,EAAiBlV,MAAQ3lB,SAAS2lB,MAClCkV,EAAiBvV,KAAKtc,YAAYjF,G5Cc/C,SAAmB/D,EAAU86B,GAChC,MAAMC,EAAc1hC,MAAMgE,KAAKy9B,GAC/B,IAAK,MAAME,KAAcD,EAAa,CAClC,GAAIC,EAAWC,KAAM,CACjB,MAAMC,EAAOl7B,EAAS2K,cAAc,QACpCuwB,EAAKD,KAAOD,EAAWC,KACvBC,EAAK5+B,KAAO0+B,EAAW1+B,KACvB4+B,EAAKC,IAAM,aACXn7B,EAASo7B,KAAKpyB,YAAYkyB,EAC9B,CACA,IAAIG,EAAW,GACf,IACQL,EAAWM,WACXD,EAAWhiC,MAAMgE,KAAK29B,EAAWM,UAAU7hC,KAAK8hC,GAASA,EAAKC,UAEtE,CACA,MAAOC,GACH,CAEJ,IAAK,MAAMF,KAAQF,EAAU,CACzB,MAAMr3B,EAAQhE,EAAS2K,cAAc,SACrC3G,EAAMgF,YAAYhJ,EAAS07B,eAAeH,IAC1Cv7B,EAASo7B,KAAKpyB,YAAYhF,EAC9B,CACJ,CACJ,C4CtCoB23B,CAAUd,EAAkBj6B,OAAOZ,SAAS+6B,aAK5C3+B,EAA4Bs+B,EAAgB,gBAAgB,KAIxD7iC,KAAKq6B,OAAO,IAEhBgH,EAAQn1B,EAAU,GACpB,GAEV,GACJ,CACA42B,2BAAAA,GACI,MAAM/oB,EAAK5R,SAAS2K,cAAc,OAQlC,OAPAiH,EAAG5S,UAAUjD,IAAI,oBACjB6V,EAAGqF,GAAK,mBACRrF,EAAG5N,MAAM0J,SAAW,WACpBkE,EAAG5N,MAAMzC,MAAQ,OACjBqQ,EAAG5N,MAAMxC,OAAS,OAClBoQ,EAAG5N,MAAM1C,IAAM,MACfsQ,EAAG5N,MAAM3C,KAAO,MACTuQ,CACX,ECpHJ,MAAMgqB,GAA6B,CAC/B3b,eAAgB,CAAE3jB,KAAM,SAAU/B,MAAO,IACzCqC,KAAM,CAAEN,KAAM,SAAU/B,MAAO,KAEnC,SAASshC,GAA2BxgC,GAChC,MAAM+f,EAAc/f,EAAQgC,KAAK+d,YAClB,IAAI/f,EAAQgC,KAAKmc,QAAQ/f,KAAKye,IACzC,MAAM4jB,EAAezgC,EAAQgC,KAAK2hB,MAAMrF,YAAYzB,GAEpD,OADA7c,EAAQgC,KAAK2hB,MAAMuI,gBAAgBC,QAAQtP,GACpC4jB,CAAY,IAEhBliC,SAASse,IACZ7c,EAAQ2H,GAAGgc,MAAM2I,UAAUzP,EAAO,CAC9BkX,cAAehU,IAAgBlD,EAC/BqX,oBAAoB,GACtB,GAEV,CAoBO,MAAMwM,WAA0B/kB,GACnC,eAAI7R,GACA,OAAOtN,KAAKyf,SAASnS,WACzB,CACA,eAAI2V,GACA,OAAOjjB,KAAK2hB,OAAOpgB,MACvB,CACA,UAAIogB,GACA,OAAO3hB,KAAKuf,OAAO4kB,SAASrjB,GAAUA,EAAMa,QAChD,CACA,WAAIne,GACA,OAAOxD,KAAKokC,QAChB,CACA,eAAI7gB,GACA,MAAM7D,EAAc1f,KAAK0f,YACzB,GAAKA,EAGL,OAAOA,EAAY6D,WACvB,CACA,YAAIkM,GACA,IAAIltB,EACJ,OAA+C,QAAvCA,EAAKvC,KAAKwD,QAAQ6wB,uBAAoC,IAAP9xB,EAAgBA,EAAK,iBAChF,CACA,OAAIggB,GACA,OAAOviB,KAAKq2B,IAChB,CACA12B,WAAAA,CAAY6D,GACR,IAAIjB,EACJxC,MAAM,CACF+Q,oBAAoB,EACpBxD,YAAaf,EAAYkB,WACzB2D,OAAQ5N,EAAQ0wB,YACV,CAAEviB,gBAAiB,oBACnBlR,EACNoZ,cAAerW,EAAQqW,cACvB+F,oBAAqBpc,EAAQoc,oBAC7BxE,OAAQ5X,EAAQ4X,SAEpBpb,KAAKqkC,YAAct5B,IACnB/K,KAAKskC,cAAgB,IAAI3G,GAA4B39B,MACrDA,KAAKg1B,UAAY,KACjBh1B,KAAKukC,iBAAmB,IAAIthC,EAC5BjD,KAAKqjB,gBAAkBrjB,KAAKukC,iBAAiB5gC,MAC7C3D,KAAKwkC,iBAAmB,IAAIvhC,EAC5BjD,KAAKojB,gBAAkBpjB,KAAKwkC,iBAAiB7gC,MAC7C3D,KAAKouB,WAAa,IAAInrB,EACtBjD,KAAKmiB,UAAYniB,KAAKouB,WAAWzqB,MACjC3D,KAAK21B,YAAc,IAAI1yB,EACvBjD,KAAKkjB,WAAaljB,KAAK21B,YAAYhyB,MACnC3D,KAAK2lB,mBAAqB,IAAI1iB,EAC9BjD,KAAKmjB,kBAAoBnjB,KAAK2lB,mBAAmBhiB,MACjD3D,KAAKm2B,0BAA4B,IAAIlzB,EACrCjD,KAAKsjB,yBAA2BtjB,KAAKm2B,0BAA0BxyB,MAC/D3D,KAAKi2B,kBAAoB,IAAIhzB,EAC7BjD,KAAK2iB,iBAAmB3iB,KAAKi2B,kBAAkBtyB,MAC/C3D,KAAK41B,eAAiB,IAAI3yB,EAC1BjD,KAAKyiB,cAAgBziB,KAAK41B,eAAejyB,MACzC3D,KAAKykC,qBAAuB,IAAIxhC,EAChCjD,KAAK4hB,oBAAsB5hB,KAAKykC,qBAAqB9gC,MACrD3D,KAAKk2B,wBAA0B,IAAIjzB,EACnCjD,KAAK6iB,uBAAyB7iB,KAAKk2B,wBAAwBvyB,MAC3D3D,KAAK0kC,gBAAkB,IAAIzhC,EAC3BjD,KAAK2kC,gBAAkB,GACvB3kC,KAAK4kC,cAAgB,GACrB5kC,KAAK6kC,cAAgB,EACrB7kC,KAAK8kC,kBAAoB,IAAI7hC,EAC7BjD,KAAK4iB,iBAAmB5iB,KAAK8kC,kBAAkBnhC,MAC/C3D,KAAK+kC,eAAiB,IAAI9hC,EAC1BjD,KAAK0iB,cAAgB1iB,KAAK+kC,eAAephC,MACzC3D,KAAKq7B,wBAA0B,IAAIp4B,EACnCjD,KAAK8iB,uBAAyB9iB,KAAKq7B,wBAAwB13B,MAC3D3D,KAAKglC,SAAU,EACf,MAAMC,EAAS98B,SAAS2K,cAAc,OACtCmyB,EAAOz9B,UAAY,8BACnBxH,KAAKyf,SAASjb,QAAQ2M,YAAY8zB,GAClCjlC,KAAK02B,uBAAyB,IAAI+J,GAAuBwE,GACzD19B,EAAYvH,KAAKyf,SAASjb,QAAS,eAAe,GAClD+C,EAAYvH,KAAKwE,QAAS,aAAchB,EAAQ8wB,OAChDt0B,KAAK+F,eAAe/F,KAAK02B,uBAAwB12B,KAAKukC,iBAAkBvkC,KAAKwkC,iBAAkBxkC,KAAK2lB,mBAAoB3lB,KAAKk2B,wBAAyBl2B,KAAK41B,eAAgB51B,KAAKi2B,kBAAmBj2B,KAAKykC,qBAAsBzkC,KAAKouB,WAAYpuB,KAAK21B,YAAa31B,KAAK0kC,gBAAiB1kC,KAAK+kC,eAAgB/kC,KAAK8kC,kBAAmB9kC,KAAKq7B,wBAAyBr7B,KAAKm2B,0BAA2Bn2B,KAAKggB,UAAUrc,IACxY3D,KAAKglC,SACNhlC,KAAK+kC,eAAe5gC,KAAKR,EAC7B,IACA3D,KAAK8f,aAAanc,IACb3D,KAAKglC,SACNhlC,KAAK8kC,kBAAkB3gC,KAAKR,EAChC,IACA3D,KAAKkgB,mBAAmBvc,IACnB3D,KAAKglC,SACNhlC,KAAKq7B,wBAAwBl3B,KAAKR,EACtC,IACAzC,EAAME,IAAIpB,KAAKggB,SAAUhgB,KAAK8f,YAA9B5e,EAA2C,KAC3ClB,KAAKklC,iBAAiB,IACtBhkC,EAAME,IAAIpB,KAAKyiB,cAAeziB,KAAK2iB,iBAAkB3iB,KAAK6iB,uBAA1D3hB,EAAkF,KAClFlB,KAAKmgB,yBAAyBhc,MAAM,IACpChD,EAAWqE,MAAK,KAEhB,IAAK,MAAMsb,IAAS,IAAI9gB,KAAK2kC,iBACzB7jB,EAAMhf,UAGV,IAAK,MAAMgf,IAAS,IAAI9gB,KAAK4kC,eACzB9jB,EAAMza,WAAWvE,SACrB,KAEJ9B,KAAKokC,SAAW5gC,EAChBxD,KAAKmlC,gBAAkB,IAAI3f,GAAWxlB,KAAKwE,QAAS,CAChDiiB,kBAAmBA,CAAC9iB,EAAOkS,KACvB,MAAMnV,EAAOG,IACb,GAAIH,EACA,OAAIA,EAAKd,SAAWI,KAAKof,KAGR,WAAbvJ,GAGgC,IAAzB7V,KAAKyf,SAASle,QAI7B,GAAiB,WAAbsU,GAAkD,IAAzB7V,KAAKyf,SAASle,OAMvC,OAAO,EAEX,MAAMo3B,EAAa,IAAI/E,GAA+BjwB,EAAO,OAAQkS,EAAUhV,GAE/E,OADAb,KAAKm2B,0BAA0BhyB,KAAKw0B,GAC7BA,EAAW9E,UAAU,EAEhC/N,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDsB,aAAuD,QAAxC7kB,EAAKvC,KAAKwD,QAAQ+wB,wBAAqC,IAAPhyB,EAAgBA,EAAKwhC,KAExF/jC,KAAK+F,eAAe/F,KAAKmlC,gBAAiBnlC,KAAKmlC,gBAAgBhiB,mBAAmBxf,IAC1E3D,KAAKyf,SAASle,OAAS,GAAwB,WAAnBoC,EAAMkS,UAItC7V,KAAK2lB,mBAAmBxhB,KAAK,IAAI0uB,GAA6BlvB,EAAO,CACjEmvB,KAAM,OACNzS,WAAO5f,EACP8hB,IAAKviB,KAAKq2B,KACVvV,WAAOrgB,EACPE,QAASE,IACV,IACHb,KAAKmlC,gBAAgBlgB,QAAQthB,IAC7B,IAAIpB,EACJ,MAAMq2B,EAAgB,IAAInE,GAAsB,CAC5CtP,YAAaxhB,EAAMwhB,YACnBtP,SAAUlS,EAAMkS,SAChBwK,WAAO5f,EACP8hB,IAAKviB,KAAKq2B,KACVvV,WAAOrgB,EACPE,QAASE,EACTiyB,KAAM,SAGV,GADA9yB,KAAK21B,YAAYxxB,KAAKy0B,GAClBA,EAAcz2B,iBACd,OAEJ,MAAMzB,EAAOG,IACTH,EACAV,KAAKw6B,iBAAiB,CAClBh1B,KAAM,CACF3F,QAASa,EAAKb,QACdC,QAAiC,QAAvByC,EAAK7B,EAAKZ,eAA4B,IAAPyC,EAAgBA,OAAK9B,GAElE0K,GAAI,CACA2V,MAAO9gB,KAAKolC,cAAczhC,EAAMkS,UAChCA,SAAU,YAKlB7V,KAAKouB,WAAWjqB,KAAK,IAAIqwB,GAAqB,CAC1CrP,YAAaxhB,EAAMwhB,YACnBtP,SAAUlS,EAAMkS,SAChBwK,WAAO5f,EACP8hB,IAAKviB,KAAKq2B,KACVvV,WAAOrgB,EACPE,QAASE,IAEjB,IACAb,KAAKmlC,iBACTnlC,KAAKq2B,KAAO,IAAIrT,GAAYhjB,MAC5BA,KAAKklC,iBACT,CACAphB,cAAAA,CAAeuhB,EAAc7hC,GACzB,IAAIjB,EAAI+kB,EAAIyR,EACZ,GAAIsM,aAAwBrJ,IACI,IAA5BqJ,EAAavkB,MAAM/b,KACnB,OAAO/E,KAAK8jB,eAAeuhB,EAAavkB,OAE5C,MAAMwkB,EAtNd,SAA0B9gC,GACtB,SAAS+gC,EAAY/gC,GACjB,MAAMghC,EAAO,GACb,IAAK,IAAIp7B,EAAI,EAAGA,EAAI5F,EAAQ2C,UAAU5F,OAAQ6I,IAC1Co7B,EAAK1hC,KAAKU,EAAQ2C,UAAUyG,KAAKxD,IAErC,OAAOo7B,CACX,CACA,IAAIF,EACArpB,EAASzX,EACb,KAAkB,OAAXyX,IACHqpB,EAAQC,EAAYtpB,GAAQwX,MAAMgS,GAAQA,EAAIC,WAAW,qBACpC,iBAAVJ,IAGXrpB,EAASA,EAAOpC,cAEpB,OAAOyrB,CACX,CAoMsBK,CAAiB3lC,KAAKyf,SAASjb,SACvCA,EAAUxE,KAAKwE,QAarB,MAAMsW,GAXEtX,aAAyC,EAASA,EAAQqS,UACnDrS,EAAQqS,SAEfwvB,aAAwBzK,GACjByK,EAAa7gC,QAAQoF,wBAE5By7B,EAAavkB,MACNukB,EAAavkB,MAAMtc,QAAQoF,wBAE/BpF,EAAQoF,wBAGb/J,EAAqJ,QAA1IynB,EAA8F,QAAxF/kB,EAAKiB,aAAyC,EAASA,EAAQoiC,2BAAwC,IAAPrjC,OAAgB,EAASA,EAAG6c,UAAuB,IAAPkI,EAAgBA,EAAKtnB,KAAK6lC,iBACtJ,SAAnCR,EAAa9iB,IAAIjI,SAAS7V,MAC1B4gC,EAAa9iB,IAAIlW,YAAW,GAEhC,MAAMy1B,EAAU,IAAID,GAAc,GAAE7hC,KAAKof,MAAMvf,IAC/CylC,QAAqCA,EAAQ,GAAI,CAC7C7C,IAAoF,QAA9E1J,EAAKv1B,aAAyC,EAASA,EAAQ4wB,iBAA8B,IAAP2E,EAAgBA,EAAK,eACjHvvB,KAAMT,OAAOq5B,QAAUtnB,EAAItR,KAC3BC,IAAKV,OAAOs5B,QAAUvnB,EAAIrR,IAC1BC,MAAOoR,EAAIpR,MACXC,OAAQmR,EAAInR,OACZo5B,UAAWv/B,aAAyC,EAASA,EAAQu/B,UACrEf,YAAax+B,aAAyC,EAASA,EAAQw+B,cAErE8D,EAAyB,IAAIpgC,EAAoBo8B,EAASA,EAAQI,YAAW,KAC/E4D,EAAuBhkC,SAAS,KAEpC,OAAOggC,EACFU,OACAb,MAAMoE,IACP,IAAIxjC,EACJ,GAAIu/B,EAAQn8B,WACR,OAEJ,GAAwB,OAApBogC,EAEA,YADAD,EAAuBhkC,UAG3B,MAAMmjC,EAAS98B,SAAS2K,cAAc,OACtCmyB,EAAOz9B,UAAY,8BACnB,MAAMkvB,EAAyB,IAAI+J,GAAuBwE,GACpDe,EAAiBX,aAAwBrJ,GACzCqJ,EAAavkB,MACbukB,EACAY,EAAoBZ,EAAa9iB,IAAIjI,SAAS7V,KAC9Cqc,EAAiG,QAAxFve,EAAKiB,aAAyC,EAASA,EAAQoiC,2BAAwC,IAAPrjC,EAAgBA,EAAKvC,KAAKkmC,YAAY,CAAE9mB,GAAIvf,IAK3J,GAJAihB,EAAMqG,MAAMuI,gBAAkBgH,GACxBlzB,aAAyC,EAASA,EAAQoiC,sBAC5D5lC,KAAK+kC,eAAe5gC,KAAK2c,GAEzBukB,aAAwBrJ,GACxBh8B,KAAKmmC,YAAW,KACZ,MAAM9lB,EAAQ2lB,EAAe7e,MAAMrF,YAAYujB,GAC/CvkB,EAAMqG,MAAM2I,UAAUzP,EAAM,SAQhC,OAJArgB,KAAKmmC,YAAW,IAAMnC,GAA2B,CAC7Cx+B,KAAMwgC,EACN76B,GAAI2V,MAEAmlB,GACJ,IAAK,OACDD,EAAezjB,IAAIlW,YAAW,GAC9B,MACJ,IAAK,WACL,IAAK,SACDrM,KAAKqhB,YAAY2kB,GAsB7B,IAAII,EAlBJL,EAAgB5+B,UAAUjD,IAAI,eAC9B6hC,EAAgB55B,MAAM2f,SAAW,SACjCia,EAAgB50B,YAAY8zB,GAC5Bc,EAAgB50B,YAAY2P,EAAMtc,SAClCsc,EAAMqG,MAAM7M,SAAW,CACnB7V,KAAM,SACN61B,UAAWA,IAAMwH,EAAQ/4B,QAE7B/I,KAAKqmC,yBAAyBvlB,GAC9BglB,EAAuB//B,eAAe+a,EAAMyB,IAAIrC,mBAAmBvc,IAC/D,IAAIpB,EACAoB,EAAMmlB,WACoB,QAAzBvmB,EAAKu/B,EAAQ/4B,cAA2B,IAAPxG,GAAyBA,EAAGwf,QAClE,IACAjB,EAAMyB,IAAImH,aAAY,KACtB,IAAInnB,EACsB,QAAzBA,EAAKu/B,EAAQ/4B,cAA2B,IAAPxG,GAAyBA,EAAGwf,OAAO,KAGzE,MAAMrf,EAAQ,CACVqG,OAAQ+4B,EACRwE,YAAaxlB,EACbklB,eAAgBhmC,KAAKmhB,SAAS6kB,EAAe5mB,IACvC4mB,EAAe5mB,QACf3e,EACN4F,WAAY,CACRvE,QAASA,KACLgkC,EAAuBhkC,UAChBskC,KAInBN,EAAuB//B,eAMvBxB,EAA4Bu9B,EAAQ/4B,OAAQ,UAAU,KAClD+X,EAAMjM,OAAO9L,OAAOu5B,WAAYv5B,OAAOw5B,YAAY,IACnD7L,EAAwBv1B,EAAWqE,MAAK,KACxC,GAAIxF,KAAKmhB,SAAS6kB,EAAe5mB,IAC7Bpf,KAAKmmC,YAAW,IAAMnC,GAA2B,CAC7Cx+B,KAAMsb,EACN3V,GAAI66B,MAEHA,EAAezjB,IAAIjC,WACpB0lB,EAAezjB,IAAIlW,YAAW,GAE9BrM,KAAKmhB,SAASL,EAAM1B,KACpBpf,KAAK+gB,cAAcD,EAAO,CACtBylB,sBAAsB,SAI7B,GAAIvmC,KAAKmhB,SAASL,EAAM1B,IAAK,CAC9B,MAAMonB,EAAexmC,KAAK+gB,cAAcD,EAAO,CAC3C3J,aAAa,EACb+J,YAAY,IAEhBslB,EAAarf,MAAMuI,gBACf1vB,KAAK02B,uBACT8P,EAAarf,MAAM7M,SAAW,CAAE7V,KAAM,QACtC2hC,EAAgBI,CACpB,MAEJxmC,KAAK4kC,cAAc9gC,KAAKpB,GACxB1C,KAAKklC,iBAAiB,IAErBuB,OAAO7C,IACRhhC,QAAQ8jC,MAAM,2CAA4C9C,EAAI,GAEtE,CACAhgB,gBAAAA,CAAiBhW,EAAMiW,EAAOrgB,GAC1B,IAAIjB,EAAI+kB,EAAIyR,EAAIuE,EAAIqJ,EAAIC,EAAIC,EAC5B,IAAI/lB,EACJ,GAAIlT,aAAgBouB,GAChBlb,EAAQ9gB,KAAKkmC,cACblmC,KAAK+kC,eAAe5gC,KAAK2c,GACzB9gB,KAAKmmC,YAAW,IAAMnmC,KAAK8hB,YAAYlU,EAAM,CACzCk5B,kBAAkB,EAClB3vB,aAAa,EACbkhB,oBAAoB,MAExBr4B,KAAKmmC,YAAW,IAAMrlB,EAAMqG,MAAM2I,UAAUliB,EAAM,CAAE8pB,oBAAoB,UAEvE,CACD5W,EAAQlT,EACR,MAAMm5B,EAA4F,QAAlExkC,EAAKvC,KAAK4kC,cAAcnR,MAAMzjB,GAAMA,EAAEs2B,cAAgBxlB,WAA2B,IAAPve,OAAgB,EAASA,EAAGyjC,eAChIgB,EAAuBD,EACvB/mC,KAAKmhB,SAAS4lB,QACdtmC,EAC8F,kBAA/E+C,aAAyC,EAASA,EAAQyjC,kBAC3EzjC,EAAQyjC,kBAEJD,GACAhnC,KAAKmmC,YAAW,IAAMnC,GAA2B,CAC7Cx+B,KAAMoI,EACNzC,GAAI67B,MAERhnC,KAAK+gB,cAAcnT,EAAM,CACrBs5B,kBAAkB,EAClBX,sBAAsB,IAE1BvmC,KAAK+gB,cAAcimB,EAAsB,CACrC7vB,aAAa,IAEjB2J,EAAQkmB,GAGRhnC,KAAK+gB,cAAcnT,EAAM,CACrBuJ,aAAa,EACb+vB,kBAAkB,EAClBX,sBAAsB,IAItC,CACAzlB,EAAMqG,MAAM7M,SAAW,CAAE7V,KAAM,YAC/B,MAAM0iC,EAAiF,iBAA3DtjB,aAAqC,EAASA,EAAMtU,GAC1EzE,KAAKD,IAAIgZ,EAAMtU,EAAG,GAClBixB,GACA4G,EAAgF,iBAA3DvjB,aAAqC,EAASA,EAAMwC,GACzEvb,KAAKD,IAAIgZ,EAAMwC,EAAG,GAClBma,GACAF,EAAU,IAAIhC,GAAQ,CACxBpyB,UAAWlM,KAAKyf,SAASjb,QACzBgrB,QAAS1O,EAAMtc,QACfmF,OAA8E,QAArE2d,EAAKzD,aAAqC,EAASA,EAAMla,cAA2B,IAAP2d,EAAgBA,EAAK,IAC3G5d,MAA4E,QAApEqvB,EAAKlV,aAAqC,EAASA,EAAMna,aAA0B,IAAPqvB,EAAgBA,EAAK,IACzGvvB,KAAM29B,EACN19B,IAAK29B,EACL7I,uBAA6D,0BAArCv+B,KAAKwD,QAAQ2wB,yBAC/B1zB,EACsH,QAArHkmC,EAAiD,QAA3CrJ,EAAKt9B,KAAKwD,QAAQ2wB,2BAAwC,IAAPmJ,OAAgB,EAASA,EAAG+J,kCAA+C,IAAPV,EAAgBA,EAAKpG,GACzJ/B,wBAA8D,0BAArCx+B,KAAKwD,QAAQ2wB,yBAChC1zB,EACuH,QAAtHomC,EAAiD,QAA3CD,EAAK5mC,KAAKwD,QAAQ2wB,2BAAwC,IAAPyS,OAAgB,EAASA,EAAGU,mCAAgD,IAAPT,EAAgBA,EAAKtG,KAExJxmB,EAAK+G,EAAMtc,QAAQ+iC,cAAc,mBACvC,IAAKxtB,EACD,MAAM,IAAIvX,MAAM,8BAEpB89B,EAAQlB,UAAUrlB,EAAI,CAClBmZ,WAA8F,kBAA1E1vB,aAAyC,EAASA,EAAQ0vB,aACxE1vB,EAAQ0vB,aAGlB,MAAMsU,EAAqB,IAAInH,GAA2Bvf,EAAOwf,GAC3Dj6B,EAAaC,EAAmBwa,EAAMtc,SAAUka,IAClD,MAAM,MAAEhV,EAAK,OAAEC,GAAW+U,EAAMM,YAChC8B,EAAMjM,OAAOnL,EAAOC,EAAO,IAE/B69B,EAAmBzhC,eAAeu6B,EAAQ1tB,aAAY,KAIlDkO,EAAMjM,OAAOiM,EAAMpX,MAAOoX,EAAMnX,OAAO,IACvC22B,EAAQ5B,gBAAe,KACvB1+B,KAAKmgB,yBAAyBhc,MAAM,IACpC2c,EAAMlO,aAAajP,IACnB28B,EAAQ1B,UAAU,CACdj1B,OAAQhG,aAAqC,EAASA,EAAMgG,OAC5DD,MAAO/F,aAAqC,EAASA,EAAM+F,OAC7D,IACF,CACA5H,QAASA,KACLuE,EAAWvE,UACXgf,EAAMqG,MAAM7M,SAAW,CAAE7V,KAAM,QAC/B4C,EAAOrH,KAAK2kC,gBAAiB6C,GAC7BxnC,KAAKklC,iBAAiB,IAG9BllC,KAAK2kC,gBAAgB7gC,KAAK0jC,IACpBhkC,aAAyC,EAASA,EAAQikC,kBAC5DznC,KAAKqmC,yBAAyBvlB,GAElC9gB,KAAKklC,iBACT,CACAE,aAAAA,CAAcvvB,GACV,OAAQA,GACJ,IAAK,MACL,IAAK,SACG7V,KAAKyf,SAASnS,cAAgBf,EAAYkB,YAG1CzN,KAAKyf,SAASzC,kCAElB,MACJ,IAAK,OACL,IAAK,QACGhd,KAAKyf,SAASnS,cAAgBf,EAAY8I,UAG1CrV,KAAKyf,SAASzC,kCAM1B,OAAQnH,GACJ,IAAK,MACL,IAAK,OACL,IAAK,SACD,OAAO7V,KAAK0nC,sBAAsB,CAAC,IACvC,IAAK,SACL,IAAK,QACD,OAAO1nC,KAAK0nC,sBAAsB,CAAC1nC,KAAKyf,SAASle,SACrD,QACI,MAAM,IAAIiB,MAAO,wBAAuBqT,KAEpD,CACAgM,aAAAA,CAAcre,GACV,IAAIjB,EAAI+kB,EACR,MAAMqgB,EAA8B,wBAAyBnkC,GACzDA,EAAQ2wB,sBAAwBn0B,KAAKwD,QAAQ2wB,oBAC3CyT,EAA6B,qBAAsBpkC,GACrDA,EAAQ+wB,mBAAqBv0B,KAAKwD,QAAQ+wB,iBAE9C,GADAv0B,KAAKokC,SAAW/hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtiB,KAAKwD,SAAUA,GAC3DmkC,EACA,IAAK,MAAM7mB,KAAS9gB,KAAK2kC,gBAAiB,CACtC,OAAQ3kC,KAAKwD,QAAQ2wB,qBACjB,IAAK,wBACDrT,EAAMwf,QAAQ9B,6BAA0B/9B,EACxCqgB,EAAMwf,QAAQ/B,4BAAyB99B,EACvC,MACJ,UAAKA,EACDqgB,EAAMwf,QAAQ9B,wBACV+B,GACJzf,EAAMwf,QAAQ/B,uBACVgC,GACJ,MACJ,QACIzf,EAAMwf,QAAQ9B,wBACkC,QAA3Cj8B,EAAKvC,KAAKwD,QAAQ2wB,2BAAwC,IAAP5xB,OAAgB,EAASA,EAAG+kC,4BACpFxmB,EAAMwf,QAAQ/B,uBACkC,QAA3CjX,EAAKtnB,KAAKwD,QAAQ2wB,2BAAwC,IAAP7M,OAAgB,EAASA,EAAG+f,2BAE5FvmB,EAAMwf,QAAQ1B,UAAU,CAAC,EAC7B,CAEAgJ,GACA5nC,KAAKmlC,gBAAgBje,gBAAgB1jB,EAAQ+wB,kBAEjDv0B,KAAK6U,OAAO7U,KAAKyf,SAAS/V,MAAO1J,KAAKyf,SAAS9V,QAAQ,EAC3D,CACAkL,MAAAA,CAAOnL,EAAOC,EAAQ6X,GAElB,GADAzhB,MAAM8U,OAAOnL,EAAOC,EAAQ6X,GACxBxhB,KAAK2kC,gBACL,IAAK,MAAMkD,KAAY7nC,KAAK2kC,gBAExBkD,EAASvH,QAAQ1B,WAG7B,CACA7c,KAAAA,GACI,IAAIxf,EACwB,QAA3BA,EAAKvC,KAAK0f,mBAAgC,IAAPnd,GAAyBA,EAAGwf,OACpE,CACAyB,aAAAA,CAAcpE,GACV,OAAOpf,KAAK2hB,OAAO8R,MAAMpT,GAAUA,EAAMjB,KAAOA,GACpD,CACAmU,cAAAA,CAAelT,GACXA,EAAMS,MAAMqG,MAAM2I,UAAUzP,GAC5BrgB,KAAKqmC,yBAAyBhmB,EAAMS,MACxC,CACAQ,UAAAA,CAAW9d,GACP,IAAIjB,EACJ,QAFc,IAAPiB,IAAAA,EAAU,CAAC,IAEbA,EAAQsd,MAAO,CAChB,IAAK9gB,KAAK0f,YACN,OAEJlc,EAAQsd,MAAQ9gB,KAAK0f,WACzB,CACA,GAAIlc,EAAQskC,cAAgBtkC,EAAQsd,OAC5Btd,EAAQsd,MAAMyC,cACd/f,EAAQsd,MAAMa,OAAOne,EAAQsd,MAAMa,OAAOpgB,OAAS,GAEnD,YADAiC,EAAQsd,MAAMqG,MAAM7F,WAAW,CAAE+V,cAAc,IAIvD,MAAM/c,EAAWV,EAAgBpW,EAAQsd,MAAMtc,SACzCwG,EAA+C,QAAvCzI,EAAKvC,KAAKyf,SAASzU,KAAKsP,UAA8B,IAAP/X,OAAgB,EAASA,EAAGoJ,KACzF3L,KAAKqmC,yBAAyBr7B,EAClC,CACAuW,cAAAA,CAAe/d,GACX,IAAIjB,EACJ,QAFkB,IAAPiB,IAAAA,EAAU,CAAC,IAEjBA,EAAQsd,MAAO,CAChB,IAAK9gB,KAAK0f,YACN,OAEJlc,EAAQsd,MAAQ9gB,KAAK0f,WACzB,CACA,GAAIlc,EAAQskC,cAAgBtkC,EAAQsd,OAC5Btd,EAAQsd,MAAMyC,cAAgB/f,EAAQsd,MAAMa,OAAO,GAEnD,YADAne,EAAQsd,MAAMqG,MAAM5F,eAAe,CAAE8V,cAAc,IAI3D,MAAM/c,EAAWV,EAAgBpW,EAAQsd,MAAMtc,SACzCwG,EAAmD,QAA3CzI,EAAKvC,KAAKyf,SAASnK,SAASgF,UAA8B,IAAP/X,OAAgB,EAASA,EAAGoJ,KACzFX,GACAhL,KAAKqmC,yBAAyBr7B,EAEtC,CAMAgQ,MAAAA,GACI,IAAIzY,EACJ,MAAM7B,EAAOV,KAAKyf,SAASnD,YACrBqF,EAAS3hB,KAAK2hB,OAAOjU,QAAO,CAACq6B,EAAY1nB,KAC3C0nB,EAAW1nB,EAAMjB,IAAMiB,EAAMrF,SACtB+sB,IACR,CAAC,GACEC,EAAShoC,KAAK2kC,gBAAgB/iC,KAAKkf,IAC9B,CACHpgB,KAAMogB,EAAMA,MAAM9F,SAClBnF,SAAUiL,EAAMwf,QAAQtlB,aAG1BitB,EAAejoC,KAAK4kC,cAAchjC,KAAKkf,IAClC,CACHpgB,KAAMogB,EAAMwlB,YAAYtrB,SACxBktB,mBAAoBpnB,EAAMklB,eAC1BnwB,SAAUiL,EAAM/X,OAAOo5B,iBAGzB/2B,EAAS,CACX+8B,KAAMznC,EACNihB,SACAjC,YAAyC,QAA3Bnd,EAAKvC,KAAK0f,mBAAgC,IAAPnd,OAAgB,EAASA,EAAG6c,IAQjF,OANI4oB,EAAOzmC,OAAS,IAChB6J,EAAOg9B,eAAiBJ,GAExBC,EAAa1mC,OAAS,IACtB6J,EAAO68B,aAAeA,GAEnB78B,CACX,CACA0R,QAAAA,CAASpc,GACL,IAAI6B,EAAI+kB,EAAIyR,EAEZ,GADA/4B,KAAKsD,QACe,iBAAT5C,GAA8B,OAATA,EAC5B,MAAM,IAAI8B,MAAM,+CAEpB,MAAM,KAAE2lC,EAAI,OAAExmB,EAAM,YAAEjC,GAAgBhf,EACtC,GAAuB,WAAnBynC,EAAKhtB,KAAK1W,OAAsBjD,MAAM6mC,QAAQF,EAAKhtB,KAAKza,MACxD,MAAM,IAAI8B,MAAM,+BAEpB,IAEI,MAAMkH,EAAQ1J,KAAK0J,MACbC,EAAS3J,KAAK2J,OACd2+B,EAAkC5nC,IACpC,MAAM,GAAE0e,EAAE,OAAEhE,EAAM,WAAEkb,EAAU,MAAEhlB,EAAK,WAAE6lB,GAAez2B,EACtD,GAAkB,iBAAP0e,EACP,MAAM,IAAI5c,MAAM,mCAEpB,MAAMse,EAAQ9gB,KAAKkmC,YAAY,CAC3B9mB,KACAhE,SAAUA,EACVkb,aAAcA,IAEZiS,EAAgB,GACtB,IAAK,MAAM1mC,KAASyP,EAAO,CAMvB,MAAM+O,EAAQrgB,KAAKskC,cAAcxnB,SAAS6E,EAAO9f,GAAQif,GACzDynB,EAAczkC,KAAKuc,EACvB,CACArgB,KAAK+kC,eAAe5gC,KAAK2c,GACzB,IAAK,IAAI1W,EAAI,EAAGA,EAAIkH,EAAM/P,OAAQ6I,IAAK,CACnC,MAAMiW,EAAQkoB,EAAcn+B,GACtB0e,EAAiC,iBAAfqO,GACpBA,IAAe9W,EAAMjB,GACzB0B,EAAMqG,MAAM2I,UAAUzP,EAAO,CACzBkX,eAAgBzO,EAChB4O,oBAAoB,GAE5B,CAMA,OALK5W,EAAMyC,aAAezC,EAAMa,OAAOpgB,OAAS,GAC5Cuf,EAAMqG,MAAM2I,UAAUhP,EAAMa,OAAOb,EAAMa,OAAOpgB,OAAS,GAAI,CACzDm2B,oBAAoB,IAGrB5W,CAAK,EAEhB9gB,KAAKyf,SAASjD,YAAY2rB,EAAM,CAC5BrrB,SAAWtE,GACA8vB,EAA+B9vB,EAAK9X,QAGnDV,KAAK6U,OAAOnL,EAAOC,GAAQ,GAC3B,MAAM6+B,EAA0D,QAA9BjmC,EAAK7B,EAAK0nC,sBAAmC,IAAP7lC,EAAgBA,EAAK,GAC7F,IAAK,MAAMkmC,KAA2BD,EAA0B,CAC5D,MAAM,KAAE9nC,EAAI,SAAEmV,GAAa4yB,EACrB3nB,EAAQwnB,EAA+B5nC,GAC7CV,KAAK4jB,iBAAiB9C,EAAO,CACzBvR,EAAGsG,EAASrM,KACZ6c,EAAGxQ,EAASpM,IACZE,OAAQkM,EAASlM,OACjBD,MAAOmM,EAASnM,OACjB,CAAEu9B,iBAAiB,EAAM/T,YAAY,GAC5C,CACA,MAAMwV,EAAsD,QAA5BphB,EAAK5mB,EAAKunC,oBAAiC,IAAP3gB,EAAgBA,EAAK,GACzF,IAAK,MAAMqhB,KAAyBD,EAAwB,CACxD,MAAM,KAAEhoC,EAAI,SAAEmV,EAAQ,mBAAEqyB,GAAuBS,EACzC7nB,EAAQwnB,EAA+B5nC,GAC7CV,KAAK8jB,eAEiB,QAFDiV,EAAMmP,EACrBloC,KAAKmhB,SAAS+mB,QACdznC,SAA+B,IAAPs4B,EAAgBA,EAAKjY,EAAO,CACtDmmB,iBAAiB,EACjBpxB,SAAUA,QAA2CA,OAAWpV,EAChEmlC,oBAAqBsC,EACfpnB,OACArgB,GAEd,CACA,IAAK,MAAMmoC,KAAiB5oC,KAAK2kC,gBAC7BiE,EAActI,QAAQ1B,YAE1B,GAA2B,iBAAhBlf,EAA0B,CACjC,MAAMW,EAAQrgB,KAAKmhB,SAASzB,GACxBW,GACArgB,KAAKqmC,yBAAyBhmB,EAEtC,CACJ,CACA,MAAOujB,GAIH,IAAK,MAAM9iB,KAAS9gB,KAAKuf,OACrB,IAAK,MAAMc,KAASS,EAAMa,OACtB3hB,KAAK8hB,YAAYzB,EAAO,CACpBymB,kBAAkB,EAClB3vB,aAAa,IAQzB,IAAK,MAAM2J,KAAS9gB,KAAKuf,OACrBuB,EAAMhf,UACN9B,KAAKsf,QAAQhb,OAAOwc,EAAM1B,IAC1Bpf,KAAK8kC,kBAAkB3gC,KAAK2c,GAGhC,IAAK,MAAM8nB,IAAiB,IAAI5oC,KAAK2kC,iBACjCiE,EAAc9mC,UASlB,MANA9B,KAAKsD,QAMCsgC,CACV,CACA5jC,KAAKklC,kBACLllC,KAAKykC,qBAAqBtgC,MAC9B,CACAb,KAAAA,GACI,MAAMic,EAAS/d,MAAMgE,KAAKxF,KAAKsf,QAAQE,UAAU5d,KAAKoO,GAAMA,EAAEtN,QACxDmmC,IAAmB7oC,KAAK0f,YAC9B,IAAK,MAAMoB,KAASvB,EAEhBvf,KAAKqhB,YAAYP,EAAO,CAAEI,YAAY,IAEtC2nB,GACA7oC,KAAKqmC,8BAAyB5lC,GAElCT,KAAKyf,SAASnc,OAClB,CACAogB,cAAAA,GACI,IAAK,MAAMhF,KAAS1e,KAAKsf,QAAQqjB,UAAW,CACxC,MAAO3yB,EAAG8Q,GAASpC,EACnBoC,EAAMpe,MAAMykB,MAAM2Q,gBACtB,CACJ,CACA9V,QAAAA,CAASxe,GACL,IAAIjB,EAAI+kB,EACR,GAAItnB,KAAK2hB,OAAO8R,MAAMzjB,GAAMA,EAAEoP,KAAO5b,EAAQ4b,KACzC,MAAM,IAAI5c,MAAO,iBAAgBgB,EAAQ4b,qBAE7C,IAAI4mB,EACJ,GAAIxiC,EAAQqS,UAAYrS,EAAQqkC,SAC5B,MAAM,IAAIrlC,MAAM,kFAEpB,GAAIgB,EAAQqS,SACR,GAA4BrS,EAAQqS,SlB1xBnCizB,ekB0xB8C,CAC3C,MAAMA,EAA4D,iBAApCtlC,EAAQqS,SAASizB,eACzC9oC,KAAKwjB,cAAchgB,EAAQqS,SAASizB,gBACpCtlC,EAAQqS,SAASizB,eACvB,IAAKA,EACD,MAAM,IAAItmC,MAAO,mBAAkBgB,EAAQqS,SAASizB,kCAExD9C,EAAiBhmC,KAAK+oC,UAAUD,EACpC,KACK,KlB9xBV,SAAiCpoC,GACpC,QAAIA,EAAKslC,cAIb,CkByxBqBgD,CAAwBxlC,EAAQqS,UASpC,CACD,MAAMiL,EAAQ9gB,KAAKolC,cAAchgB,GAAoB5hB,EAAQqS,SAAS0E,YAChE8F,EAAQrgB,KAAKipC,YAAYzlC,EAASsd,GAQxC,OAPAA,EAAMqG,MAAM2I,UAAUzP,EAAO,CACzBkX,cAAe/zB,EAAQ0lC,SACvBxR,mBAAoBl0B,EAAQ0lC,WAE3B1lC,EAAQ0lC,UACTlpC,KAAKqmC,yBAAyBvlB,GAE3BT,CACX,CAfI,GAJA2lB,EAC+C,iBAApCxiC,EAAQqS,SAASmwB,eAC2C,QAA5DzjC,EAAKvC,KAAKsf,QAAQ2B,IAAIzd,EAAQqS,SAASmwB,uBAAoC,IAAPzjC,OAAgB,EAASA,EAAGG,MACjGc,EAAQqS,SAASmwB,gBACtBA,EACD,MAAM,IAAIxjC,MAAO,mBAAkBgB,EAAQqS,SAASmwB,iCAc5D,MAGAA,EAAiBhmC,KAAK0f,YAE1B,IAAIW,EACJ,GAAI2lB,EAAgB,CAChB,MAAMrhB,EAASzF,IAAsC,QAA3BoI,EAAK9jB,EAAQqS,gBAA6B,IAAPyR,OAAgB,EAASA,EAAG/M,YAAc,UACvG,GAAI/W,EAAQqkC,SAAU,CAClB,MAAM/mB,EAAQ9gB,KAAKkmC,cACnBlmC,KAAK+kC,eAAe5gC,KAAK2c,GACzB,MAAMqoB,EAAgC,iBAArB3lC,EAAQqkC,UACA,OAArBrkC,EAAQqkC,SACNrkC,EAAQqkC,SACR,CAAC,EACP7nC,KAAK4jB,iBAAiB9C,EAAOqoB,EAAG,CAC5BjW,YAAY,EACZ+T,iBAAiB,EACjBQ,iBAAiB,IAErBpnB,EAAQrgB,KAAKipC,YAAYzlC,EAASsd,GAClCA,EAAMqG,MAAM2I,UAAUzP,EAAO,CACzBkX,cAAe/zB,EAAQ0lC,SACvBxR,mBAAoBl0B,EAAQ0lC,UAEpC,MACK,GAAyC,aAArClD,EAAezjB,IAAIjI,SAAS7V,MACtB,WAAXkgB,EACAtE,EAAQrgB,KAAKipC,YAAYzlC,EAASwiC,GAClCA,EAAe7e,MAAM2I,UAAUzP,EAAO,CAClCkX,cAAe/zB,EAAQ0lC,SACvBxR,mBAAoBl0B,EAAQ0lC,WAE3B1lC,EAAQ0lC,UACTlpC,KAAKqmC,yBAAyBL,OAGjC,CACD,MAAM1rB,EAAWV,EAAgBosB,EAAexhC,SAC1C4kC,EAAmBhvB,EAAoBpa,KAAKyf,SAASnS,YAAagN,EAAUqK,GAC5E7D,EAAQ9gB,KAAK0nC,sBAAsB0B,GACzC/oB,EAAQrgB,KAAKipC,YAAYzlC,EAASsd,GAClCA,EAAMqG,MAAM2I,UAAUzP,EAAO,CACzBkX,cAAe/zB,EAAQ0lC,SACvBxR,mBAAoBl0B,EAAQ0lC,WAE3B1lC,EAAQ0lC,UACTlpC,KAAKqmC,yBAAyBvlB,EAEtC,CACJ,MACK,GAAItd,EAAQqkC,SAAU,CACvB,MAAM/mB,EAAQ9gB,KAAKkmC,cACnBlmC,KAAK+kC,eAAe5gC,KAAK2c,GACzB,MAAMuoB,EAA0C,iBAArB7lC,EAAQqkC,UACV,OAArBrkC,EAAQqkC,SACNrkC,EAAQqkC,SACR,CAAC,EACP7nC,KAAK4jB,iBAAiB9C,EAAOuoB,EAAa,CACtCnW,YAAY,EACZ+T,iBAAiB,EACjBQ,iBAAiB,IAErBpnB,EAAQrgB,KAAKipC,YAAYzlC,EAASsd,GAClCA,EAAMqG,MAAM2I,UAAUzP,EAAO,CACzBkX,cAAe/zB,EAAQ0lC,SACvBxR,mBAAoBl0B,EAAQ0lC,UAEpC,KACK,CACD,MAAMpoB,EAAQ9gB,KAAK0nC,wBACnBrnB,EAAQrgB,KAAKipC,YAAYzlC,EAASsd,GAClCA,EAAMqG,MAAM2I,UAAUzP,EAAO,CACzBkX,cAAe/zB,EAAQ0lC,SACvBxR,mBAAoBl0B,EAAQ0lC,WAE3B1lC,EAAQ0lC,UACTlpC,KAAKqmC,yBAAyBvlB,EAEtC,CACA,OAAOT,CACX,CACAyB,WAAAA,CAAYzB,EAAO7c,QAAO,IAAPA,IAAAA,EAAU,CACzBsjC,kBAAkB,EAClB3vB,aAAa,IAEb,MAAM2J,EAAQT,EAAMS,MACpB,IAAKA,EACD,MAAM,IAAIte,MAAO,uBAAsB6d,EAAMjB,6BAEjD0B,EAAMqG,MAAMrF,YAAYzB,EAAO,CAC3BgY,mBAAoB70B,EAAQ60B,qBAE3B70B,EAAQ2T,cACTkJ,EAAMS,MAAMqG,MAAMuI,gBAAgBC,QAAQtP,GAC1CA,EAAMve,WAES,IAAfgf,EAAM/b,MAAcvB,EAAQsjC,kBAC5B9mC,KAAKqhB,YAAYP,EAAO,CAAEI,WAAY1d,EAAQ60B,oBAEtD,CACAK,wBAAAA,GACI,OAAI14B,KAAKwD,QAAQk1B,yBACN14B,KAAKwD,QAAQk1B,2BAEjB,IAAIoF,EACf,CACAoH,eAAAA,GACI,IAAI3iC,EAAI+kB,EACR,GAA4F,IAAxFtnB,KAAKuf,OAAOjN,QAAQ/C,GAA8B,SAAxBA,EAAEgT,IAAIjI,SAAS7V,MAAmB8K,EAAEgT,IAAIjC,YAAW/e,QAC7E,IAAKvB,KAAKg1B,UAAW,CACjBh1B,KAAKg1B,UAAYh1B,KAAK04B,2BACtB14B,KAAKg1B,UAAU/I,KAAK,CAChByC,aAAc,IAAI1L,GAAYhjB,QAElC,MAAMspC,EAAqBnhC,SAAS2K,cAAc,OAClDw2B,EAAmB9hC,UAAY,yBAC/B8hC,EAAmBn4B,YAAYnR,KAAKg1B,UAAUxwB,SAC9CxE,KAAKyf,SAASjb,QAAQ2M,YAAYm4B,EACtC,OAEKtpC,KAAKg1B,YACVh1B,KAAKg1B,UAAUxwB,QAAQqV,cAAcxS,SACI,QAAxCigB,GAAM/kB,EAAKvC,KAAKg1B,WAAWlzB,eAA4B,IAAPwlB,GAAyBA,EAAGpf,KAAK3F,GAClFvC,KAAKg1B,UAAY,KAEzB,CACAvR,QAAAA,CAASjgB,GACL,IAAIjB,EACJ,GAAIiB,EAAS,CACT,IAAIwiC,EACJ,GAA4BxiC,ElB96B3BslC,ekB86BqC,CAClC,MAAMA,EAAmD,iBAA3BtlC,EAAQslC,eAChC9oC,KAAK2hB,OAAO8R,MAAMpT,GAAUA,EAAMjB,KAAO5b,EAAQslC,iBACjDtlC,EAAQslC,eACd,IAAKA,EACD,MAAM,IAAItmC,MAAO,mBAAkBgB,EAAQslC,iCAG/C,GADA9C,EAAiBhmC,KAAK+oC,UAAUD,IAC3B9C,EACD,MAAM,IAAIxjC,MAAO,uCAAsCgB,EAAQslC,gCAEvE,KACK,KlBr7BV,SAAiCpoC,GACpC,QAAIA,EAAKslC,cAIb,CkBg7BqBuD,CAAwB/lC,GAS5B,CACD,MAAMsd,EAAQ9gB,KAAKolC,cAAchgB,GAAoB5hB,EAAQ+W,YAI7D,OAHK/W,EAAQ+zB,eACTv3B,KAAKqmC,yBAAyBvlB,GAE3BA,CACX,CAVI,GAJAklB,EACsC,iBAA3BxiC,EAAQwiC,eAC2C,QAAnDzjC,EAAKvC,KAAKsf,QAAQ2B,IAAIzd,EAAQwiC,uBAAoC,IAAPzjC,OAAgB,EAASA,EAAGG,MACxFc,EAAQwiC,gBACbA,EACD,MAAM,IAAIxjC,MAAO,mBAAkBgB,EAAQwiC,gCASnD,CACA,MAAMrhB,EAASzF,GAAS1b,EAAQ+W,WAAa,UACvCD,EAAWV,EAAgBosB,EAAexhC,SAC1C4kC,EAAmBhvB,EAAoBpa,KAAKyf,SAASnS,YAAagN,EAAUqK,GAC5E7D,EAAQ9gB,KAAKkmC,YAAY1iC,GAK/B,OAJAxD,KAAK6gB,WAAWC,EAAOsoB,GAClB5lC,EAAQ+zB,eACTv3B,KAAKqmC,yBAAyBvlB,GAE3BA,CACX,CACK,CACD,MAAMA,EAAQ9gB,KAAKkmC,YAAY1iC,GAG/B,OAFAxD,KAAK6gB,WAAWC,GAChB9gB,KAAKqmC,yBAAyBvlB,GACvBA,CACX,CACJ,CACAO,WAAAA,CAAYP,EAAOtd,GACfxD,KAAK+gB,cAAcD,EAAOtd,EAC9B,CACAud,aAAAA,CAAcD,EAAOtd,GACjB,IAAIjB,EACJ,MAAMof,EAAS,IAAIb,EAAMa,QACzB,KAAMne,aAAyC,EAASA,EAAQ2T,aAC5D,IAAK,MAAMkJ,KAASsB,EAChB3hB,KAAK8hB,YAAYzB,EAAO,CACpBymB,kBAAkB,EAClB3vB,YAA8F,QAAhF5U,EAAKiB,aAAyC,EAASA,EAAQ2T,mBAAgC,IAAP5U,GAAgBA,IAIlI,MAAMghB,EAAcvjB,KAAKujB,YACzB,GAAgC,aAA5BzC,EAAMyB,IAAIjI,SAAS7V,KAAqB,CACxC,MAAMmkC,EAAgB5oC,KAAK2kC,gBAAgBlR,MAAMzjB,GAAMA,EAAE8Q,QAAUA,IACnE,GAAI8nB,EAAe,CAQf,IAPMplC,aAAyC,EAASA,EAAQ2T,eAC5DyxB,EAAc9nB,MAAMhf,UACpB9B,KAAKsf,QAAQhb,OAAOwc,EAAM1B,IAC1Bpf,KAAK8kC,kBAAkB3gC,KAAK2c,IAEhCzZ,EAAOrH,KAAK2kC,gBAAiBiE,GAC7BA,EAAc9mC,YACR0B,aAAyC,EAASA,EAAQ0d,aAAelhB,KAAK2f,eAAiBmB,EAAO,CACxG,MAAMvB,EAAS/d,MAAMgE,KAAKxF,KAAKsf,QAAQE,UACvCxf,KAAKqmC,yBAAyB9mB,EAAOhe,OAAS,EAAIge,EAAO,GAAG7c,WAAQjC,EACxE,CACA,OAAOmoC,EAAc9nB,KACzB,CACA,MAAM,IAAIte,MAAM,gCACpB,CACA,GAAgC,WAA5Bse,EAAMyB,IAAIjI,SAAS7V,KAAmB,CACtC,MAAM+kC,EAAgBxpC,KAAK4kC,cAAcnR,MAAMzjB,GAAMA,EAAEs2B,cAAgBxlB,IACvE,GAAI0oB,EAAe,CACf,KAAMhmC,aAAyC,EAASA,EAAQ2T,aAAc,CAC1E,KAAM3T,aAAyC,EAASA,EAAQ+iC,sBAAuB,CACnF,MAAMkD,EAAWD,EAAcxD,eACzBhmC,KAAKmhB,SAASqoB,EAAcxD,qBAC5BvlC,EACFgpC,GACAzpC,KAAKqhB,YAAYooB,EAEzB,CACAD,EAAclD,YAAYxkC,UAC1B9B,KAAKsf,QAAQhb,OAAOwc,EAAM1B,IAC1Bpf,KAAK8kC,kBAAkB3gC,KAAK2c,EAChC,CACA,MAAM0lB,EAAegD,EAAcnjC,WAAWvE,UAK9C,KAJM0B,aAAyC,EAASA,EAAQ0jC,mBAAqBV,IACjFxmC,KAAK6gB,WAAW2lB,EAAc,CAAC,IAC/BxmC,KAAKqmC,yBAAyBG,MAE5BhjC,aAAyC,EAASA,EAAQ0d,aAAelhB,KAAK2f,eAAiBmB,EAAO,CACxG,MAAMvB,EAAS/d,MAAMgE,KAAKxF,KAAKsf,QAAQE,UACvCxf,KAAKqmC,yBAAyB9mB,EAAOhe,OAAS,EAAIge,EAAO,GAAG7c,WAAQjC,EACxE,CAEA,OADAT,KAAKklC,kBACEsE,EAAclD,WACzB,CACA,MAAM,IAAI9jC,MAAM,8BACpB,CACA,MAAMknC,EAAK3pC,MAAMghB,cAAcD,EAAOtd,GAMtC,OALMA,aAAyC,EAASA,EAAQ0d,aACxDlhB,KAAKujB,cAAgBA,GACrBvjB,KAAKk2B,wBAAwB/xB,KAAKnE,KAAKujB,aAGxCmmB,CACX,CACAvD,UAAAA,CAAW1gC,GACP,MAAMkkC,EAAW3pC,KAAKglC,QACtB,IAEI,OADAhlC,KAAKglC,SAAU,EACRv/B,GACX,CAAC,QAEGzF,KAAKglC,QAAU2E,CACnB,CACJ,CACAnP,gBAAAA,CAAiBh3B,GACb,IAAIjB,EACJ,MAAMqnC,EAAmBpmC,EAAQ2H,GAAG2V,MAC9B+oB,EAAgBrmC,EAAQgC,KAAK3F,QAC7BiqC,EAAetmC,EAAQgC,KAAK1F,QAC5BiqC,EAAoBvmC,EAAQ2H,GAAG0K,SAC/Bm0B,EAAmBxmC,EAAQ2H,GAAGpH,MAC9BkmC,EAAcJ,EAC6B,QAA1CtnC,EAAKvC,KAAKsf,QAAQ2B,IAAI4oB,UAAmC,IAAPtnC,OAAgB,EAASA,EAAGG,WAC/EjC,EACN,IAAKwpC,EACD,MAAM,IAAIznC,MAAO,2BAA0BqnC,KAE/C,QAAqBppC,IAAjBqpC,EAaJ,GAAKC,GAA2C,WAAtBA,EAwBrB,CAKD,MAAM9D,EAAoBrsB,EAAgBgwB,EAAiBplC,SACrD0lC,EAAiB9vB,EAAoBpa,KAAKyf,SAASnS,YAAa24B,EAAmB8D,GACzF,GAAIE,EAAYllC,KAAO,EAAG,CAKtB,MAAOolC,EAAsBh/B,GAAMpB,EAAKmgC,GACxC,GAAsC,SAAlCD,EAAY1nB,IAAIjI,SAAS7V,KAAiB,CAC1C,MAAM2lC,EAAiBxwB,EAAgBqwB,EAAYzlC,UAC5C6lC,EAAsB7kC,GAAQuE,EAAKqgC,GAC1C,GAAIngC,EAAeogC,EAAsBF,GAKrC,YADAnqC,KAAKyf,SAAS7K,SAASy1B,EAAsB7kC,EAAM2F,EAG3D,CAEA,MAAMm/B,EAActqC,KAAKmmC,YAAW,IAAMnmC,KAAK+gB,cAAckpB,EAAa,CACtE/oB,YAAY,EACZ/J,aAAa,MAGXozB,EAA2B3wB,EAAgBgwB,EAAiBplC,SAC5D8V,EAAWF,EAAoBpa,KAAKyf,SAASnS,YAAai9B,EAA0BR,GAC1F/pC,KAAKmmC,YAAW,IAAMnmC,KAAK6gB,WAAWypB,EAAahwB,KACnDta,KAAKqmC,yBAAyBiE,EAClC,KACK,CAKD,MAAMrG,EAAejkC,KAAKmmC,YAAW,IAAM8D,EAAY9iB,MAAMrF,YAAYgoB,EAAc,CACnFvS,eAAe,EACfc,oBAAoB,MAExB,IAAK4L,EACD,MAAM,IAAIzhC,MAAO,oBAAmBsnC,KAExC,MAAMU,EAAepwB,EAAoBpa,KAAKyf,SAASnS,YAAa24B,EAAmB8D,GACjFjpB,EAAQ9gB,KAAK0nC,sBAAsB8C,GACzCxqC,KAAKmmC,YAAW,IAAMrlB,EAAMqG,MAAM2I,UAAUmU,EAAc,CACtDvM,oBAAoB,MAExB13B,KAAKqmC,yBAAyBvlB,EAClC,CACJ,KA9E0D,CAItD,MAAMmjB,EAAejkC,KAAKmmC,YAAW,IAAM8D,EAAY9iB,MAAMrF,YAAYgoB,EAAc,CACnFvS,eAAe,EACfc,oBAAoB,MAExB,IAAK4L,EACD,MAAM,IAAIzhC,MAAO,oBAAmBsnC,KAET,IAA3BG,EAAY9iB,MAAMpiB,MAElB/E,KAAK+gB,cAAckpB,EAAa,CAAE/oB,YAAY,IAElDlhB,KAAKmmC,YAAW,IAAMyD,EAAiBziB,MAAM2I,UAAUmU,EAAc,CACjElgC,MAAOimC,EACPtS,oBAAoB,MAExB13B,KAAKqmC,yBAAyBuD,GAC9B5pC,KAAK0kC,gBAAgBvgC,KAAK,CACtBkc,MAAO4jB,GAEf,MAhCIjkC,KAAKyqC,UAAU,CACXjlC,KAAM,CAAEsb,MAAOmpB,GACf9+B,GAAI,CACA2V,MAAO8oB,EACP/zB,SAAUk0B,IAoF1B,CACAU,SAAAA,CAAUjnC,GACN,MAAMgC,EAAOhC,EAAQgC,KAAKsb,MACpB3V,EAAK3H,EAAQ2H,GAAG2V,MAChB6D,EAASnhB,EAAQ2H,GAAG0K,SAC1B,GAAe,WAAX8O,EAAqB,CACrB,MAAMpB,EAAc/d,EAAK+d,YACnB5B,EAAS3hB,KAAKmmC,YAAW,IAAM,IAAI3gC,EAAKmc,QAAQ/f,KAAKsW,GAAM1S,EAAK2hB,MAAMrF,YAAY5J,EAAEkH,GAAI,CAC1FmY,eAAe,QAEmD,KAAjE/xB,aAAmC,EAASA,EAAK2hB,MAAMpiB,OACxD/E,KAAK+gB,cAAcvb,EAAM,CAAE0b,YAAY,IAE3ClhB,KAAKmmC,YAAW,KACZ,IAAK,MAAM9lB,KAASsB,EAChBxW,EAAGgc,MAAM2I,UAAUzP,EAAO,CACtBkX,cAAelX,IAAUkD,EACzBmU,oBAAoB,GAE5B,IAEJ13B,KAAKqmC,yBAAyBl7B,GAC9BwW,EAAO5f,SAASse,IACZrgB,KAAK0kC,gBAAgBvgC,KAAK,CAAEkc,SAAQ,GAE5C,KACK,CACD,OAAQ7a,EAAK+c,IAAIjI,SAAS7V,MACtB,IAAK,OACDzE,KAAKyf,SAAS/K,WAAWkF,EAAgBpU,EAAKhB,UAC9C,MACJ,IAAK,WAAY,CACb,MAAMkmC,EAAwB1qC,KAAK2kC,gBAAgBlR,MAAMlkB,GAAMA,EAAEuR,QAAUtb,IAC3E,IAAKklC,EACD,MAAM,IAAIloC,MAAM,iCAEpBkoC,EAAsB5oC,UACtB,KACJ,CACA,IAAK,SAAU,CACX,MAAM6oC,EAAsB3qC,KAAK4kC,cAAcnR,MAAMlkB,GAAMA,EAAE+2B,cAAgB9gC,IAC7E,IAAKmlC,EACD,MAAM,IAAInoC,MAAM,+BAEpBmoC,EAAoBtkC,WAAWvE,SACnC,EAEJ,MAAMmkC,EAAoBrsB,EAAgBzO,EAAG3G,SACvCgmC,EAAepwB,EAAoBpa,KAAKyf,SAASnS,YAAa24B,EAAmBthB,GACvF3kB,KAAKyf,SAAShO,QAAQjM,EAAMkH,EAAOC,WAAY69B,GAC/ChlC,EAAKmc,OAAO5f,SAASse,IACjBrgB,KAAK0kC,gBAAgBvgC,KAAK,CAAEkc,SAAQ,GAE5C,CACJ,CACAG,gBAAAA,CAAiBM,GACb/gB,MAAMygB,iBAAiBM,GACvB,MAAMyC,EAAcvjB,KAAKujB,YACpBvjB,KAAKglC,SACNzhB,IAAgBvjB,KAAKk2B,wBAAwBxzB,OAC7C1C,KAAKk2B,wBAAwB/xB,KAAKof,EAE1C,CACA8iB,wBAAAA,CAAyBvlB,GACrB/gB,MAAMygB,iBAAiBM,GACvB,MAAMyC,EAAcvjB,KAAKujB,YACrBzC,GACA9gB,KAAK2gB,sBACJ3gB,KAAKygB,iBAAiBK,IACvB9gB,KAAK0gB,qBAEJ1gB,KAAKglC,SACNzhB,IAAgBvjB,KAAKk2B,wBAAwBxzB,OAC7C1C,KAAKk2B,wBAAwB/xB,KAAKof,EAE1C,CACAsiB,cAAAA,GACI,IAAIzmB,EAAKpf,KAAKqkC,YAAYr5B,OAC1B,KAAOhL,KAAKsf,QAAQ0B,IAAI5B,IACpBA,EAAKpf,KAAKqkC,YAAYr5B,OAE1B,OAAOoU,CACX,CACA8mB,WAAAA,CAAY1iC,GACHA,IACDA,EAAU,CAAC,GAEf,IAAI4b,EAAK5b,aAAyC,EAASA,EAAQ4b,GAKnE,GAJIA,GAAMpf,KAAKsf,QAAQ0B,IAAIxd,EAAQ4b,MAC/Bxc,QAAQC,KAAM,gCAA+BW,aAAyC,EAASA,EAAQ4b,4CACvGA,OAAK3e,IAEJ2e,EAED,IADAA,EAAKpf,KAAKqkC,YAAYr5B,OACfhL,KAAKsf,QAAQ0B,IAAI5B,IACpBA,EAAKpf,KAAKqkC,YAAYr5B,OAG9B,MAAMW,EAAO,IAAIivB,GAAmB56B,KAAMof,EAAI5b,GAE9C,GADAmI,EAAKsgB,KAAK,CAAE5B,OAAQ,CAAC,EAAG+C,SAAUptB,QAC7BA,KAAKsf,QAAQ0B,IAAIrV,EAAKyT,IAAK,CAC5B,MAAM/Y,EAAa,IAAIX,EAAoBiG,EAAKwb,MAAMoL,gBAAgB5uB,IAClE3D,KAAKukC,iBAAiBpgC,KAAKR,EAAM,IACjCgI,EAAKwb,MAAMsL,kBAAkB9uB,IAC7B3D,KAAKwkC,iBAAiBrgC,KAAKR,EAAM,IACjCgI,EAAKwb,MAAMuO,QAAQ/xB,IACnB,MAAM,QAAE9D,EAAO,OAAEi5B,EAAM,OAAEnU,EAAM,MAAE5gB,GAAUJ,EAC3C3D,KAAKw6B,iBAAiB,CAClBh1B,KAAM,CAAE3F,QAASA,EAASC,QAASg5B,GACnC3tB,GAAI,CACA2V,MAAOnV,EACPkK,SAAU8O,EACV5gB,UAEN,IACF4H,EAAKwb,MAAMhF,WAAWxe,IACtB3D,KAAKouB,WAAWjqB,KAAKR,EAAM,IAC3BgI,EAAKwb,MAAMjE,YAAYvf,IACvB3D,KAAK21B,YAAYxxB,KAAKR,EAAM,IAC5BgI,EAAKwb,MAAMhE,mBAAmBxf,IAC1B3D,KAAKwD,QAAQ2qB,WACbxqB,EAAMvB,iBAGVpC,KAAK2lB,mBAAmBxhB,KAAKR,EAAM,IACnCgI,EAAKwb,MAAM7D,0BAA0B3f,IACrC3D,KAAKm2B,0BAA0BhyB,KAAKR,EAAM,IAC1CgI,EAAKwb,MAAM1E,eAAe9e,IACtB3D,KAAKglC,SAGThlC,KAAK41B,eAAezxB,KAAKR,EAAM0c,MAAM,IACrC1U,EAAKwb,MAAMxE,kBAAkBhf,IACzB3D,KAAKglC,SAGThlC,KAAKi2B,kBAAkB9xB,KAAKR,EAAM0c,MAAM,IACxC1U,EAAKwb,MAAMtE,wBAAwBlf,IAC/B3D,KAAKglC,SAGLrhC,EAAM0c,QAAUrgB,KAAKujB,aAGrBvjB,KAAKk2B,wBAAwBxzB,QAAUiB,EAAM0c,OAC7CrgB,KAAKk2B,wBAAwB/xB,KAAKR,EAAM0c,MAC5C,IACAnf,EAAME,IAAIuK,EAAKwb,MAAM2O,sBAAuBnqB,EAAKwb,MAAM6O,2BAAvD90B,EAAmF,KACnFlB,KAAKmgB,yBAAyBhc,MAAM,KAExCnE,KAAKsf,QAAQta,IAAI2G,EAAKyT,GAAI,CAAE1c,MAAOiJ,EAAMtF,cAC7C,CAGA,OADAsF,EAAKue,aACEve,CACX,CACAs9B,WAAAA,CAAYzlC,EAASsd,GACjB,IAAIve,EAAI+kB,EAAIyR,EACZ,MAAMoD,EAAmB34B,EAAQke,UAC3BwZ,EAA+C,QAA/B34B,EAAKiB,EAAQ03B,oBAAiC,IAAP34B,EAAgBA,EAAKvC,KAAKwD,QAAQk6B,oBACzF/xB,EAAO,IAAIuxB,GAAmBl9B,KAAMwD,EAAQ4b,GAAI+c,EAAkBjB,GAClE7a,EAAQ,IAAI2b,GAAcx4B,EAAQ4b,GAAI+c,EAAkBjB,EAAcl7B,KAAMA,KAAKq2B,KAAMvV,EAAOnV,EAAM,CAAE8jB,SAAUjsB,EAAQisB,WAK9H,OAJApP,EAAM4L,KAAK,CACP6B,MAAgC,QAAxBxG,EAAK9jB,EAAQsqB,aAA0B,IAAPxG,EAAgBA,EAAK9jB,EAAQ4b,GACrEiL,OAAoF,QAA3E0O,EAAKv1B,aAAyC,EAASA,EAAQ6mB,cAA2B,IAAP0O,EAAgBA,EAAK,CAAC,IAE/G1Y,CACX,CACAqnB,qBAAAA,CAAsBptB,QAAQ,IAARA,IAAAA,EAAW,CAAC,IAC9B,MAAMwG,EAAQ9gB,KAAKkmC,cAEnB,OADAlmC,KAAK6gB,WAAWC,EAAOxG,GAChBwG,CACX,CACAioB,SAAAA,CAAU1oB,GACN,IAAI9d,EACJ,OAA4G,QAApGA,EAAKf,MAAMgE,KAAKxF,KAAKsf,QAAQE,UAAUiU,MAAM3S,GAAUA,EAAMpe,MAAMykB,MAAMmQ,cAAcjX,YAA4B,IAAP9d,OAAgB,EAASA,EAAGG,KACpJ,ECt3CG,SAAS86B,GAAgBpe,EAAIme,EAAeqN,EAAiBC,EAA0BC,EAA0BzrC,QAA3D,IAAVurC,IAAAA,EAAa,CAAC,QAAsB,IAAnBC,IAAAA,EAAsB,CAAC,GACvF,MAAME,EAAqC,iBAAlBxN,EACnBqN,EAAWrN,QACX98B,EACAuqC,EAA8C,iBAAlBzN,EAC5BsN,EAAoBtN,QACpB98B,EACN,GAAIsqC,GAAaC,EACb,MAAM,IAAIxoC,MAAO,kBAAiB4c,kBAAmBme,4DAEzD,GAAIyN,EAAoB,CACpB,IAAKF,EACD,MAAM,IAAItoC,MAAO,kBAAiB4c,+BAAgCme,6EAEtE,OAAOuN,EAAyBtN,gBAAgBpe,EAAIme,EAAeyN,EACvE,CACA,IAAKD,EAAW,CACZ,GAAI1rC,EACA,OAAOA,IAEX,MAAM,IAAImD,MAAO,kBAAiB4c,qBAAsBme,cAC5D,CACA,OAAO,IAAIwN,EAAU3rB,EAAIme,EAC7B,CCjBO,MAAM0N,WAA0B9rB,GACnC,eAAI7R,GACA,OAAOtN,KAAKyf,SAASnS,WACzB,CACA,eAAIA,CAAY5K,GACZ1C,KAAKyf,SAASnS,YAAc5K,CAChC,CACA,WAAIc,GACA,OAAOxD,KAAKokC,QAChB,CACA,gBAAI1nB,GACA,OAAO1c,KAAKskC,aAChB,CACA,gBAAI5nB,CAAaha,GACb1C,KAAKskC,cAAgB5hC,CACzB,CACA/C,WAAAA,CAAY6D,GACRzD,MAAM,CACF8Z,cAAerW,EAAQqW,cACvB/I,mBAAoBtN,EAAQsN,mBAC5BxD,YAAa9J,EAAQ8J,YACrB8D,OAAQ5N,EAAQ4N,OAChBwO,oBAAqBpc,EAAQoc,sBAEjC5f,KAAKkrC,qBAAuB,IAAIjoC,EAChCjD,KAAK4hB,oBAAsB5hB,KAAKkrC,qBAAqBvnC,MACrD3D,KAAK8kC,kBAAoB,IAAI7hC,EAC7BjD,KAAK4iB,iBAAmB5iB,KAAK8kC,kBAAkBnhC,MAC/C3D,KAAK+kC,eAAiB,IAAI9hC,EAC1BjD,KAAK0iB,cAAgB1iB,KAAK+kC,eAAephC,MACzC3D,KAAKq7B,wBAA0B,IAAIp4B,EACnCjD,KAAK8iB,uBAAyB9iB,KAAKq7B,wBAAwB13B,MAC3D3D,KAAKokC,SAAW5gC,EAChBxD,KAAK+F,eAAe/F,KAAK+kC,eAAgB/kC,KAAK8kC,kBAAmB9kC,KAAKq7B,wBAAyBr7B,KAAKggB,UAAUrc,IAC1G3D,KAAK+kC,eAAe5gC,KAAKR,EAAM,IAC/B3D,KAAK8f,aAAanc,IAClB3D,KAAK8kC,kBAAkB3gC,KAAKR,EAAM,IAClC3D,KAAKkgB,mBAAmBvc,IACxB3D,KAAKq7B,wBAAwBl3B,KAAKR,EAAM,KAEvC3D,KAAKwD,QAAQonC,aACd5qC,KAAKwD,QAAQonC,WAAa,CAAC,GAE1B5qC,KAAKwD,QAAQqnC,sBACd7qC,KAAKwD,QAAQqnC,oBAAsB,CAAC,EAE5C,CACAhpB,aAAAA,CAAcre,GACV,MAAM2nC,EAAuD,iBAAxB3nC,EAAQ8J,aACzCtN,KAAKyf,SAASnS,cAAgB9J,EAAQ8J,YAC1CtN,KAAKokC,SAAW/hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtiB,KAAKwD,SAAUA,GAC3D2nC,IACAnrC,KAAKyf,SAASnS,YAAc9J,EAAQ8J,aAExCtN,KAAK6U,OAAO7U,KAAKyf,SAAS/V,MAAO1J,KAAKyf,SAAS9V,QAAQ,EAC3D,CACAmY,WAAAA,CAAYzB,GACRrgB,KAAKqhB,YAAYhB,EACrB,CAMArF,MAAAA,GACI,IAAIzY,EAEJ,MAAO,CACH4lC,KAFSnoC,KAAKyf,SAASnD,YAGvBiH,YAAyC,QAA3BhhB,EAAKvC,KAAK0f,mBAAgC,IAAPnd,OAAgB,EAASA,EAAG6c,GAErF,CACA/S,UAAAA,CAAWgU,EAAO5U,GACdzL,KAAKyf,SAAS1N,eAAe6H,EAAgByG,EAAM7b,SAAUiH,EACjE,CACA2V,SAAAA,CAAUf,GACNrgB,KAAKsf,QAAQvd,SAAQ,CAACW,EAAOjB,KACzBiB,EAAMA,MAAM0e,UAAUf,IAAU3d,EAAMA,MAAM,GAEpD,CACAqf,KAAAA,GACI,IAAIxf,EACwB,QAA3BA,EAAKvC,KAAK0f,mBAAgC,IAAPnd,GAAyBA,EAAGwf,OACpE,CACAjF,QAAAA,CAASsuB,GACLprC,KAAKsD,QACL,MAAM,KAAE6kC,EAAI,YAAE5kB,GAAgB6nB,EAC9B,IACI,MAAMC,EAAQ,GAER3hC,EAAQ1J,KAAK0J,MACbC,EAAS3J,KAAK2J,OA6BpB,GA5BA3J,KAAKyf,SAASjD,YAAY2rB,EAAM,CAC5BrrB,SAAWtE,IACP,IAAIjW,EAAI+kB,EACR,MAAM,KAAE5mB,GAAS8X,EACX7M,EAAO6xB,GAAgB98B,EAAK0e,GAAI1e,EAAKghB,UAA8C,QAAlCnf,EAAKvC,KAAKwD,QAAQonC,kBAA+B,IAAProC,EAAgBA,EAAK,CAAC,EAA+C,QAA3C+kB,EAAKtnB,KAAKwD,QAAQqnC,2BAAwC,IAAPvjB,EAAgBA,EAAK,CAAC,EAAGtnB,KAAKwD,QAAQ8nC,0BAC9M,CACE9N,gBAAiBx9B,KAAKwD,QAAQ8nC,0BACzB9N,sBAEP/8B,GAcN,OAbA4qC,EAAMvnC,MAAK,IAAM6H,EAAKsgB,KAAK,CACvB5B,OAAQ3pB,EAAK2pB,OACb9S,aAAc7W,EAAK6W,aACnBC,aAAc9W,EAAK8W,aACnBC,cAAe/W,EAAK+W,cACpBC,cAAehX,EAAKgX,cACpB3L,SAAUrL,EAAKqL,SACfC,OAAQtL,EAAKsL,KACbohB,SAAUptB,KACVsgB,UAAW9H,EAAK/M,YAEpBzL,KAAK+kC,eAAe5gC,KAAKwH,GACzB3L,KAAKurC,cAAc5/B,GACZA,CAAI,IAGnB3L,KAAK6U,OAAOnL,EAAOC,GAAQ,GAC3B0hC,EAAMtpC,SAASypC,GAAMA,MACM,iBAAhBjoB,EAA0B,CACjC,MAAMlD,EAAQrgB,KAAKmhB,SAASoC,GACxBlD,GACArgB,KAAKwgB,iBAAiBH,EAE9B,CACJ,CACA,MAAOujB,GAKH,IAAK,MAAM9iB,KAAS9gB,KAAKuf,OACrBuB,EAAMhf,UACN9B,KAAKsf,QAAQhb,OAAOwc,EAAM1B,IAC1Bpf,KAAK8kC,kBAAkB3gC,KAAK2c,GAShC,MANA9gB,KAAKsD,QAMCsgC,CACV,CACA5jC,KAAKkrC,qBAAqB/mC,MAC9B,CACAb,KAAAA,GACI,MAAMulC,EAAiB7oC,KAAK0f,YACtBH,EAAS/d,MAAMgE,KAAKxF,KAAKsf,QAAQE,UACvC,IAAK,MAAMsB,KAASvB,EAChBuB,EAAMza,WAAWvE,UACjB9B,KAAK+gB,cAAcD,EAAMpe,MAAO,CAAEwe,YAAY,IAE9C2nB,GACA7oC,KAAKwgB,sBAAiB/f,GAE1BT,KAAKyf,SAASnc,OAClB,CACA2e,SAAAA,CAAU5B,EAAO7c,GACb,IAAIjB,EACJ,IAAI6mC,EACJ,MAAMnF,EAAejkC,KAAKyf,SAASpY,OAAOgZ,GACpC2lB,EAAgE,QAA9CzjC,EAAKvC,KAAKsf,QAAQ2B,IAAIzd,EAAQioC,kBAA+B,IAAPlpC,OAAgB,EAASA,EAAGG,MAC1G,IAAKsjC,EACD,MAAM,IAAIxjC,MAAO,mBAAkBgB,EAAQioC,4BAE/C,MAAM9mB,EAASzF,GAAS1b,EAAQ+W,WAChC,GAAe,WAAXoK,EACA,MAAM,IAAIniB,MAAO,GAAEmiB,gCAElB,CACD,MAAMrK,EAAWV,EAAgBosB,EAAexhC,SAChD4kC,EAAmBhvB,EAAoBpa,KAAKyf,SAASnS,YAAagN,EAAUqK,EAChF,CACA3kB,KAAK6gB,WAAWojB,EAAcmF,EAAkB5lC,EAAQuB,KAC5D,CACAid,QAAAA,CAASxe,GACL,IAAIjB,EAAI+kB,EAAIyR,EAAIuE,EAAIqJ,EAAIC,EACxB,IAAIwC,EAA+C,QAA3B7mC,EAAKiB,EAAQ8W,gBAA6B,IAAP/X,EAAgBA,EAAK,CAAC,GACjF,GAAgC,QAA3B+kB,EAAK9jB,EAAQqS,gBAA6B,IAAPyR,OAAgB,EAASA,EAAGwhB,eAAgB,CAChF,MAAM9C,EAA8E,QAA5DjN,EAAK/4B,KAAKsf,QAAQ2B,IAAIzd,EAAQqS,SAASizB,uBAAoC,IAAP/P,OAAgB,EAASA,EAAGr2B,MACxH,IAAKsjC,EACD,MAAM,IAAIxjC,MAAO,mBAAkBgB,EAAQqS,SAASizB,iCAExD,MAAMnkB,EAASzF,GAAS1b,EAAQqS,SAAS0E,WACzC,GAAe,WAAXoK,EACA,MAAM,IAAIniB,MAAO,GAAEmiB,gCAElB,CACD,MAAMrK,EAAWV,EAAgBosB,EAAexhC,SAChD4kC,EAAmBhvB,EAAoBpa,KAAKyf,SAASnS,YAAagN,EAAUqK,EAChF,CACJ,CACA,MAAMhZ,EAAO6xB,GAAgBh6B,EAAQ4b,GAAI5b,EAAQke,UAA8C,QAAlC4b,EAAKt9B,KAAKwD,QAAQonC,kBAA+B,IAAPtN,EAAgBA,EAAK,CAAC,EAA+C,QAA3CqJ,EAAK3mC,KAAKwD,QAAQqnC,2BAAwC,IAAPlE,EAAgBA,EAAK,CAAC,EAAG3mC,KAAKwD,QAAQ8nC,0BACpN,CACE9N,gBAAiBx9B,KAAKwD,QAAQ8nC,0BACzB9N,sBAEP/8B,GAeN,OAdAkL,EAAKsgB,KAAK,CACN5B,OAAkC,QAAzBuc,EAAKpjC,EAAQ6mB,cAA2B,IAAPuc,EAAgBA,EAAK,CAAC,EAChErvB,aAAc/T,EAAQ+T,aACtBC,aAAchU,EAAQgU,aACtBC,cAAejU,EAAQiU,cACvBC,cAAelU,EAAQkU,cACvB3L,SAAUvI,EAAQuI,SAClBC,OAAQxI,EAAQwI,KAChBohB,SAAUptB,KACVsgB,WAAW,IAEftgB,KAAKurC,cAAc5/B,GACnB3L,KAAK6gB,WAAWlV,EAAMy9B,EAAkB5lC,EAAQuB,MAChD/E,KAAKwgB,iBAAiB7U,GACfA,CACX,CACA4/B,aAAAA,CAAclrB,GACV,MAAMha,EAAa,IAAIX,EAAoB2a,EAAMkC,IAAIiH,kBAAkB7lB,IAC9DA,EAAMilB,WAGX5oB,KAAKsf,QAAQvd,SAAS2pC,IAClB,MAAM5qB,EAAQ4qB,EAAUhpC,MACpBoe,IAAUT,EACVS,EAAMM,WAAU,GAGhBN,EAAMM,WAAU,EACpB,GACF,KAENphB,KAAKsf,QAAQta,IAAIqb,EAAMjB,GAAI,CACvB1c,MAAO2d,EACPha,cAER,CACAokC,SAAAA,CAAUzE,EAAgBnmC,EAAS8kB,GAC/B,MAAMslB,EAAcjqC,KAAKmhB,SAASthB,GAClC,IAAKoqC,EACD,MAAM,IAAIznC,MAAM,qBAEpB,MAAMyjC,EAAoBrsB,EAAgBosB,EAAexhC,SACnD0lC,EAAiB9vB,EAAoBpa,KAAKyf,SAASnS,YAAa24B,EAAmBthB,IAClFwlB,EAAsBh/B,GAAMpB,EAAKmgC,GAClCE,EAAiBxwB,EAAgBqwB,EAAYzlC,UAC5C6lC,EAAsB7kC,GAAQuE,EAAKqgC,GAC1C,GAAIngC,EAAeogC,EAAsBF,GAKrC,YADAnqC,KAAKyf,SAAS7K,SAASy1B,EAAsB7kC,EAAM2F,GAIvD,MAAMm/B,EAActqC,KAAK+gB,cAAckpB,EAAa,CAChD/oB,YAAY,EACZ/J,aAAa,IAGXozB,EAA2B3wB,EAAgBosB,EAAexhC,SAC1D8V,EAAWF,EAAoBpa,KAAKyf,SAASnS,YAAai9B,EAA0B5lB,GAC1F3kB,KAAK6gB,WAAWypB,EAAahwB,EACjC,CACA+G,WAAAA,CAAYP,GACR/gB,MAAMshB,YAAYP,EACtB,CACAhf,OAAAA,GACI/B,MAAM+B,UACN9B,KAAKkrC,qBAAqBppC,SAC9B,EC5QG,MAAM6pC,WAA2BrtB,GACpC,UAAIqD,GACA,OAAO3hB,KAAKwW,UAAU7D,UAC1B,CACA,WAAInP,GACA,OAAOxD,KAAKokC,QAChB,CACA,UAAI7iC,GACA,OAAOvB,KAAK60B,QAAQ9vB,IACxB,CACA,eAAIuI,GACA,OAAOtN,KAAKwW,UAAUlJ,WAC1B,CACA,aAAIkJ,GACA,OAAOxW,KAAK4rC,UAChB,CACA,aAAIp1B,CAAU9T,GACV1C,KAAK4rC,WAAalpC,EAClB1C,KAAK6rC,2BAA2BnpC,MAAQ,IAAIgD,EAAoB1F,KAAK4rC,WAAWn9B,cAAa,KACzFzO,KAAK8rC,mBAAmB3nC,UAAK1D,EAAU,IACvCT,KAAK4rC,WAAWj9B,cAAcvK,GAAMpE,KAAK0O,cAAcvK,KAAKC,KAAKpE,KAAK4rC,WAAW/8B,iBAAiBzK,GAAMpE,KAAK4O,iBAAiBzK,KAAKC,KAC3I,CACA,eAAIsH,GACA,OAAO1L,KAAKwW,UAAU9K,WAC1B,CACA,eAAIG,GACA,OAAO7L,KAAKwW,UAAU3K,WAC1B,CACA,UAAIlC,GACA,OAAO3J,KAAKwW,UAAUlJ,cAAgBf,EAAYkB,WAC5CzN,KAAKwW,UAAUvJ,eACfjN,KAAKwW,UAAUzR,IACzB,CACA,SAAI2E,GACA,OAAO1J,KAAKwW,UAAUlJ,cAAgBf,EAAYkB,WAC5CzN,KAAKwW,UAAUzR,KACf/E,KAAKwW,UAAUvJ,cACzB,CACAtN,WAAAA,CAAY6D,GACRzD,MAAMyD,EAAQqW,cAAerW,EAAQoc,qBACrC5f,KAAK6rC,2BAA6B,IAAI1lC,EACtCnG,KAAK60B,QAAU,IAAI/vB,IACnB9E,KAAKkrC,qBAAuB,IAAIjoC,EAChCjD,KAAK4hB,oBAAsB5hB,KAAKkrC,qBAAqBvnC,MACrD3D,KAAK0O,cAAgB,IAAIzL,EACzBjD,KAAK2O,aAAe3O,KAAK0O,cAAc/K,MACvC3D,KAAK4O,iBAAmB,IAAI3L,EAC5BjD,KAAK6O,gBAAkB7O,KAAK4O,iBAAiBjL,MAC7C3D,KAAK8rC,mBAAqB,IAAI7oC,EAC9BjD,KAAKogB,kBAAoBpgB,KAAK8rC,mBAAmBnoC,MACjD3D,KAAKokC,SAAW5gC,EACXA,EAAQonC,aACTpnC,EAAQonC,WAAa,CAAC,GAErBpnC,EAAQqnC,sBACTrnC,EAAQqnC,oBAAsB,CAAC,GAEnC7qC,KAAKwW,UAAY,IAAI1J,EAAU9M,KAAKwE,QAAShB,GAC7CxD,KAAK+F,eAAe/F,KAAK0O,cAAe1O,KAAKkrC,qBAAsBlrC,KAAK4O,iBAAkB5O,KAAK8rC,mBACnG,CACAjqB,aAAAA,CAAcre,GACV,MAAM2nC,EAAuD,iBAAxB3nC,EAAQ8J,aACzCtN,KAAKwD,QAAQ8J,cAAgB9J,EAAQ8J,YACzCtN,KAAKokC,SAAW/hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtiB,KAAKwD,SAAUA,GAC3D2nC,IACAnrC,KAAKwW,UAAUlJ,YAAc9J,EAAQ8J,aAEzCtN,KAAKwW,UAAU3B,OAAO7U,KAAKwW,UAAUzR,KAAM/E,KAAKwW,UAAUvJ,eAC9D,CACA8U,KAAAA,GACI,IAAIxf,EACyB,QAA5BA,EAAKvC,KAAK40B,oBAAiC,IAAPryB,GAAyBA,EAAGwf,OACrE,CACAE,SAAAA,CAAUzc,EAAM2F,GACZnL,KAAKwW,UAAU5B,SAASpP,EAAM2F,EAClC,CACAkB,UAAAA,CAAWgU,EAAO5U,GACd,MAAM1H,EAAQ/D,KAAK2hB,OAAO3d,QAAQqc,GAClCrgB,KAAKwW,UAAUzE,eAAehO,EAAO0H,EACzC,CACA2V,SAAAA,CAAUf,EAAO0rB,GACb/rC,KAAK40B,aAAevU,EACpBrgB,KAAK2hB,OACArP,QAAQ05B,GAAMA,IAAM3rB,IACpBte,SAASiqC,IACVA,EAAEzpB,IAAItC,mBAAmB9b,KAAK,CAAE2kB,UAAU,IACrCijB,GACDC,EAAEjqB,OACN,IAEJ1B,EAAMkC,IAAItC,mBAAmB9b,KAAK,CAAE2kB,UAAU,IACzCijB,GACD1rB,EAAM0B,OAEd,CACAD,WAAAA,CAAYzB,EAAO7O,GACf,MAAM5D,EAAO5N,KAAK60B,QAAQ5T,IAAIZ,EAAMjB,IACpC,IAAKxR,EACD,MAAM,IAAIpL,MAAO,2BAA0B6d,EAAMjB,MAErDxR,EAAK9L,UACL9B,KAAK60B,QAAQvwB,OAAO+b,EAAMjB,IAC1B,MAAMrb,EAAQ/D,KAAK2hB,OAAOlX,WAAWuF,GAAMA,IAAMqQ,IAC7BrgB,KAAKwW,UAAU9B,WAAW3Q,EAAOyN,GACzC1P,UACZ,MAAM6f,EAAS3hB,KAAK2hB,OAChBA,EAAOpgB,OAAS,GAChBvB,KAAKohB,UAAUO,EAAOA,EAAOpgB,OAAS,GAE9C,CACA4f,QAAAA,CAAS/B,GACL,OAAOpf,KAAK2hB,OAAO8R,MAAM9nB,GAASA,EAAKyT,KAAOA,GAClD,CACA4C,QAAAA,CAASxe,GACL,IAAIjB,EAAI+kB,EAAIyR,EACZ,GAAI/4B,KAAK60B,QAAQ7T,IAAIxd,EAAQ4b,IACzB,MAAM,IAAI5c,MAAO,SAAQgB,EAAQ4b,qBAErC,MAAMzT,EAAO6xB,GAAgBh6B,EAAQ4b,GAAI5b,EAAQke,UAA8C,QAAlCnf,EAAKvC,KAAKwD,QAAQonC,kBAA+B,IAAProC,EAAgBA,EAAK,CAAC,EAA+C,QAA3C+kB,EAAKtnB,KAAKwD,QAAQqnC,2BAAwC,IAAPvjB,EAAgBA,EAAK,CAAC,EAAGtnB,KAAKwD,QAAQyoC,iBACpN,CACEzO,gBAAiBx9B,KAAKwD,QAAQyoC,iBAAiBzO,sBAEjD/8B,GACNkL,EAAK2B,YAActN,KAAKwW,UAAUlJ,YAClC3B,EAAKsgB,KAAK,CACN5B,OAAkC,QAAzB0O,EAAKv1B,EAAQ6mB,cAA2B,IAAP0O,EAAgBA,EAAK,CAAC,EAChErtB,YAAalI,EAAQkI,YACrBG,YAAarI,EAAQqI,YACrBG,KAAMxI,EAAQwI,KACdD,SAAUvI,EAAQuI,SAClBqhB,SAAUptB,OAEd,MAAM+E,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAO2H,EAAOC,WAChE5I,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQtD,EAIlE,OAHAT,KAAKwW,UAAU/E,QAAQ9F,EAAM5G,EAAMhB,GACnC/D,KAAKksC,UAAUvgC,GACf3L,KAAKohB,UAAUzV,GACRA,CACX,CACAkJ,MAAAA,CAAOnL,EAAOC,GACV,MAAO5E,EAAMkI,GAAkBjN,KAAKwW,UAAUlJ,cAAgBf,EAAYkB,WACpE,CAAC/D,EAAOC,GACR,CAACA,EAAQD,GACf1J,KAAKwW,UAAU3B,OAAO9P,EAAMkI,EAChC,CACAi/B,SAAAA,CAAUvgC,GACN,MAAMtF,EAAasF,EAAK4W,IAAIiH,kBAAkB7lB,IACrCA,EAAMilB,WAGX5oB,KAAKohB,UAAUzV,GAAM,EAAK,IAE9B3L,KAAK60B,QAAQ7vB,IAAI2G,EAAKyT,GAAI/Y,EAC9B,CACA2U,MAAAA,GACI,IAAIzY,EAYJ,MAAO,CACH+O,MAZUtR,KAAKwW,UACd7D,WACA/Q,KAAI,CAAC+J,EAAMvB,KAEL,CACHrF,KAFS/E,KAAKwW,UAAUrE,YAAY/H,GAGpC1J,KAAMiL,EAAKqP,SACXhP,OAAQL,EAAKK,KACbD,SAAUJ,EAAKI,aAKnBorB,WAAyC,QAA5B50B,EAAKvC,KAAK40B,oBAAiC,IAAPryB,OAAgB,EAASA,EAAG6c,GAC7Era,KAAM/E,KAAKwW,UAAUzR,KACrBuI,YAAatN,KAAKwW,UAAUlJ,YAEpC,CACAwP,QAAAA,CAASqvB,GACLnsC,KAAKsD,QACL,MAAM,MAAEgO,EAAK,YAAEhE,EAAW,KAAEvI,EAAI,WAAEoyB,GAAegV,EAC3Cd,EAAQ,GAER3hC,EAAQ1J,KAAK0J,MACbC,EAAS3J,KAAK2J,OAyCpB,GAxCA3J,KAAKwW,UAAY,IAAI1J,EAAU9M,KAAKwE,QAAS,CACzC8I,cACAwD,mBAAoB9Q,KAAKwD,QAAQsN,mBACjCO,WAAY,CACRtM,OACAuM,MAAOA,EAAM1P,KAAK+J,IACd,IAAIpJ,EAAI+kB,EACR,MAAM5mB,EAAOiL,EAAKjL,KAClB,GAAIV,KAAK60B,QAAQ7T,IAAItgB,EAAK0e,IACtB,MAAM,IAAI5c,MAAO,SAAQ9B,EAAK0e,qBAElC,MAAMiB,EAAQmd,GAAgB98B,EAAK0e,GAAI1e,EAAKghB,UAA8C,QAAlCnf,EAAKvC,KAAKwD,QAAQonC,kBAA+B,IAAProC,EAAgBA,EAAK,CAAC,EAA+C,QAA3C+kB,EAAKtnB,KAAKwD,QAAQqnC,2BAAwC,IAAPvjB,EAAgBA,EAAK,CAAC,EAAGtnB,KAAKwD,QAAQyoC,iBAC/M,CACEzO,gBAAiBx9B,KAAKwD,QAAQyoC,iBACzBzO,sBAEP/8B,GAkBN,OAjBA4qC,EAAMvnC,MAAK,KACP,IAAIvB,EACJ8d,EAAM4L,KAAK,CACP5B,OAA+B,QAAtB9nB,EAAK7B,EAAK2pB,cAA2B,IAAP9nB,EAAgBA,EAAK,CAAC,EAC7DmJ,YAAahL,EAAKgL,YAClBG,YAAanL,EAAKmL,YAClBG,KAAML,EAAKK,KACXD,SAAUJ,EAAKI,SACfqhB,SAAUptB,MACZ,IAENqgB,EAAM/S,YAAcA,EACpBtN,KAAKksC,UAAU7rB,GACfrX,YAAW,KAEPhJ,KAAK0O,cAAcvK,KAAKkc,EAAM,GAC/B,GACI,CAAEtb,KAAM4G,EAAK5G,KAAM4G,KAAM0U,EAAO,OAInDrgB,KAAK6U,OAAOnL,EAAOC,GACnB0hC,EAAMtpC,SAASypC,GAAMA,MACK,iBAAfrU,EAAyB,CAChC,MAAM9W,EAAQrgB,KAAKmhB,SAASgW,GACxB9W,GACArgB,KAAKohB,UAAUf,EAEvB,CACArgB,KAAKkrC,qBAAqB/mC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAM+C,KAAcrG,KAAK60B,QAAQrV,SAClCnZ,EAAWvE,UAGf,IADA9B,KAAK60B,QAAQvxB,QACNtD,KAAKwW,UAAUjV,OAAS,GAAG,CACjBvB,KAAKwW,UAAU9B,WAAW,EAAGhI,EAAOC,YAAY,GACxD7K,SACT,CACJ,CACAA,OAAAA,GACI,IAAK,MAAMuE,KAAcrG,KAAK60B,QAAQrV,SAClCnZ,EAAWvE,UAEf9B,KAAK60B,QAAQvxB,QACb,MAAMgO,EAAQtR,KAAKwW,UAAU7D,WAC7B3S,KAAK6rC,2BAA2B/pC,UAChC9B,KAAKwW,UAAU1U,UACf,IAAK,MAAM6J,KAAQ2F,EACf3F,EAAK7J,UAET/B,MAAM+B,SACV,EC/PG,MAAMsqC,WAAsB1mC,EAC/B,WAAIlB,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,GACII,QACAC,KAAKqsC,cdS+BhQ,GAAyB,CACjE3yB,MAAO,KACPC,OAAQ,KACR8yB,QAAS,YACTpf,KAAM,oEcZFrd,KAAKssC,edciCjQ,GAAyB,CACnE3yB,MAAO,KACPC,OAAQ,KACR8yB,QAAS,YACTpf,KAAM,qEcjBFrd,KAAKqG,WAAa,IAAIF,EACtBnG,KAAKusC,OAAS,CAAEhqB,IAAK,MACrBviB,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKwE,QAAQgD,UAAY,iBACzBxH,KAAK48B,SAAWz0B,SAAS2K,cAAc,QACvC9S,KAAKwsC,UAAYrkC,SAAS2K,cAAc,OACxC9S,KAAKwsC,UAAUhlC,UAAY,4BAC3BxH,KAAKwE,QAAQ2M,YAAYnR,KAAKwsC,WAC9BxsC,KAAKwE,QAAQ2M,YAAYnR,KAAK48B,UAC9B58B,KAAK+F,eAAenB,EAAsB5E,KAAKue,SAAU,SAAS,KAC9D,IAAIhc,EACuB,QAA1BA,EAAKvC,KAAKusC,OAAOhqB,WAAwB,IAAPhgB,GAAyBA,EAAGipB,aAAaxrB,KAAKusC,OAAOhqB,IAAIkJ,WAAW,IAE/G,CACAQ,IAAAA,CAAK5B,GACDrqB,KAAKusC,OAAOhqB,IAAM8H,EAAO9H,IACzBviB,KAAK48B,SAAS1L,YAAc7G,EAAOyD,MACnC9tB,KAAKysC,aACLzsC,KAAKqG,WAAW3D,MAAQ2nB,EAAO9H,IAAI4I,sBAAqB,KACpDnrB,KAAKysC,YAAY,GAEzB,CACAA,UAAAA,GACI,IAAIlqC,EACJ,MAAMkpB,KAA2C,QAA1BlpB,EAAKvC,KAAKusC,OAAOhqB,WAAwB,IAAPhgB,OAAgB,EAASA,EAAGkpB,YACrFlkB,EAAYvH,KAAKwsC,UAAW,aAAc/gB,GACtCA,GACIzrB,KAAKwsC,UAAUplC,SAASpH,KAAKssC,iBAC7BtsC,KAAKssC,eAAejlC,SAEnBrH,KAAKwsC,UAAUplC,SAASpH,KAAKqsC,gBAC9BrsC,KAAKwsC,UAAUr7B,YAAYnR,KAAKqsC,iBAIhCrsC,KAAKwsC,UAAUplC,SAASpH,KAAKqsC,gBAC7BrsC,KAAKqsC,cAAchlC,SAElBrH,KAAKwsC,UAAUplC,SAASpH,KAAKssC,iBAC9BtsC,KAAKwsC,UAAUr7B,YAAYnR,KAAKssC,gBAG5C,CACAliB,MAAAA,CAAOuB,GACH,CAEJ7pB,OAAAA,GACI9B,KAAKqG,WAAWvE,UAChB/B,MAAM+B,SACV,ECnDJ,MAAMmd,GAAelU,IACd,MAAM2hC,WAAsBxe,GAC/BvuB,WAAAA,CAAY6D,GACRzD,MAAMyD,EAAQ4pB,SAAU5pB,EAAQ4b,GAAI5b,EAAQke,UAAWle,EAAQupB,gBAAiBvpB,EAAQ8J,YAAa9J,EAAQioB,WAAYjoB,EAAQ2qB,YACjInuB,KAAKwD,QAAUA,CACnB,CACAmqB,gBAAAA,GACI,OAAO3tB,KAAKwD,QAAQiqB,IACxB,CACAI,kBAAAA,GACI,OAAO7tB,KAAKwD,QAAQqpB,MACxB,EAEG,MAAM8f,WAA0BruB,GACnC,MAAIc,GACA,OAAOpf,KAAKqf,GAChB,CACA,UAAIsC,GACA,OAAO3hB,KAAK4sC,SAASh2B,UACzB,CACA,YAAIg2B,CAASlqC,GACT1C,KAAK6sC,UAAYnqC,EACjB1C,KAAKoG,YAAY1D,MAAQ,IAAIgD,EAAoB1F,KAAK6sC,UAAUj6B,aAAY,KACxE5S,KAAK8rC,mBAAmB3nC,UAAK1D,EAAU,IACvCT,KAAK6sC,UAAUl+B,cAAcvK,GAAMpE,KAAK0O,cAAcvK,KAAKC,KAAKpE,KAAK6sC,UAAUh+B,iBAAiBzK,GAAMpE,KAAK4O,iBAAiBzK,KAAKC,KACzI,CACA,YAAIwoC,GACA,OAAO5sC,KAAK6sC,SAChB,CACA,eAAInhC,GACA,OAAO1L,KAAK4sC,SAASlhC,WACzB,CACA,eAAIG,GACA,OAAO7L,KAAK4sC,SAAS/gC,WACzB,CACA,UAAIlC,GACA,OAAO3J,KAAK4sC,SAASt/B,cAAgBf,EAAYkB,WAC3CzN,KAAK4sC,SAAS3/B,eACdjN,KAAK4sC,SAAS7nC,IACxB,CACA,SAAI2E,GACA,OAAO1J,KAAK4sC,SAASt/B,cAAgBf,EAAYkB,WAC3CzN,KAAK4sC,SAAS7nC,KACd/E,KAAK4sC,SAAS3/B,cACxB,CACA,WAAIzJ,GACA,OAAOxD,KAAKokC,QAChB,CACAzkC,WAAAA,CAAY6D,GACRzD,MAAMyD,EAAQqW,cAAerW,EAAQoc,qBACrC5f,KAAKqf,IAAMJ,GAAajU,OACxBhL,KAAKoG,YAAc,IAAID,EACvBnG,KAAK8sC,iBAAmB,IAAIhoC,IAC5B9E,KAAKkrC,qBAAuB,IAAIjoC,EAChCjD,KAAK4hB,oBAAsB5hB,KAAKkrC,qBAAqBvnC,MACrD3D,KAAK8rC,mBAAqB,IAAI7oC,EAC9BjD,KAAKogB,kBAAoBpgB,KAAK8rC,mBAAmBnoC,MACjD3D,KAAKouB,WAAa,IAAInrB,EACtBjD,KAAKmiB,UAAYniB,KAAKouB,WAAWzqB,MACjC3D,KAAK0O,cAAgB,IAAIzL,EACzBjD,KAAK2O,aAAe3O,KAAK0O,cAAc/K,MACvC3D,KAAK4O,iBAAmB,IAAI3L,EAC5BjD,KAAK6O,gBAAkB7O,KAAK4O,iBAAiBjL,MAC7C3D,KAAK+F,eAAe/F,KAAK8rC,mBAAoB9rC,KAAKkrC,qBAAsBlrC,KAAKouB,WAAYpuB,KAAK0O,cAAe1O,KAAK4O,kBAClH5O,KAAKokC,SAAW5gC,EACXA,EAAQonC,aACTpnC,EAAQonC,WAAa,CAAC,GAErBpnC,EAAQqnC,sBACTrnC,EAAQqnC,oBAAsB,CAAC,GAEnC7qC,KAAK4sC,SAAW,IAAIr2B,EAASvW,KAAKwE,QAAS,CAEvC8I,YAAaf,EAAY8I,WAE7BrV,KAAK+F,eAAe/F,KAAKoG,YAC7B,CACAiG,UAAAA,CAAWgU,EAAO5U,GACd,MAAM1H,EAAQ/D,KAAK2hB,OAAO3d,QAAQqc,GAClCrgB,KAAK4sC,SAAS76B,eAAehO,EAAO0H,EACxC,CACAsW,KAAAA,GACI,CAEJF,aAAAA,CAAcre,GACVxD,KAAKokC,SAAW/hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtiB,KAAKwD,SAAUA,EACnE,CACAwe,QAAAA,CAASxe,GACL,IAAIjB,EAAI+kB,EAAIyR,EAAIuE,EAChB,MAAM7P,EAAO+P,GAAgBh6B,EAAQ4b,GAAI5b,EAAQke,UAA8C,QAAlCnf,EAAKvC,KAAKwD,QAAQonC,kBAA+B,IAAProC,EAAgBA,EAAK,CAAC,EAA+C,QAA3C+kB,EAAKtnB,KAAKwD,QAAQqnC,2BAAwC,IAAPvjB,EAAgBA,EAAK,CAAC,EAAGtnB,KAAKwD,QAAQyoC,iBACpN,CACEzO,gBAAiBx9B,KAAKwD,QAAQyoC,iBAAiBxe,KAAK+P,sBAEtD/8B,GACN,IAAIosB,EAEAA,EADArpB,EAAQupB,gBACCyQ,GAAgBh6B,EAAQ4b,GAAI5b,EAAQupB,gBAA0D,QAAxCgM,EAAK/4B,KAAKwD,QAAQupC,wBAAqC,IAAPhU,EAAgBA,EAAK,CAAC,EAAG/4B,KAAKwD,QAAQwpC,0BAA2BhtC,KAAKwD,QAAQyoC,iBACvL,CACEzO,gBAAiBx9B,KAAKwD,QAAQyoC,iBAAiBpf,OAC1C2Q,sBAEP/8B,GAGG,IAAI2rC,GAEjB,MAAMzgC,EAAO,IAAI+gC,GAAc,CAC3BttB,GAAI5b,EAAQ4b,GACZsC,UAAWle,EAAQke,UACnBqL,gBAAiBvpB,EAAQupB,gBACzBF,SACAY,OACAngB,YAAaf,EAAY8I,SACzBoW,aAAcjoB,EAAQioB,WACtB0C,aAAcnuB,KAAKwD,QAAQ2qB,WAC3Bf,SAAUptB,OAEdA,KAAK22B,WAAWhrB,GAChB,MAAM5G,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAO2H,EAAOC,WAChE5I,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQtD,EAYlE,OAXAkL,EAAKsgB,KAAK,CACN5B,OAAkC,QAAzBiT,EAAK95B,EAAQ6mB,cAA2B,IAAPiT,EAAgBA,EAAK,CAAC,EAChE7Q,gBAAiBjpB,EAAQipB,gBACzBC,gBAAiBlpB,EAAQkpB,gBACzBjB,WAAYjoB,EAAQioB,WACpBqC,MAAOtqB,EAAQsqB,MACfY,aAAc,IAAIxM,GAAYliB,MAC9BotB,SAAUptB,OAEdA,KAAK4sC,SAAS31B,QAAQtL,EAAM5G,EAAMhB,GAClC4H,EAAK2B,YAActN,KAAK4sC,SAASt/B,YAC1B3B,CACX,CACAmW,WAAAA,CAAYzB,GACR,MACMtc,EADQ/D,KAAK2hB,OACClX,WAAWuF,GAAMA,IAAMqQ,IAC3CrgB,KAAK4sC,SAAS11B,WAAWnT,GACzB/D,KAAKm4B,cAAc9X,EACvB,CACA4B,SAAAA,CAAUzc,EAAM2F,GACZnL,KAAK4sC,SAASh4B,SAASpP,EAAM2F,EACjC,CACAgW,QAAAA,CAAS/B,GACL,OAAOpf,KAAK2hB,OAAO8R,MAAM9nB,GAASA,EAAKyT,KAAOA,GAClD,CACAvK,MAAAA,CAAOnL,EAAOC,GACV,MAAO5E,EAAMkI,GAAkBjN,KAAK4sC,SAASt/B,cAAgBf,EAAYkB,WACnE,CAAC/D,EAAOC,GACR,CAACA,EAAQD,GACf1J,KAAK4sC,SAAS/3B,OAAO9P,EAAMkI,EAC/B,CACA+N,MAAAA,GACI,MAAM8e,EAAWp3B,GAAUA,IAAUmL,OAAOgsB,kBACxCn3B,IAAUmL,OAAOC,uBACfrN,EACAiC,EAcN,MAAO,CACH4O,MAbUtR,KAAK4sC,SACdh2B,WACAhV,KAAI,CAAC+J,EAAMvB,KAEZ,MAAO,CACHrF,KAFS/E,KAAK4sC,SAASz6B,YAAY/H,GAGnC1J,KAAMiL,EAAKqP,SACXtP,aARShJ,EAQYiJ,EAAK8gB,gBARN/pB,GAAS,OAAIjC,EAAYiC,GAS7CmJ,YAAaiuB,EAAQnuB,EAAK+gB,iBAC1Bc,SAAU7hB,EAAK8f,cAVN/oB,KAWZ,IAIDqC,KAAM/E,KAAK4sC,SAAS7nC,KAE5B,CACA+X,QAAAA,CAASmwB,GACLjtC,KAAKsD,QACL,MAAM,MAAEgO,EAAK,KAAEvM,GAASkoC,EAClB5B,EAAQ,GAER3hC,EAAQ1J,KAAK0J,MACbC,EAAS3J,KAAK2J,OACpB3J,KAAK4sC,SAAW,IAAIr2B,EAASvW,KAAKwE,QAAS,CACvC8I,YAAaf,EAAY8I,SACzBhE,WAAY,CACRtM,OACAuM,MAAOA,EAAM1P,KAAK+J,IACd,IAAIpJ,EAAI+kB,EAAIyR,EAAIuE,EAChB,MAAM58B,EAAOiL,EAAKjL,KACZ+sB,EAAO+P,GAAgB98B,EAAK0e,GAAI1e,EAAKghB,UAA8C,QAAlCnf,EAAKvC,KAAKwD,QAAQonC,kBAA+B,IAAProC,EAAgBA,EAAK,CAAC,EAA+C,QAA3C+kB,EAAKtnB,KAAKwD,QAAQqnC,2BAAwC,IAAPvjB,EAAgBA,EAAK,CAAC,EAAGtnB,KAAKwD,QAAQyoC,iBAC9M,CACEzO,gBAAiBx9B,KAAKwD,QAAQyoC,iBAAiBxe,KAC1C+P,sBAEP/8B,GACN,IAAIosB,EAEAA,EADAnsB,EAAKqsB,gBACIyQ,GAAgB98B,EAAK0e,GAAI1e,EAAKqsB,gBAA0D,QAAxCgM,EAAK/4B,KAAKwD,QAAQupC,wBAAqC,IAAPhU,EAAgBA,EAAK,CAAC,EAAqD,QAAjDuE,EAAKt9B,KAAKwD,QAAQwpC,iCAA8C,IAAP1P,EAAgBA,EAAK,CAAC,EAAGt9B,KAAKwD,QAAQyoC,iBAC5N,CACEzO,gBAAiBx9B,KAAKwD,QAAQyoC,iBAAiBpf,OAC1C2Q,sBAEP/8B,GAGG,IAAI2rC,GAEjB,MAAM/rB,EAAQ,IAAIqsB,GAAc,CAC5BttB,GAAI1e,EAAK0e,GACTsC,UAAWhhB,EAAKghB,UAChBqL,gBAAiBrsB,EAAKqsB,gBACtBF,SACAY,OACAngB,YAAaf,EAAY8I,SACzBoW,aAAc9f,EAAK6hB,SACnBW,aAAcnuB,KAAKwD,QAAQ2qB,WAC3Bf,SAAUptB,OAoBd,OAlBAA,KAAK22B,WAAWtW,GAChBgrB,EAAMvnC,MAAK,KACP,IAAIvB,EACJ8d,EAAM4L,KAAK,CACP5B,OAA+B,QAAtB9nB,EAAK7B,EAAK2pB,cAA2B,IAAP9nB,EAAgBA,EAAK,CAAC,EAC7DkqB,gBAAiB9gB,EAAKD,YACtBghB,gBAAiB/gB,EAAKE,YACtBiiB,MAAOptB,EAAKotB,MACZrC,aAAc9f,EAAK6hB,SACnBkB,aAAc,IAAIxM,GAAYliB,MAC9BotB,SAAUptB,OAEdqgB,EAAM/S,YAActN,KAAK4sC,SAASt/B,WAAW,IAEjDtE,YAAW,KAEPhJ,KAAK0O,cAAcvK,KAAKkc,EAAM,GAC/B,GACI,CAAEtb,KAAM4G,EAAK5G,KAAM4G,KAAM0U,EAAO,OAInDrgB,KAAK6U,OAAOnL,EAAOC,GACnB0hC,EAAMtpC,SAASypC,GAAMA,MACrBxrC,KAAKkrC,qBAAqB/mC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAO0M,EAAGtN,KAAU1C,KAAK8sC,iBAAiBnK,UAC3CjgC,EAAMZ,UAEV9B,KAAK8sC,iBAAiBxpC,QACtBtD,KAAK4sC,SAAS9qC,SAClB,CACA60B,UAAAA,CAAWtW,GACP,MAAMha,EAAaga,EAAM8B,WAAWxe,IAChC3D,KAAKouB,WAAWjqB,KAAKR,EAAM,IAE/B3D,KAAK8sC,iBAAiB9nC,IAAIqb,EAAMjB,GAAI/Y,EACxC,CACA8xB,aAAAA,CAAc9X,GACV,MAAMha,EAAarG,KAAK8sC,iBAAiB7rB,IAAIZ,EAAMjB,IAC/C/Y,IACAA,EAAWvE,UACX9B,KAAK8sC,iBAAiBxoC,OAAO+b,EAAMjB,IAE3C,CACAtd,OAAAA,GACI/B,MAAM+B,UACN,IAAK,MAAOkO,EAAGtN,KAAU1C,KAAK8sC,iBAAiBnK,UAC3CjgC,EAAMZ,UAEV9B,KAAK8sC,iBAAiBxpC,QACtBtD,KAAK4sC,SAAS9qC,SAClB,ECpRG,MAAMorC,WAAuBxhB,GAChC,YAAI3f,GACA,OAAO/L,KAAKk5B,SAChB,CACA,eAAI5rB,CAAY5K,GACZ1C,KAAKuN,aAAe7K,CACxB,CACA,eAAI4K,GACA,OAAOtN,KAAKuN,YAChB,CACA,eAAI7B,GACA,MAAM3G,EAAoC,mBAAtB/E,KAAKmtC,aACnBntC,KAAKmtC,eACLntC,KAAKmtC,aAKX,OAJIpoC,IAAS/E,KAAKotC,wBACdptC,KAAKotC,sBAAwBroC,EAC7B/E,KAAKs5B,qBAEFv0B,CACX,CACA,eAAI8G,GACA,MAAM9G,EAAoC,mBAAtB/E,KAAKqtC,aACnBrtC,KAAKqtC,eACLrtC,KAAKqtC,aAKX,OAJItoC,IAAS/E,KAAKstC,wBACdttC,KAAKstC,sBAAwBvoC,EAC7B/E,KAAKs5B,qBAEFv0B,CACX,CACA,QAAIiH,GACA,OAAOhM,KAAKm5B,KAChB,CACAx5B,WAAAA,CAAYyf,EAAIme,GACZx9B,MAAMqf,EAAIme,EAAe,IAAIhT,GAAsBnL,EAAIme,IACvDv9B,KAAKotC,sBAAwB,EAC7BptC,KAAKstC,sBAAwBz/B,OAAOC,kBACpC9N,KAAKmtC,aAAe,EACpBntC,KAAKqtC,aAAex/B,OAAOC,kBAC3B9N,KAAKm5B,OAAQ,EACbn5B,KAAK2W,aAAe,IAAI1T,EACxBjD,KAAK4S,YAAc5S,KAAK2W,aAAahT,MACrC3D,KAAKuiB,IAAI2H,WAAWlqB,MACpBA,KAAK+F,eAAe/F,KAAK2W,aAAc3W,KAAKuiB,IAAIqH,wBAAwBjmB,IACpE,MAAM,UAAE2c,GAAc3c,GAChB,SAAEypB,GAAaptB,KAAK2rB,QAC1ByB,EAAS/gB,WAAWrM,KAAMsgB,EAAU,IACpCtgB,KAAKuiB,IAAIuH,gBAAe,KACxB,MAAM,SAAEsD,GAAaptB,KAAK2rB,QAC1ByB,EAAShM,UAAUphB,KAAK,IACxBA,KAAKuiB,IAAIkI,gCAAgC9mB,IACR,iBAAtBA,EAAM+H,aACgB,mBAAtB/H,EAAM+H,cACb1L,KAAKmtC,aAAexpC,EAAM+H,aAEG,iBAAtB/H,EAAMkI,aACgB,mBAAtBlI,EAAMkI,cACb7L,KAAKqtC,aAAe1pC,EAAMkI,aAE9B7L,KAAKs5B,mBAAmB,IACxBt5B,KAAKuiB,IAAIsI,iBAAiBlnB,IAC1B3D,KAAK2W,aAAaxS,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAEpD,CACAsH,UAAAA,CAAWiU,GACPtgB,KAAKuiB,IAAIlK,uBAAuBlU,KAAK,CAAEmc,aAC3C,CACAc,SAAAA,CAAU0H,GACN9oB,KAAKuiB,IAAItC,mBAAmB9b,KAAK,CAAE2kB,YACvC,CACAjU,MAAAA,CAAO9P,EAAMkI,GACT,MAAOvD,EAAOC,GAAU3J,KAAKsN,cAAgBf,EAAYkB,WACnD,CAAC1I,EAAMkI,GACP,CAACA,EAAgBlI,GACvBhF,MAAM8U,OAAOnL,EAAOC,EACxB,CACAsiB,IAAAA,CAAK9B,GACDpqB,MAAMksB,KAAK9B,GACXnqB,KAAKk5B,UAAY/O,EAAWpe,SACxBoe,EAAWze,cACX1L,KAAKmtC,aAAehjB,EAAWze,aAE/Bye,EAAWte,cACX7L,KAAKqtC,aAAeljB,EAAWte,aAE/Bse,EAAWne,OACXhM,KAAKm5B,MAAQhP,EAAWne,KAEhC,CACAgP,MAAAA,GAMI,OAAOqH,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGviB,MAAMib,UAAW,CAAEtP,aADzChJ,EAC8D1C,KAAK0L,YADxDhJ,GAAS,OAAIjC,EAAYiC,GAC6CmJ,YALjFnJ,IAAUA,IAAUmL,OAAOgsB,kBACxCn3B,IAAUmL,OAAOC,uBACfrN,EACAiC,EAEyGo3B,CAAQ95B,KAAK6L,eAD3GnJ,KAErB,CACA42B,iBAAAA,GACIt5B,KAAKuiB,IAAImI,wBAAwBvmB,KAAK,CAClC0H,YAAa7L,KAAKstC,sBAClB5hC,YAAa1L,KAAKotC,uBAE1B,E,uJC/FJ,MAAMG,EAAuBA,CAACC,EAAOC,KACjC,MAAOz9B,EAAG09B,GAAiBC,EAAAA,WACrBC,EAASD,EAAAA,OAAaH,EAAMK,gBAalC,OAZAF,EAAAA,oBAA0BF,GAAK,MAC3BrjB,OAASyjB,IACLD,EAAOE,QAAUzrB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGsrB,EAAOE,SAAUD,GAOlEH,EAAcK,KAAKC,MAAM,KAE7B,IACGL,EAAAA,cAAoBH,EAAM9rB,UAAWksB,EAAOE,QAAQ,EAE/DP,EAAqBU,YAAc,wBAMnC,MAAMC,EAA2B,MAC7B,IAAIxrC,EAAQ,EACZ,MAAO,CAAEsI,KAAMA,IAAO,8BAA6BtI,KAASuI,aAC/D,EAHgC,GAIpBkjC,EAAmBR,EAAAA,cAAoB,CAAC,GAC9C,MAAMS,EACTzuC,WAAAA,CAAYsc,EAAQoyB,EAAa3sB,EAAWyI,EAAYmkB,GACpDtuC,KAAKic,OAASA,EACdjc,KAAKquC,YAAcA,EACnBruC,KAAK0hB,UAAYA,EACjB1hB,KAAKmqB,WAAaA,EAClBnqB,KAAKsuC,QAAUA,EACftuC,KAAKuuC,cAAgB,CAAC,EACtBvuC,KAAKwuC,UAAW,EAChBxuC,KAAKyuC,cACT,CACArkB,MAAAA,CAAOojB,GACH,GAAIxtC,KAAKwuC,SACL,MAAM,IAAIhsC,MAAM,mDAEfxC,KAAK0uC,kBAKN1uC,KAAK0uC,kBAAkBtkB,OAAOojB,GAH9BxtC,KAAKuuC,cAAgBlsB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtiB,KAAKuuC,eAAgBf,EAKlF,CACAiB,YAAAA,GACI,GAAIzuC,KAAKwuC,SACL,MAAM,IAAIhsC,MAAM,mDAEpB,GA6DyB,mBALAkf,EAxDH1hB,KAAK0hB,cA8DxBA,aAA6C,EAASA,EAAUitB,UAxD/D,MAAM,IAAInsC,MAAM,8GAkDrB,IAA0Bkf,EAhDzB,MAAMktB,EAAkBjB,EAAAA,cAAoBA,EAAAA,WAAiBJ,GAAuB,CAChF7rB,UAAW1hB,KACN0hB,UACLmsB,eAAgB7tC,KAAKmqB,WACrBsjB,IAAMjpC,IACFxE,KAAK0uC,kBAAoBlqC,EACrB6d,OAAO+J,KAAKpsB,KAAKuuC,eAAehtC,OAAS,IACzCvB,KAAK0uC,kBAAkBtkB,OAAOpqB,KAAKuuC,eACnCvuC,KAAKuuC,cAAgB,CAAC,EAC1B,IAGF/1B,EAAOxY,KAAKsuC,QACZX,EAAAA,cAAoBQ,EAAiBU,SAAU,CAAEnsC,MAAO1C,KAAKsuC,SAAWM,GACxEA,EACAE,EAASC,EAAAA,aAAsBv2B,EAAMxY,KAAKic,OAAQiyB,EAAyBljC,QACjFhL,KAAKytC,IAAM,CACPqB,SACAzoC,WAAYrG,KAAKquC,YAAYW,UAAUF,GAE/C,CACAhtC,OAAAA,GACI,IAAIS,EACgB,QAAnBA,EAAKvC,KAAKytC,WAAwB,IAAPlrC,GAAyBA,EAAG8D,WAAWvE,UACnE9B,KAAKwuC,UAAW,CACpB,EAOG,MAAMS,EAAsBA,KAC/B,MAAOC,EAASC,GAAcxB,EAAAA,SAAe,IAC7CA,EAAAA,cAAqB,iBAAgBuB,EAAQ3tC,UAY7C,MAAO,CAAC2tC,EAXUvB,EAAAA,aAAmBmB,IACjCK,GAAYC,GAAoB,IAAIA,EAAiBN,KACrD,IAAIN,GAAW,EACf,OAAOa,EAAAA,GAAmB7pC,MAAK,KAC3B,GAAIgpC,EACA,MAAM,IAAIhsC,MAAM,gDAEpBgsC,GAAW,EACXW,GAAYC,GAAoBA,EAAgB98B,QAAQ4F,GAAMA,IAAM42B,KAAQ,GAC9E,GACH,IACwB,ECtHxB,MAAMQ,EACT,WAAI9qC,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,CAAYyf,EAAIsC,EAAW6tB,GACvBvvC,KAAKof,GAAKA,EACVpf,KAAK0hB,UAAYA,EACjB1hB,KAAKuvC,iBAAmBA,EACxBvvC,KAAKsI,YAAc,IAAIknC,EAAAA,GACvBxvC,KAAKuI,WAAavI,KAAKsI,YAAY3E,MACnC3D,KAAKwI,WAAa,IAAIgnC,EAAAA,GACtBxvC,KAAKyI,UAAYzI,KAAKwI,WAAW7E,MACjC3D,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,sBAC1BxH,KAAKue,SAASpS,MAAMxC,OAAS,OAC7B3J,KAAKue,SAASpS,MAAMzC,MAAQ,MAChC,CACAqY,KAAAA,GACI,CAEJkK,IAAAA,CAAK9B,GACDnqB,KAAKgsB,KAAO,IAAIoiB,EAAUpuC,KAAKwE,QAASxE,KAAKuvC,iBAAkBvvC,KAAK0hB,UAAW,CAC3E2I,OAAQF,EAAWE,OACnB9H,IAAK4H,EAAW5H,IAChBmM,aAAcvE,EAAWuE,cAEjC,CACAtE,MAAAA,CAAOzmB,GACH,IAAIpB,EACiB,QAApBA,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAG6nB,OAAO,CAAEC,OAAQ1mB,EAAM0mB,QACpF,CACAxV,MAAAA,CAAOoU,EAAQC,GACX,CAEJpnB,OAAAA,GACI,IAAIS,EACJvC,KAAKsI,YAAYxG,UACjB9B,KAAKwI,WAAW1G,UACK,QAApBS,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAGT,SAC7D,ECxCG,MAAM2tC,EACT,WAAIjrC,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,CAAYyf,EAAIsC,EAAW6tB,GACvBvvC,KAAKof,GAAKA,EACVpf,KAAK0hB,UAAYA,EACjB1hB,KAAKuvC,iBAAmBA,EACxBvvC,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,sBAC1BxH,KAAKue,SAASpS,MAAMxC,OAAS,OAC7B3J,KAAKue,SAASpS,MAAMzC,MAAQ,MAChC,CACAqY,KAAAA,GACI,CAEJkK,IAAAA,CAAK9B,GACDnqB,KAAKgsB,KAAO,IAAIoiB,EAAUpuC,KAAKwE,QAASxE,KAAKuvC,iBAAkBvvC,KAAK0hB,UAAW,CAC3E2I,OAAQF,EAAWE,OACnB9H,IAAK4H,EAAW5H,IAChBmM,aAAcvE,EAAWuE,cAEjC,CACAtE,MAAAA,CAAOzmB,GACH,IAAIpB,EACiB,QAApBA,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAG6nB,OAAO,CAAEC,OAAQ1mB,EAAM0mB,QACpF,CACAxV,MAAAA,CAAOoU,EAAQC,GACX,CAEJpnB,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAGT,SAC7D,ECjCG,MAAM4tC,EACT,WAAIlrC,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,CAAYyf,EAAIsC,EAAW6tB,GACvBvvC,KAAKof,GAAKA,EACVpf,KAAK0hB,UAAYA,EACjB1hB,KAAKuvC,iBAAmBA,EACxBvvC,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,sBAC1BxH,KAAKue,SAASpS,MAAMxC,OAAS,OAC7B3J,KAAKue,SAASpS,MAAMzC,MAAQ,MAChC,CACAuiB,IAAAA,CAAK9B,GACDnqB,KAAKgsB,KAAO,IAAIoiB,EAAUpuC,KAAKwE,QAASxE,KAAKuvC,iBAAkBvvC,KAAK0hB,UAAW,CAC3EZ,MAAOqJ,EAAWrJ,MAClB4N,aAAcvE,EAAWuE,cAEjC,CACA3M,KAAAA,GACI,CAEJqI,MAAAA,CAAOC,GACH,IAAI9nB,EAAI+kB,EAAIyR,EACR/4B,KAAKmqB,aACLnqB,KAAKmqB,WAAWE,OAASA,EAAOA,QAEf,QAApB9nB,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAG6nB,OAAO,CAAEC,OAAyF,QAAhF0O,EAAgC,QAA1BzR,EAAKtnB,KAAKmqB,kBAA+B,IAAP7C,OAAgB,EAASA,EAAG+C,cAA2B,IAAP0O,EAAgBA,EAAK,CAAC,GAC7L,CACAlkB,MAAAA,CAAOoU,EAAQC,GACX,CAEJsO,iBAAAA,CAAkB0C,EAAQ+C,GACtB,CAEJn7B,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAGT,SAC7D,ECrCG,MAAM6tC,EACT,WAAInrC,GACA,OAAOxE,KAAKue,QAChB,CACA,QAAIyN,GACA,OAAOhsB,KAAK4vC,KAChB,CACAjwC,WAAAA,CAAY+hB,EAAW6tB,EAAkBrV,GACrCl6B,KAAK0hB,UAAYA,EACjB1hB,KAAKuvC,iBAAmBA,EACxBvvC,KAAKk6B,OAASA,EACdl6B,KAAK6vC,kBAAoB,IAAIC,EAAAA,GAC7B9vC,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAAS/W,UAAY,sBAC1BxH,KAAKue,SAASpS,MAAMxC,OAAS,OAC7B3J,KAAKue,SAASpS,MAAMzC,MAAQ,MAChC,CACAuiB,IAAAA,CAAK9B,GACDnqB,KAAK6vC,kBAAkBntC,MAAQ,IAAIqtC,EAAAA,GAA4B/vC,KAAKk6B,OAAO/S,MAAM1E,eAAc,KAC3FziB,KAAKgwC,cAAc,IACnBhwC,KAAKk6B,OAAO/S,MAAMxE,kBAAiB,KACnC3iB,KAAKgwC,cAAc,IACnBhwC,KAAKk6B,OAAO/S,MAAMtE,wBAAuB,KACzC7iB,KAAKiwC,mBAAmB,IACxB9lB,EAAW5H,IAAIrC,mBAAkB,KACjClgB,KAAKkwC,mBAAmB,KAE5BlwC,KAAK4vC,MAAQ,IAAIxB,EAAUpuC,KAAKwE,QAASxE,KAAKuvC,iBAAkBvvC,KAAK0hB,UAAW,CAC5Ea,IAAK4H,EAAW5H,IAChBmM,aAAcvE,EAAWuE,aACzB/M,OAAQ3hB,KAAKk6B,OAAO/S,MAAMxF,OAC1B4B,YAAavjB,KAAKk6B,OAAO/S,MAAM5D,YAC/B2U,cAAel4B,KAAKk6B,OAAO3X,IAAIuG,SAC/BhI,MAAO9gB,KAAKk6B,QAEpB,CACAp4B,OAAAA,GACI,IAAIS,EACJvC,KAAK6vC,kBAAkB/tC,UACD,QAArBS,EAAKvC,KAAK4vC,aAA0B,IAAPrtC,GAAyBA,EAAGT,SAC9D,CACAsoB,MAAAA,CAAOzmB,GACH,IAAIpB,EACkB,QAArBA,EAAKvC,KAAK4vC,aAA0B,IAAPrtC,GAAyBA,EAAG6nB,OAAOzmB,EAAM0mB,OAC3E,CACA2lB,YAAAA,GACIhwC,KAAKoqB,OAAO,CAAEC,OAAQ,CAAE1I,OAAQ3hB,KAAKk6B,OAAO/S,MAAMxF,SACtD,CACAsuB,iBAAAA,GACIjwC,KAAKoqB,OAAO,CACRC,OAAQ,CACJ9G,YAAavjB,KAAKk6B,OAAO/S,MAAM5D,cAG3C,CACA2sB,iBAAAA,GACIlwC,KAAKoqB,OAAO,CACRC,OAAQ,CACJ6N,cAAel4B,KAAKk6B,OAAO3X,IAAIuG,WAG3C,ECxDJ,SAASqnB,EAA0BzuB,EAAW0uB,GAC1C,OAAO1uB,EACA2T,GACQ,IAAIsa,EAA+BjuB,EAAW0uB,EAAO/a,QAE9D50B,CACV,CACA,MAAM4vC,EAAoB,4BAUnB,MAAMC,EAAgB3C,EAAAA,YAAiB,CAACH,EAAOC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB6C,EAAc7C,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAsLhC,OArLAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjB1c,EAAAA,GAAcjyB,SAAS4uC,IACnB,MAAMxkB,EAAMwkB,EACNC,EAAYpD,EAAMrhB,GACpBA,KAAOqhB,GAASoD,IAAcH,EAAU3C,QAAQ3hB,KAChDukB,EAAQvkB,GAAOykB,EACnB,IAEAJ,EAAY1C,SACZ0C,EAAY1C,QAAQjsB,cAAc6uB,GAKtCD,EAAU3C,QAAUN,CAAK,GAC1BxZ,EAAAA,GAAcpyB,KAAKuqB,GAAQqhB,EAAMrhB,MACpCwhB,EAAAA,WAAgB,KACZ,IAAIprC,EACJ,IAAKguC,EAAOzC,QACR,OAEJ,MAAM+C,EAAwD,QAA9BtuC,EAAKirC,EAAMsD,qBAAkC,IAAPvuC,EAAgBA,EAAK,CAAC,EACxFirC,EAAM9P,sBACNmT,EAAuBR,GACnB7C,EAAM9P,qBAEd,MAAMqT,EAAmB,CACrBha,gCAAiCoZ,EAA0B3C,EAAMwD,2BAA4B,CAAEhC,cAC/FnY,iCAAkCsZ,EAA0B3C,EAAMyD,4BAA6B,CAAEjC,cACjG/X,kCAAmCkZ,EAA0B3C,EAAM0D,6BAA8B,CAAElC,cACnGxR,gBAAkBh6B,GACP,IAAI8rC,EAAsB9rC,EAAQ4b,GAAIouB,EAAM5C,WAAWpnC,EAAQi6B,MAAO,CACzEuR,cAGR3R,mBAAmB75B,GACR,IAAIisC,EAAqBjsC,EAAQ4b,GAAIyxB,EAAuBrtC,EAAQi6B,MAAO,CAC9EuR,cAGRtW,yBAA0B8U,EAAM2D,mBAC1B,IACS,IAAIzB,EAAmB,YAAalC,EAAM2D,mBAAoB,CACjEnC,mBAGNvuC,EACNoZ,cAAe02B,EAAOzC,QACtBpQ,oBAAqB8P,EAAM9P,oBACrB2S,OACA5vC,GAEJ2wC,EAAW,IAAIlN,EAAAA,GAAkB7hB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EApE5E,SAA4BkrB,GAOxB,OANoBxZ,EAAAA,GAActmB,QAAO,CAAC2jC,EAAKllB,KACvCA,KAAOqhB,IACP6D,EAAIllB,GAAOqhB,EAAMrhB,IAEdklB,IACR,CAAC,EAER,CA4D+EC,CAAmB9D,IAASuD,KAC7F,YAAE9qB,EAAW,aAAEC,GAAiBqqB,EAAOzC,QAM7C,OALAsD,EAASv8B,OAAOoR,EAAaC,GACzBsnB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAEhvB,IAAK,IAAIS,EAAAA,GAAYouB,KAEzCZ,EAAY1C,QAAUsD,EACf,KACHA,EAAStvC,SAAS,CACrB,GACF,IACH6rC,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMznC,EAAamqC,EAAY1C,QAAQ3rB,WAAWxe,IAC1C6pC,EAAMrrB,WACNqrB,EAAMrrB,UAAUxe,EACpB,IAEJ,MAAO,KACH0C,EAAWvE,SAAS,CACvB,GACF,CAAC0rC,EAAMrrB,YACVwrB,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMznC,EAAamqC,EAAY1C,QAAQxqB,0BAA0B3f,IAC7D,IAAIpB,GACgC,QAA/BA,EAAKirC,EAAM/e,sBAAmC,IAAPlsB,OAAgB,EAASA,EAAG2F,KAAKslC,EAAO7pC,KAChFA,EAAMowB,QACV,IAEJ,MAAO,KACH1tB,EAAWvE,SAAS,CACvB,GACF,CAAC0rC,EAAM/e,iBACVkf,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMznC,EAAamqC,EAAY1C,QAAQ5qB,YAAYvf,IAC3C6pC,EAAMtqB,YACNsqB,EAAMtqB,WAAWvf,EACrB,IAEJ,MAAO,KACH0C,EAAWvE,SAAS,CACvB,GACF,CAAC0rC,EAAMtqB,aACVyqB,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQjsB,cAAc,CAC9B2b,gBAAkBh6B,GACP,IAAI8rC,EAAsB9rC,EAAQ4b,GAAIouB,EAAM5C,WAAWpnC,EAAQi6B,MAAO,CACzEuR,eAGV,GACH,CAACxB,EAAM5C,aACV+C,EAAAA,WAAgB,KACZ,IAAIprC,EACJ,IAAKiuC,EAAY1C,QACb,OAEJ,MAAM+C,EAAwD,QAA9BtuC,EAAKirC,EAAMsD,qBAAkC,IAAPvuC,EAAgBA,EAAK,CAAC,EACxFirC,EAAM9P,sBACNmT,EAAuBR,GACnB7C,EAAM9P,qBAEd8S,EAAY1C,QAAQjsB,cAAc,CAC9B6b,oBAAqB8P,EAAM9P,oBACrB2S,OACA5vC,EACN48B,mBAAmB75B,GACR,IAAIisC,EAAqBjsC,EAAQ4b,GAAIyxB,EAAuBrtC,EAAQi6B,MAAO,CAC9EuR,eAGV,GACH,CAACxB,EAAMsD,cAAetD,EAAM9P,sBAC/BiQ,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQjsB,cAAc,CAC9B6W,yBAA0B8U,EAAM2D,mBAC1B,IACS,IAAIzB,EAAmB,YAAalC,EAAM2D,mBAAoB,CACjEnC,mBAGNvuC,GACR,GACH,CAAC+sC,EAAM2D,qBACVxD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQjsB,cAAc,CAC9BgV,iCAAkCsZ,EAA0B3C,EAAMyD,4BAA6B,CAAEjC,eACnG,GACH,CAACxB,EAAMyD,8BACVtD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQjsB,cAAc,CAC9BkV,gCAAiCoZ,EAA0B3C,EAAMwD,2BAA4B,CAAEhC,eACjG,GACH,CAACxB,EAAMwD,6BACVrD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQjsB,cAAc,CAC9BoV,kCAAmCkZ,EAA0B3C,EAAM0D,6BAA8B,CAAElC,eACrG,GACH,CAACxB,EAAM0D,+BACFvD,EAAAA,cAAoB,MAAO,CAAEnmC,UAAWgmC,EAAMhmC,UAAW2E,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAU+jC,IAAK8C,GAAUrB,EAAQ,IAEtIoB,EAAcrC,YAAc,oBCpNrB,MAAMuD,EAAcA,IAAO7D,EAAAA,cAAoB,MAAO,CAAEhkC,OAAQ,KAAMD,MAAO,KAAM+nC,QAAS,YAAa,cAAe,QAASC,WAAW,EAAOlqC,UAAW,gBACjKmmC,EAAAA,cAAoB,OAAQ,CAAE3rC,EAAG,gICFrC,IAAI2vC,EAAkC,SAAU99B,EAAGzP,GAC/C,IAAIsG,EAAI,CAAC,EACT,IAAK,IAAIwN,KAAKrE,EAAOwO,OAAOthB,UAAU6wC,eAAe1pC,KAAK2L,EAAGqE,IAAM9T,EAAEJ,QAAQkU,GAAK,IAC9ExN,EAAEwN,GAAKrE,EAAEqE,IACb,GAAS,MAALrE,GAAqD,mBAAjCwO,OAAOwvB,sBACtB,KAAIznC,EAAI,EAAb,IAAgB8N,EAAImK,OAAOwvB,sBAAsBh+B,GAAIzJ,EAAI8N,EAAE3W,OAAQ6I,IAC3DhG,EAAEJ,QAAQkU,EAAE9N,IAAM,GAAKiY,OAAOthB,UAAU+wC,qBAAqB5pC,KAAK2L,EAAGqE,EAAE9N,MACvEM,EAAEwN,EAAE9N,IAAMyJ,EAAEqE,EAAE9N,IAF4B,CAItD,OAAOM,CACX,EAGO,MAAMqnC,EAAsBxvC,IAC/B,IAAI,IAAEggB,EAAKmM,aAAcsjB,EAAe3nB,OAAQsB,EAAO,UAAEsmB,EAAS,oBAAEC,GAAwB3vC,EAAIoY,EAAOg3B,EAAOpvC,EAAI,CAAC,MAAO,eAAgB,SAAU,YAAa,wBACjK,MAAM4vC,EAAUxE,EAAAA,aAAmBhqC,IAC/BA,EAAMvB,iBACF8vC,EACAA,IAGA3vB,EAAI8X,OACR,GACD,CAAC9X,EAAK2vB,IACHE,EAAczE,EAAAA,aAAmBvpC,IACnCA,EAAEhC,gBAAgB,GACnB,IACGiwC,EAAU1E,EAAAA,aAAmBhqC,IAC3BA,EAAMxB,mBAGVogB,EAAInB,YACAzG,EAAK03B,SACL13B,EAAK03B,QAAQ1uC,GACjB,GACD,CAAC4e,EAAK5H,EAAK03B,UACd,OAAQ1E,EAAAA,cAAoB,MAAOtrB,OAAOC,OAAO,CAAE,cAAe,2BAA6B3H,EAAM,CAAE03B,QAASA,EAAS7qC,UAAW,mBAChImmC,EAAAA,cAAoB,OAAQ,CAAEnmC,UAAW,0BAA4B+a,EAAIuL,QACxEmkB,GAActE,EAAAA,cAAoB,MAAO,CAAEnmC,UAAW,wBAAyB4qC,YAAaA,EAAaC,QAASF,GAC/GxE,EAAAA,cAAoB6D,EAAa,OAAQ,ECrC9C,MAAMc,UAAuBpF,EAAAA,GAChCvtC,WAAAA,CAAYyf,EAAIsC,EAAW6wB,EAAgBhD,GACvCxvC,MAAMqf,EAAIsC,GACV1hB,KAAKuyC,eAAiBA,EACtBvyC,KAAKuvC,iBAAmBA,CAC5B,CACArjB,YAAAA,GACI,IAAI3pB,EAAI+kB,EACR,OAAO,IAAI8mB,EAAUpuC,KAAKwE,QAASxE,KAAKuvC,iBAAkBvvC,KAAKuyC,eAAgB,CAC3EloB,OAAsF,QAA7E/C,EAA6B,QAAvB/kB,EAAKvC,KAAK2rB,eAA4B,IAAPppB,OAAgB,EAASA,EAAG8nB,cAA2B,IAAP/C,EAAgBA,EAAK,CAAC,EACpH/E,IAAKviB,KAAKuiB,IACVmM,aAAc,IAAIjN,EAAAA,GAAazhB,KAAK2rB,QAAQyB,WAEpD,ECXG,MAAMolB,EAAiB7E,EAAAA,YAAiB,CAACH,EAAOC,KACnD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB8E,EAAe9E,EAAAA,UACduB,EAASF,GAAaC,IAyC7B,OAxCAtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,IAAIprC,EACJ,MAAMiU,EAAY,IAAIm1B,EAAAA,GAAmB,CACrC9xB,cAAe02B,EAAOzC,QACtBluB,oBAAqB4tB,EAAM5tB,oBAC3BtS,YAA0C,QAA5B/K,EAAKirC,EAAMlgC,mBAAgC,IAAP/K,EAAgBA,EAAKgK,EAAAA,GAAYkB,WACnFo9B,oBAAqB2C,EAAM5C,WAC3BqB,iBAAkB,CACdzO,gBAAiBA,CAACpe,EAAIszB,EAAahxB,IACxB,IAAI4wB,EAAelzB,EAAIszB,EAAahxB,EAAW,CAClDstB,eAIZl+B,mBAAwD,kBAA7B08B,EAAM18B,oBAC3B08B,EAAM18B,mBAEZM,OAAQo8B,EAAMtZ,YACR,CAAEviB,gBAAiB,oBACnBlR,KAEJ,YAAEwlB,EAAW,aAAEC,GAAiBqqB,EAAOzC,QAM7C,OALAt3B,EAAU3B,OAAOoR,EAAaC,GAC1BsnB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAEhvB,IAAK,IAAId,EAAAA,GAAajL,KAE1Ci8B,EAAa3E,QAAUt3B,EAChB,KACHA,EAAU1U,SAAS,CACtB,GACF,IACH6rC,EAAAA,WAAgB,KACP8E,EAAa3E,SAGlB2E,EAAa3E,QAAQjsB,cAAc,CAC/BgpB,oBAAqB2C,EAAM5C,YAC7B,GACH,CAAC4C,EAAM5C,aACF+C,EAAAA,cAAoB,MAAO,CAAEnmC,UAAWgmC,EAAMhmC,UAAW2E,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAU+jC,IAAK8C,GAAUrB,EAAQ,IAEtIsD,EAAevE,YAAc,qBChDtB,MAAM0E,UAA2B1Z,EAAAA,GACpCt5B,WAAAA,CAAYyf,EAAIsC,EAAW6wB,EAAgBhD,GACvCxvC,MAAMqf,EAAIsC,GACV1hB,KAAKuyC,eAAiBA,EACtBvyC,KAAKuvC,iBAAmBA,CAC5B,CACArjB,YAAAA,GACI,IAAI3pB,EAAI+kB,EACR,OAAO,IAAI8mB,EAAUpuC,KAAKwE,QAASxE,KAAKuvC,iBAAkBvvC,KAAKuyC,eAAgB,CAC3EloB,OAAsF,QAA7E/C,EAA6B,QAAvB/kB,EAAKvC,KAAK2rB,eAA4B,IAAPppB,OAAgB,EAASA,EAAG8nB,cAA2B,IAAP/C,EAAgBA,EAAK,CAAC,EACpH/E,IAAKviB,KAAKuiB,IAEVmM,aAAc,IAAIlM,EAAAA,GAAYxiB,KAAK2rB,QAC9ByB,WAEb,ECbG,MAAMwlB,EAAgBjF,EAAAA,YAAiB,CAACH,EAAOC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBkF,EAAclF,EAAAA,UACbuB,EAASF,GAAaC,IA8C7B,OA7CAtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,IAAIprC,EACJ,IAAKguC,EAAOzC,QACR,MAAO,OAIX,MAAMruB,EAAW,IAAIwrB,EAAAA,GAAkB,CACnCpxB,cAAe02B,EAAOzC,QACtBluB,oBAAqB4tB,EAAM5tB,oBAC3B9O,mBAAwD,kBAA7B08B,EAAM18B,oBAC3B08B,EAAM18B,mBAEZxD,YAA0C,QAA5B/K,EAAKirC,EAAMlgC,mBAAgC,IAAP/K,EAAgBA,EAAKgK,EAAAA,GAAYkB,WACnFo9B,oBAAqB2C,EAAM5C,WAC3BU,0BAA2B,CACvB9N,gBAAiBA,CAACpe,EAAIszB,EAAahxB,IACxB,IAAIixB,EAAmBvzB,EAAIszB,EAAahxB,EAAW,CACtDstB,eAIZ59B,OAAQo8B,EAAMtZ,YACR,CAAEviB,gBAAiB,oBACnBlR,KAEJ,YAAEwlB,EAAW,aAAEC,GAAiBqqB,EAAOzC,QAM7C,OALAruB,EAAS5K,OAAOoR,EAAaC,GACzBsnB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAEhvB,IAAK,IAAIC,EAAAA,GAAY/C,KAEzCozB,EAAY/E,QAAUruB,EACf,KACHA,EAAS3d,SAAS,CACrB,GACF,IACH6rC,EAAAA,WAAgB,KACPkF,EAAY/E,SAGjB+E,EAAY/E,QAAQjsB,cAAc,CAC9BgpB,oBAAqB2C,EAAM5C,YAC7B,GACH,CAAC4C,EAAM5C,aACF+C,EAAAA,cAAoB,MAAO,CAAEnmC,UAAWgmC,EAAMhmC,UAAW2E,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAU+jC,IAAK8C,GAAUrB,EAAQ,IAEtI0D,EAAc3E,YAAc,oBCtDrB,MAAM6E,EACT,WAAItuC,GACA,OAAOxE,KAAKue,QAChB,CACA5e,WAAAA,CAAYyf,EAAIsC,EAAW6tB,GACvBvvC,KAAKof,GAAKA,EACVpf,KAAK0hB,UAAYA,EACjB1hB,KAAKuvC,iBAAmBA,EACxBvvC,KAAKue,SAAWpW,SAAS2K,cAAc,OACvC9S,KAAKue,SAASpS,MAAMxC,OAAS,OAC7B3J,KAAKue,SAASpS,MAAMzC,MAAQ,MAChC,CACAuiB,IAAAA,CAAK9B,GACDnqB,KAAKgsB,KAAO,IAAIoiB,EAAUpuC,KAAKwE,QAASxE,KAAKuvC,iBAAkBvvC,KAAK0hB,UAAW,CAC3E2I,OAAQF,EAAWE,OACnB9H,IAAK4H,EAAW5H,IAChBuL,MAAO3D,EAAW2D,MAClBY,aAAcvE,EAAWuE,cAEjC,CACA1T,MAAAA,GACI,MAAO,CACHoE,GAAIpf,KAAKof,GAEjB,CACAgL,MAAAA,CAAOC,GACH,IAAI9nB,EACiB,QAApBA,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAG6nB,OAAOC,EAAOA,OAC3E,CACAvoB,OAAAA,GACI,IAAIS,EACiB,QAApBA,EAAKvC,KAAKgsB,YAAyB,IAAPzpB,GAAyBA,EAAGT,SAC7D,EC7BG,MAAMixC,EAAgBpF,EAAAA,YAAiB,CAACH,EAAOC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBqF,EAAcrF,EAAAA,UACbuB,EAASF,GAAaC,IA2E7B,OA1EAtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrDH,EAAAA,WAAgB,KACZ,MAAMnQ,EAAkBA,CAACpe,EAAI6zB,EAAcvxB,IAAc,IAAIoxB,EAAiB1zB,EAAIsC,EAAW,CACzFstB,cAEEpC,EAAW,IAAID,EAAAA,EAAkB,CACnC9yB,cAAe02B,EAAOzC,QACtBluB,oBAAqB4tB,EAAM5tB,oBAC3BirB,oBAAqB2C,EAAM5C,WAC3BA,WAAY,CAAC,EACbmC,iBAAkB,CAAC,EACnB5e,WAAYqf,EAAMrf,WAClB6e,0BAA2BQ,EAAMT,iBACjCd,iBAAkB,CACdpf,OAAQ,CACJ2Q,mBAEJ/P,KAAM,CACF+P,oBAGR/O,eAAgB+e,EAAM/e,iBAEpBlM,EAAM,IAAIL,EAAAA,GAAY0qB,IACtB,YAAE3mB,EAAW,aAAEC,GAAiBqqB,EAAOzC,QAM7C,OALAlB,EAAS/3B,OAAOoR,EAAaC,GACzBsnB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAEhvB,QAEpBywB,EAAYlF,QAAUlB,EACf,KACHA,EAAS9qC,SAAS,CACrB,GACF,IACH6rC,EAAAA,WAAgB,KACPqF,EAAYlF,SAGjBkF,EAAYlF,QAAQjsB,cAAc,CAC9BgpB,oBAAqB2C,EAAM5C,YAC7B,GACH,CAAC4C,EAAM5C,aACV+C,EAAAA,WAAgB,KACPqF,EAAYlF,SAGjBkF,EAAYlF,QAAQjsB,cAAc,CAC9BmrB,0BAA2BQ,EAAMT,kBACnC,GACH,CAACS,EAAMT,mBACVY,EAAAA,WAAgB,KACZ,IAAKqF,EAAYlF,QACb,MAAO,OAIX,MAAMlB,EAAWoG,EAAYlF,QACvBznC,EAAaumC,EAASzqB,WAAWxe,IAC/B6pC,EAAMrrB,WACNqrB,EAAMrrB,UAAUE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG3e,GAAQ,CAAE4e,IAAK,IAAIL,EAAAA,GAAY0qB,KACnF,IAEJ,MAAO,KACHvmC,EAAWvE,SAAS,CACvB,GACF,CAAC0rC,EAAMrrB,YACVwrB,EAAAA,WAAgB,KACPqF,EAAYlF,SAGjBkF,EAAYlF,QAAQjsB,cAAc,CAC9B4M,eAAgB+e,EAAM/e,gBACxB,GACH,CAAC+e,EAAM/e,iBACFkf,EAAAA,cAAoB,MAAO,CAAEnmC,UAAWgmC,EAAMhmC,UAAW2E,MAAO,CAAExC,OAAQ,OAAQD,MAAO,QAAU+jC,IAAK8C,GAAUrB,EAAQ,IAEtI6D,EAAc9E,YAAc,mB,oEChF5B,MAsBMuD,EAAcA,KAChBnV,OApB8BhS,EAoBL,CACrB3gB,MAAO,KACPC,OAAQ,KACR8yB,QAAS,YACTpf,KAAM,gXAjBN9d,EAAAA,EAAAA,KAAA,OACIoK,OAAQ0gB,EAAO1gB,OACfD,MAAO2gB,EAAO3gB,MACd+nC,QAASpnB,EAAOoS,QAChBiV,WAAW,EACXlqC,UAAW,eAAepI,UAE1BG,EAAAA,EAAAA,KAAA,QAAMyC,EAAGqoB,EAAOhN,SAdMgN,KAyB5B,EAEO6oB,EAAqB1F,IAI9B,MAAM/K,EAAMkL,EAAAA,SAAc,IACjBH,EAAMpuB,GAGH,uFAAsBouB,EAAMpuB,KAFzB,IAGZ,CAACouB,EAAMpuB,KAEV,OACI+zB,EAAAA,EAAAA,MAAA3zC,EAAAA,SAAA,CAAAJ,SAAA,EACMouC,EAAM4F,kBAAmB7zC,EAAAA,EAAAA,KAAC8zC,EAAAA,GAAW,KACvCF,EAAAA,EAAAA,MAAA,QACI3rC,UAAU,qBACV2E,MAAO,CAAE2gB,QAAS,OAAQwmB,WAAY,UAAWl0C,SAAA,EAEjDG,EAAAA,EAAAA,KAAA,QAAMiI,UAAU,6BAA4BpI,SAAG,cAC/C+zC,EAAAA,EAAAA,MAAA,KACI/P,KAAMX,EACN9d,OAAQ,SACR2e,IAAI,WACJ97B,UAAU,6BAA4BpI,SAAA,EAEtCG,EAAAA,EAAAA,KAAA,QACI4M,MAAO,CACHonC,WAAY,OACZC,aAAc,OAChBp0C,SACL,iBAGDG,EAAAA,EAAAA,KAACiyC,EAAW,YAGrB,C,wFCnEJ,MAAMiC,EAAUA,KAEfN,EAAAA,EAAAA,MAAA,OAAK3rC,UAAU,eAAcpI,SAAA,EACzBG,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,a,cCFL,MAiDDm0C,EAAalG,IAEXjuC,EAAAA,EAAAA,KAAA,OAEI4M,MAAO,CAAEwnC,YAAa,WACtBhqC,OAAQ6jC,EAAM7jC,OACdD,MAAO8jC,EAAM9jC,MACbkqC,KAAKC,EAAAA,EAAAA,GAAW,wBAKtBC,EAAkBtG,IAEhBjuC,EAAAA,EAAAA,KAAA,OAEI4M,MAAO,CAAEwnC,YAAa,WACtBhqC,OAAQ6jC,EAAM7jC,OACdD,MAAO8jC,EAAM9jC,MACbkqC,KAAKC,EAAAA,EAAAA,GAAW,qBAKtBE,EAAS,CACX,uBACA,sBACA,uBACA,oBACA,yBACA,yBAGJ,SAASC,EAAoB7nB,EAAa8nB,GACtC,MAAOrmC,EAAMsmC,GAAWvG,EAAAA,SACpBwG,aAAaC,QAAQjoB,IAiBzB,OAdAwhB,EAAAA,WAAgB,KACZ,MAAMjsC,EAAYiC,IACduwC,EAAQC,aAAaC,QAAQjoB,GAAK,EAOtC,OAJApjB,OAAOrE,iBAAiB,UAAWhD,GAEnCwyC,EAAQC,aAAaC,QAAQjoB,IAEtB,KACHpjB,OAAOpE,oBAAoB,UAAWjD,EAAS,CAClD,GACF,CAACyqB,IAEY,OAATve,EAAgBqmC,EAAermC,CAC1C,CAEO,MAAMylC,EAAcA,KACvB,MAAO/N,EAAO+O,GAAY1G,EAAAA,SACtBwG,aAAaC,QAAQ,wBAA0BL,EAAO,IAQ1D,OALApG,EAAAA,WAAgB,KACZwG,aAAaD,QAAQ,sBAAuB5O,GAC5Cv8B,OAAOurC,cAAc,IAAIC,aAAa,WAAW,GAClD,CAACjP,KAGA6N,EAAAA,EAAAA,MAAA,OACIhnC,MAAO,CAEHxC,OAAQ,OACRmjB,QAAS,OACTwmB,WAAY,SACZviB,QAAS,mBACX3xB,SAAA,EAEFG,EAAAA,EAAAA,KAAA,QAAM4M,MAAO,CAAEqnC,aAAc,OAAQp0C,SAAE,aACvCG,EAAAA,EAAAA,KAAA,UACI4M,MAAO,CAAE2kB,gBAAiB,UAAWF,MAAO,WAC5C4jB,SAAWpwC,GAAMiwC,EAASjwC,EAAEugB,OAAOjiB,OACnCA,MAAO4iC,EAAMlmC,SAEZ20C,EAAOnyC,KAAK0jC,IACT/lC,EAAAA,EAAAA,KAAA,UAAoBmD,MAAO4iC,EAAMlmC,SAC5BkmC,GADQA,SAKnB,EAQP,MAAMmP,EAA4BjH,IAOrC,MAAMC,EAAME,EAAAA,OAA6B,OAElC+G,EAAWC,GAAgBhH,EAAAA,SAAuB,UAElDiH,EAAWC,GAAgBlH,EAAAA,UAAwB,GAEpDrI,EAAQ0O,EACV,sBACA,wBAGJrG,EAAAA,WAAgB,KACZkH,GAAa,GAEb7rC,YAAW,KACP6rC,GAAa,EAAM,GACpB,IAAI,GACR,CAACH,IAEJ/G,EAAAA,WAAgB,KACZ,GAAKF,EAAIK,SAIS,eAAd4G,EAA4B,CAC5B,MAAMruC,EAAamnC,EAAMsH,WAAWrH,EAAIK,SAExC,MAAO,KACHznC,EAAWvE,SAAS,CAE5B,CAEM,GACP,CAAC0rC,EAAMsH,WAAYJ,IAEtB,MAAMK,EAAYpH,EAAAA,SAAc,IACV,eAAd+G,EACQ,cAAalH,EAAMuH,YAExBvH,EAAMuH,WACd,CAACvH,EAAMuH,UAAWL,IAErB,OACIvB,EAAAA,EAAAA,MAAA3zC,EAAAA,SAAA,CAAAJ,SAAA,EACI+zC,EAAAA,EAAAA,MAAA,OACI1F,IAAKA,EACLthC,MAAO,CACH0J,SAAU,WACVlM,OAAQ6jC,EAAM7jC,OAAU,GAAE6jC,EAAM7jC,WAAa,SAC/CvK,SAAA,CAEDw1C,IACGr1C,EAAAA,EAAAA,KAAA,OACI4M,MAAO,CACH6oC,WAAY,iBACZn/B,SAAU,WACVo/B,OAAQ,KACRxrC,IAAK,EACLD,KAAM,EACNE,MAAO,OACPC,OAAQ,OACRmjB,QAAS,OACTooB,eAAgB,SAChB5B,WAAY,UACdl0C,UAEFG,EAAAA,EAAAA,KAACk0C,EAAO,MAGD,UAAdiB,IAAyBn1C,EAAAA,EAAAA,KAACiuC,EAAM2H,MAAK,CAAC7P,MAAOA,QAElD6N,EAAAA,EAAAA,MAAA,OACIhnC,MAAO,CACHipC,OAAQ,UACRrkB,QAAS,UACTjE,QAAS,OACTwmB,WAAY,SACZtiB,SAAU,OACVrnB,OAAQ,QACVvK,SAAA,EAEF+zC,EAAAA,EAAAA,MAAA,OACI3rC,UAAU,mBACV2E,MAAO,CACH2gB,QAAS,OACTwmB,WAAY,SACZ+B,OAAQ,WACVj2C,SAAA,CAEDouC,EAAMsH,aACY,UAAdJ,GACGn1C,EAAAA,EAAAA,KAACm0C,EAAS,CAAC/pC,OAAQ,GAAID,MAAO,MAE9BnK,EAAAA,EAAAA,KAACu0C,EAAc,CAACnqC,OAAQ,GAAID,MAAO,MAE1C8jC,EAAMsH,aACH3B,EAAAA,EAAAA,MAAA,UACIhnC,MAAO,CACHmpC,OAAQ,OACR/B,WAAY,OACZziB,gBAAiB,UACjBukB,OAAQ,UACRzkB,MAAO,UACPjnB,OAAQ,QAEZ6qC,SAAWpwC,IACP,MAAMugB,EAASvgB,EAAEugB,OACjBgwB,EAAahwB,EAAOjiB,MAAM,EAC5BtD,SAAA,EAEFG,EAAAA,EAAAA,KAAA,UAAQmD,MAAM,QAAOtD,SAAE,WACvBG,EAAAA,EAAAA,KAAA,UAAQmD,MAAM,aAAYtD,SAAE,sBAIxCG,EAAAA,EAAAA,KAAA,QAAM4M,MAAO,CAAE6xB,SAAU,MACzBz+B,EAAAA,EAAAA,KAAC2zC,EAAAA,EAAiB,CACd9zB,GAAI21B,EACJ3B,gBAAiB5F,EAAM4F,uBAGhC,EAIEmC,EAA2B/H,IAQhCjuC,EAAAA,EAAAA,KAACL,EAAAA,EAAW,CAAAE,SACPA,KAAMG,EAAAA,EAAAA,KAACk1C,EAAwB,IAAKjH,K,8KCjSjD,MAAM5C,EAAa,CACf4K,gBAAiBA,KAETj2C,EAAAA,EAAAA,KAAA,UACI4M,MAAO,CACHzC,MAAO,OACPC,OAAQ,QAEZiqC,IAAI,yBAIhB6B,eAAgBA,KAERl2C,EAAAA,EAAAA,KAAA,OAAK4M,MAAO,CAAE4kB,QAAS,OAAQH,MAAO,SAAUxxB,SAC3C,2CAmCjB,EA7B8BouC,IAqBtBjuC,EAAAA,EAAAA,KAAC+wC,EAAAA,GAAa,CACV1F,WAAYA,EACZ2G,QAtBS5tC,IACbA,EAAM4e,IAAIP,SAAS,CACf5C,GAAI,UACJsC,UAAW,kBACX+N,SAAU,WAGd9rB,EAAM4e,IAAIP,SAAS,CACf5C,GAAI,UACJsC,UAAW,kBACX+N,SAAU,WAGd9rB,EAAM4e,IAAIP,SAAS,CACf5C,GAAI,UACJsC,UAAW,kBACb,EAOEla,UAAY,GAAEgmC,EAAMlI,OAAS,2BC9C5BoQ,EAAc,CAAC,EACfC,EAAe,UACfC,EAAW,CACtB,GAAM,kBACN,MAAS,UACT,YAAe,0EACf,OAAU,iCACV,cAAiB,WACjB,KAAQ,mBACR,UAAa,wBACb,OAAS,EACT,UAAY,EACZ,QAAW,wHACX,KAAQ,GACR,QAAW,UACX,YAAe,CAAC,EAChB,QAAW,kBACX,SAAY,CACV,MAAS,SACT,UAAa,yBAEf,KAAQ,CACN,MAAS,WACT,UAAa,4BAGJC,EAAS,CAEtB,EAMaC,EAAM,GACnB,SAASC,EAAkBvI,GACzB,MAAMwI,EAAc,CAClBC,EAAG,IACHC,WAAY,aACZC,KAAM,OACNC,GAAI,KACJl+B,EAAG,IACHm+B,IAAK,UACF,YACA7I,EAAM5C,YAEX,OAAO,UAAM,WAAW,CACtBxrC,SAAU,EAAC,SAAK42C,EAAYI,GAAI,CAC9Bh3B,GAAI,UACJhgB,SAAU,YACR,MAAM,SAAK42C,EAAY99B,EAAG,CAC5B9Y,SAAU,4EACR,MAAM,SAAK42C,EAAY99B,EAAG,CAC5B9Y,SAAU,gGACR,MAAM,UAAM42C,EAAYE,WAAY,CACtC92C,SAAU,CAAC,MAAM,SAAK42C,EAAY99B,EAAG,CACnC9Y,SAAU,6JACR,QACF,MAAM,UAAM42C,EAAY99B,EAAG,CAC7B9Y,SAAU,CAAC,mGAAmG,SAAK42C,EAAYC,EAAG,CAChI7S,KAAM,sDACNhkC,SAAU,SACR,SAAS,SAAK42C,EAAYC,EAAG,CAC/B7S,KAAM,6CACNhkC,SAAU,SACR,OACF,MAAM,UAAM42C,EAAY99B,EAAG,CAC7B9Y,SAAU,CAAC,6EAA6E,SAAK42C,EAAYG,KAAM,CAC7G/2C,SAAU,uBACR,6FAA6F,SAAK42C,EAAYG,KAAM,CACtH/2C,SAAU,WACR,OACF,MAAM,UAAM42C,EAAYE,WAAY,CACtC92C,SAAU,CAAC,MAAM,UAAM42C,EAAY99B,EAAG,CACpC9Y,SAAU,CAAC,YAAY,SAAK42C,EAAYC,EAAG,CACzC7S,KAAM,8BACNhkC,SAAU,oBACR,oDACF,QACF,MAAM,SAAK42C,EAAYK,IAAK,CAC9Bj3C,UAAU,SAAK42C,EAAYG,KAAM,CAC/B3uC,UAAW,eACX8uC,WAAY,2DACZl3C,SAAU,uGAEV,MAAM,SAAK,KAAyB,CACtC21C,UAAW,kBACXprC,OAAQ,IACRwrC,MAAO,MAGb,CACe,SAASoB,EAAW/I,EAAQ,CAAC,GAC1C,MAAOgJ,QAASC,GAAa,KACxB,YACAjJ,EAAM5C,YAEX,OAAO6L,GAAY,SAAKA,EAAW,IAC9BjJ,EACHpuC,UAAU,SAAK22C,EAAmB,IAC7BvI,MAEFuI,EAAkBvI,EACzB,C,wDC9EA,MAAMkJ,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBhM,GAC/B,MAAMiM,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAf/L,EACFA,EAAWiM,GAGb,IAAIA,KAAsBjM,EACnC,GACA,CAACiM,EAAmBjM,GAExB,CAWO,SAASkM,EAAYtJ,GAE1B,IAAIuJ,EAWJ,OAREA,EADEvJ,EAAMwJ,qBAEsB,mBAArBxJ,EAAM5C,WACT4C,EAAM5C,WAAW8L,GACjBlJ,EAAM5C,YAAc8L,EAEVE,EAAiBpJ,EAAM5C,YAGlC,gBACL+L,EAAW9H,SACX,CAACnsC,MAAOq0C,GACRvJ,EAAMpuC,SAEV,C","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/iframe-dockview/src/app.tsx","webpack://dockview-docs/./docs/advanced/iframe.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, coordinates, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import { DockviewReact, DockviewReadyEvent } from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    iframeComponent: () => {\n        return (\n            <iframe\n                style={{\n                    width: '100%',\n                    height: '100%',\n                }}\n                src=\"https://dockview.dev\"\n            />\n        );\n    },\n    basicComponent: () => {\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                {'This panel is just a usual component '}\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'iframeComponent',\n            renderer: 'always',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'iframeComponent',\n            renderer: 'always',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'basicComponent',\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nexport default App;\n","\n\nexport const frontMatter = {};\nexport const contentTitle = 'iframes';\nexport const metadata = {\n  \"id\": \"advanced/iframe\",\n  \"title\": \"iframes\",\n  \"description\": \"iframes reload when repositioned within the DOM which can cause issues.\",\n  \"source\": \"@site/docs/advanced/iframe.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/iframe\",\n  \"permalink\": \"/docs/advanced/iframe\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/iframe.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Events\",\n    \"permalink\": \"/docs/advanced/events\"\n  },\n  \"next\": {\n    \"title\": \"Keyboard\",\n    \"permalink\": \"/docs/advanced/keyboard\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewWithIFrames from '@site/sandboxes/iframe-dockview/src/app';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"iframes\",\n      children: \"iframes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iframes reload when repositioned within the DOM which can cause issues.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iFrames required special attention because of a particular behaviour in how iFrames render:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Re-parenting an iFrame will reload the contents of the iFrame or the rephrase this, moving an iFrame within the DOM will cause a reload of its contents.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find many examples of discussions on this. Two reputable forums for example are linked \", _jsx(_components.a, {\n        href: \"https://bugzilla.mozilla.org/show_bug.cgi?id=254144\",\n        children: \"here\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://github.com/whatwg/html/issues/5484\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To ensure iFrames work as expected you should render them in panels with \", _jsx(_components.code, {\n        children: \"renderer: 'always'\"\n      }), \" to ensure they are never removed from the DOM, alternatively set the defaultRenderer to \", _jsx(_components.code, {\n        children: \"always\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"See the \", _jsx(_components.a, {\n          href: \"/docs/core/panels/rendering\",\n          children: \"Panel Rendering\"\n        }), \" section for more information of render modes.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        metastring: \"title=\\\"Example of a panel using an alternative renderer\\\"\",\n        children: \"api.addPanel({\\n  id: 'my_panel_id',\\n  component: 'my_component',\\n  renderer: 'always',\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      sandboxId: \"iframe-dockview\",\n      height: 600,\n      react: DockviewWithIFrames\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","coord","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","o","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","CodeSandboxButton","_jsxs","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","zIndex","justifyContent","react","margin","cursor","border","MultiFrameworkContainer","iframeComponent","basicComponent","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","a","blockquote","code","h1","pre","metastring","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}