{"version":3,"file":"assets/js/5093.47be7b90.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/react/dockview/resize-container/src/app.tsx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nfunction typeValidate3(data, path) {\n    if (typeof data.id !== 'string') {\n        throw new Error(`${path}.id must be a string`);\n    }\n    if (typeof data.activeView !== 'string' ||\n        typeof data.activeView !== 'undefined') {\n        throw new Error(`${path}.activeView must be a string of undefined`);\n    }\n}\nfunction typeValidate2(data, path) {\n    if (typeof data.size !== 'number' && typeof data.size !== 'undefined') {\n        throw new Error(`${path}.size must be a number or undefined`);\n    }\n    if (typeof data.visible !== 'boolean' &&\n        typeof data.visible !== 'undefined') {\n        throw new Error(`${path}.visible must be a boolean or undefined`);\n    }\n    if (data.type === 'leaf') {\n        if (typeof data.data !== 'object' ||\n            data.data === null ||\n            Array.isArray(data.data)) {\n            throw new Error('object must be a non-null object');\n        }\n        typeValidate3(data.data, `${path}.data`);\n    }\n    else if (data.type === 'branch') {\n        if (!Array.isArray(data.data)) {\n            throw new Error(`${path}.data must be an array`);\n        }\n    }\n    else {\n        throw new Error(`${path}.type must be onew of {'branch', 'leaf'}`);\n    }\n}\nfunction typeValidate(data) {\n    if (typeof data !== 'object' || data === null) {\n        throw new Error('object must be a non-null object');\n    }\n    const { grid, panels, activeGroup, floatingGroups } = data;\n    if (typeof grid !== 'object' || grid === null) {\n        throw new Error(\"'.grid' must be a non-null object\");\n    }\n    if (typeof grid.height !== 'number') {\n        throw new Error(\"'.grid.height' must be a number\");\n    }\n    if (typeof grid.width !== 'number') {\n        throw new Error(\"'.grid.width' must be a number\");\n    }\n    if (typeof grid.root !== 'object' || grid.root === null) {\n        throw new Error(\"'.grid.root' must be a non-null object\");\n    }\n    if (grid.root.type !== 'branch') {\n        throw new Error(\".grid.root.type must be of type 'branch'\");\n    }\n    if (grid.orientation !== Orientation.HORIZONTAL &&\n        grid.orientation !== Orientation.VERTICAL) {\n        throw new Error(`'.grid.width' must be one of {${Orientation.HORIZONTAL}, ${Orientation.VERTICAL}}`);\n    }\n    typeValidate2(grid.root, '.grid.root');\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    constructor(options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, coordinates, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, PROPERTY_KEYS, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            parentElement: domRef.current,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const dockview = new DockviewComponent(Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            params: {\n                title: 'Panel 3',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nconst Container = (props: any) => {\n    const [value, setValue] = React.useState<string>('50');\n\n    return (\n        <div\n            style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n            <input\n                onChange={(event) => setValue(event.target.value)}\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                value={value}\n            />\n            <div style={{ height: `${value}%`, width: `${value}%` }}>\n                <App {...props} />\n            </div>\n        </div>\n    );\n};\n\nexport default Container;\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","panel","isVisible","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","get","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","updateOptions","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","coord","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","_ref","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","o","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","dockview","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","default","_jsx","App","setValue","_jsxs","flexDirection","onChange"],"sourceRoot":""}