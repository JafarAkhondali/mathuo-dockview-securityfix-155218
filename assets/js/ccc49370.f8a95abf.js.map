{"version":3,"file":"assets/js/ccc49370.f8a95abf.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/Metadata/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/tocUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useTOCHighlight.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/Tree.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogPostPaginator(props) {\n  const {nextItem, prevItem} = props;\n  return (\n    <nav\n      className=\"pagination-nav docusaurus-mt-lg\"\n      aria-label={translate({\n        id: 'theme.blog.post.paginator.navAriaLabel',\n        message: 'Blog post page navigation',\n        description: 'The ARIA label for the blog posts pagination',\n      })}>\n      {prevItem && (\n        <PaginatorNavLink\n          {...prevItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.newerPost\"\n              description=\"The blog post button label to navigate to the newer/previous post\">\n              Newer Post\n            </Translate>\n          }\n        />\n      )}\n      {nextItem && (\n        <PaginatorNavLink\n          {...nextItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.olderPost\"\n              description=\"The blog post button label to navigate to the older/next post\">\n              Older Post\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {PageMetadata} from '@docusaurus/theme-common';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nexport default function BlogPostPageMetadata() {\n  const {assets, metadata} = useBlogPost();\n  const {title, description, date, tags, authors, frontMatter} = metadata;\n  const {keywords} = frontMatter;\n  const image = assets.image ?? frontMatter.image;\n  return (\n    <PageMetadata\n      title={title}\n      description={description}\n      keywords={keywords}\n      image={image}>\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"article:published_time\" content={date} />\n      {/* TODO double check those article meta array syntaxes, see https://ogp.me/#array */}\n      {authors.some((author) => author.url) && (\n        <meta\n          property=\"article:author\"\n          content={authors\n            .map((author) => author.url)\n            .filter(Boolean)\n            .join(',')}\n        />\n      )}\n      {tags.length > 0 && (\n        <meta\n          property=\"article:tag\"\n          content={tags.map((tag) => tag.label).join(',')}\n        />\n      )}\n    </PageMetadata>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {HtmlClassNameProvider, ThemeClassNames} from '@docusaurus/theme-common';\nimport {BlogPostProvider, useBlogPost} from '@docusaurus/theme-common/internal';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport BlogPostPaginator from '@theme/BlogPostPaginator';\nimport BlogPostPageMetadata from '@theme/BlogPostPage/Metadata';\nimport TOC from '@theme/TOC';\nimport Unlisted from '@theme/Unlisted';\nfunction BlogPostPageContent({sidebar, children}) {\n  const {metadata, toc} = useBlogPost();\n  const {nextItem, prevItem, frontMatter, unlisted} = metadata;\n  const {\n    hide_table_of_contents: hideTableOfContents,\n    toc_min_heading_level: tocMinHeadingLevel,\n    toc_max_heading_level: tocMaxHeadingLevel,\n  } = frontMatter;\n  return (\n    <BlogLayout\n      sidebar={sidebar}\n      toc={\n        !hideTableOfContents && toc.length > 0 ? (\n          <TOC\n            toc={toc}\n            minHeadingLevel={tocMinHeadingLevel}\n            maxHeadingLevel={tocMaxHeadingLevel}\n          />\n        ) : undefined\n      }>\n      {unlisted && <Unlisted />}\n      <BlogPostItem>{children}</BlogPostItem>\n\n      {(nextItem || prevItem) && (\n        <BlogPostPaginator nextItem={nextItem} prevItem={prevItem} />\n      )}\n    </BlogLayout>\n  );\n}\nexport default function BlogPostPage(props) {\n  const BlogPostContent = props.content;\n  return (\n    <BlogPostProvider content={props.content} isBlogPostPage>\n      <HtmlClassNameProvider\n        className={clsx(\n          ThemeClassNames.wrapper.blogPages,\n          ThemeClassNames.page.blogPostPage,\n        )}>\n        <BlogPostPageMetadata />\n        <BlogPostPageContent sidebar={props.sidebar}>\n          <BlogPostContent />\n        </BlogPostPageContent>\n      </HtmlClassNameProvider>\n    </BlogPostProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableOfContents\":\"tableOfContents_TN1Q\",\"docItemContainer\":\"docItemContainer_JtJJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport TOCItems from '@theme/TOCItems';\nimport styles from './styles.module.css';\n// Using a custom className\n// This prevents TOCInline/TOCCollapsible getting highlighted by mistake\nconst LINK_CLASS_NAME = 'table-of-contents__link toc-highlight';\nconst LINK_ACTIVE_CLASS_NAME = 'table-of-contents__link--active';\nexport default function TOC({className, ...props}) {\n  return (\n    <div className={clsx(styles.tableOfContents, 'thin-scrollbar', className)}>\n      <TOCItems\n        {...props}\n        linkClassName={LINK_CLASS_NAME}\n        linkActiveClassName={LINK_ACTIVE_CLASS_NAME}\n      />\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport type {TOCItem} from '@docusaurus/mdx-loader';\n\nexport type TOCTreeNode = {\n  readonly value: string;\n  readonly id: string;\n  readonly level: number;\n  readonly children: readonly TOCTreeNode[];\n};\n\nfunction treeifyTOC(flatTOC: readonly TOCItem[]): TOCTreeNode[] {\n  const headings = flatTOC.map((heading) => ({\n    ...heading,\n    parentIndex: -1,\n    children: [] as TOCTreeNode[],\n  }));\n\n  // Keep track of which previous index would be the current heading's direct\n  // parent. Each entry <i> is the last index of the `headings` array at heading\n  // level <i>. We will modify these indices as we iterate through all headings.\n  // e.g. if an ### H3 was last seen at index 2, then prevIndexForLevel[3] === 2\n  // indices 0 and 1 will remain unused.\n  const prevIndexForLevel = Array<number>(7).fill(-1);\n\n  headings.forEach((curr, currIndex) => {\n    // Take the last seen index for each ancestor level. the highest index will\n    // be the direct ancestor of the current heading.\n    const ancestorLevelIndexes = prevIndexForLevel.slice(2, curr.level);\n    curr.parentIndex = Math.max(...ancestorLevelIndexes);\n    // Mark that curr.level was last seen at the current index.\n    prevIndexForLevel[curr.level] = currIndex;\n  });\n\n  const rootNodes: TOCTreeNode[] = [];\n\n  // For a given parentIndex, add each Node into that parent's `children` array\n  headings.forEach((heading) => {\n    const {parentIndex, ...rest} = heading;\n    if (parentIndex >= 0) {\n      headings[parentIndex]!.children.push(rest);\n    } else {\n      rootNodes.push(rest);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect. Memoized for performance.\n */\nexport function useTreeifiedTOC(toc: TOCItem[]): readonly TOCTreeNode[] {\n  return useMemo(() => treeifyTOC(toc), [toc]);\n}\n\nfunction filterTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCTreeNode[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): TOCTreeNode[] {\n  function isValid(item: TOCTreeNode) {\n    return item.level >= minHeadingLevel && item.level <= maxHeadingLevel;\n  }\n\n  return toc.flatMap((item) => {\n    const filteredChildren = filterTOC({\n      toc: item.children,\n      minHeadingLevel,\n      maxHeadingLevel,\n    });\n    if (isValid(item)) {\n      return [\n        {\n          ...item,\n          children: filteredChildren,\n        },\n      ];\n    }\n    return filteredChildren;\n  });\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect, applying the `minHeadingLevel` and `maxHeadingLevel`.\n * Memoized for performance.\n *\n * **Important**: this is not the same as `useTreeifiedTOC(toc.filter(...))`,\n * because we have to filter the TOC after it has been treeified. This is mostly\n * to ensure that weird TOC structures preserve their semantics. For example, an\n * h3-h2-h4 sequence should not be treeified as an \"h3 > h4\" hierarchy with\n * min=3, max=4, but should rather be \"[h3, h4]\" (since the h2 heading has split\n * the two headings and they are not parent-children)\n */\nexport function useFilteredAndTreeifiedTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCItem[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): readonly TOCTreeNode[] {\n  return useMemo(\n    () => filterTOC({toc: treeifyTOC(toc), minHeadingLevel, maxHeadingLevel}),\n    [toc, minHeadingLevel, maxHeadingLevel],\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useRef} from 'react';\nimport {useThemeConfig} from '../utils/useThemeConfig';\n\n// TODO make the hardcoded theme-classic classnames configurable (or add them\n// to ThemeClassNames?)\n\n/**\n * If the anchor has no height and is just a \"marker\" in the DOM; we'll use the\n * parent (normally the link text) rect boundaries instead\n */\nfunction getVisibleBoundingClientRect(element: HTMLElement): DOMRect {\n  const rect = element.getBoundingClientRect();\n  const hasNoHeight = rect.top === rect.bottom;\n  if (hasNoHeight) {\n    return getVisibleBoundingClientRect(element.parentNode as HTMLElement);\n  }\n  return rect;\n}\n\n/**\n * Considering we divide viewport into 2 zones of each 50vh, this returns true\n * if an element is in the first zone (i.e., appear in viewport, near the top)\n */\nfunction isInViewportTopHalf(boundingRect: DOMRect) {\n  return boundingRect.top > 0 && boundingRect.bottom < window.innerHeight / 2;\n}\n\nfunction getAnchors({\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): HTMLElement[] {\n  const selectors = [];\n  for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n    selectors.push(`h${i}.anchor`);\n  }\n  return Array.from(document.querySelectorAll(selectors.join()));\n}\n\nfunction getActiveAnchor(\n  anchors: HTMLElement[],\n  {\n    anchorTopOffset,\n  }: {\n    anchorTopOffset: number;\n  },\n): Element | null {\n  // Naming is hard: The \"nextVisibleAnchor\" is the first anchor that appear\n  // under the viewport top boundary. It does not mean this anchor is visible\n  // yet, but if user continues scrolling down, it will be the first to become\n  // visible\n  const nextVisibleAnchor = anchors.find((anchor) => {\n    const boundingRect = getVisibleBoundingClientRect(anchor);\n    return boundingRect.top >= anchorTopOffset;\n  });\n\n  if (nextVisibleAnchor) {\n    const boundingRect = getVisibleBoundingClientRect(nextVisibleAnchor);\n    // If anchor is in the top half of the viewport: it is the one we consider\n    // \"active\" (unless it's too close to the top and and soon to be scrolled\n    // outside viewport)\n    if (isInViewportTopHalf(boundingRect)) {\n      return nextVisibleAnchor;\n    }\n    // If anchor is in the bottom half of the viewport, or under the viewport,\n    // we consider the active anchor is the previous one. This is because the\n    // main text appearing in the user screen mostly belong to the previous\n    // anchor. Returns null for the first anchor, see\n    // https://github.com/facebook/docusaurus/issues/5318\n    return anchors[anchors.indexOf(nextVisibleAnchor) - 1] ?? null;\n  }\n  // No anchor under viewport top (i.e. we are at the bottom of the page),\n  // highlight the last anchor found\n  return anchors[anchors.length - 1] ?? null;\n}\n\nfunction getLinkAnchorValue(link: HTMLAnchorElement): string {\n  return decodeURIComponent(link.href.substring(link.href.indexOf('#') + 1));\n}\n\nfunction getLinks(linkClassName: string) {\n  return Array.from(\n    document.getElementsByClassName(linkClassName),\n  ) as HTMLAnchorElement[];\n}\n\nfunction getNavbarHeight(): number {\n  // Not ideal to obtain actual height this way\n  // Using TS ! (not ?) because otherwise a bad selector would be un-noticed\n  return document.querySelector('.navbar')!.clientHeight;\n}\n\nfunction useAnchorTopOffsetRef() {\n  const anchorTopOffsetRef = useRef<number>(0);\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig();\n\n  useEffect(() => {\n    anchorTopOffsetRef.current = hideOnScroll ? 0 : getNavbarHeight();\n  }, [hideOnScroll]);\n\n  return anchorTopOffsetRef;\n}\n\nexport type TOCHighlightConfig = {\n  /** A class name that all TOC links share. */\n  linkClassName: string;\n  /** The class name applied to the active (highlighted) link. */\n  linkActiveClassName: string;\n  /**\n   * The minimum heading level that the TOC includes. Only headings that are in\n   * this range will be eligible as \"active heading\".\n   */\n  minHeadingLevel: number;\n  /** @see {@link TOCHighlightConfig.minHeadingLevel} */\n  maxHeadingLevel: number;\n};\n\n/**\n * Side-effect that applies the active class name to the TOC heading that the\n * user is currently viewing. Disabled when `config` is undefined.\n */\nexport function useTOCHighlight(config: TOCHighlightConfig | undefined): void {\n  const lastActiveLinkRef = useRef<HTMLAnchorElement | undefined>(undefined);\n\n  const anchorTopOffsetRef = useAnchorTopOffsetRef();\n\n  useEffect(() => {\n    if (!config) {\n      // No-op, highlighting is disabled\n      return () => {};\n    }\n\n    const {\n      linkClassName,\n      linkActiveClassName,\n      minHeadingLevel,\n      maxHeadingLevel,\n    } = config;\n\n    function updateLinkActiveClass(link: HTMLAnchorElement, active: boolean) {\n      if (active) {\n        if (lastActiveLinkRef.current && lastActiveLinkRef.current !== link) {\n          lastActiveLinkRef.current.classList.remove(linkActiveClassName);\n        }\n        link.classList.add(linkActiveClassName);\n        lastActiveLinkRef.current = link;\n        // link.scrollIntoView({block: 'nearest'});\n      } else {\n        link.classList.remove(linkActiveClassName);\n      }\n    }\n\n    function updateActiveLink() {\n      const links = getLinks(linkClassName);\n      const anchors = getAnchors({minHeadingLevel, maxHeadingLevel});\n      const activeAnchor = getActiveAnchor(anchors, {\n        anchorTopOffset: anchorTopOffsetRef.current,\n      });\n      const activeLink = links.find(\n        (link) => activeAnchor && activeAnchor.id === getLinkAnchorValue(link),\n      );\n\n      links.forEach((link) => {\n        updateLinkActiveClass(link, link === activeLink);\n      });\n    }\n\n    document.addEventListener('scroll', updateActiveLink);\n    document.addEventListener('resize', updateActiveLink);\n\n    updateActiveLink();\n\n    return () => {\n      document.removeEventListener('scroll', updateActiveLink);\n      document.removeEventListener('resize', updateActiveLink);\n    };\n  }, [config, anchorTopOffsetRef]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\n// Recursive component rendering the toc tree\nfunction TOCItemTree({toc, className, linkClassName, isChild}) {\n  if (!toc.length) {\n    return null;\n  }\n  return (\n    <ul className={isChild ? undefined : className}>\n      {toc.map((heading) => (\n        <li key={heading.id}>\n          <Link\n            to={`#${heading.id}`}\n            className={linkClassName ?? undefined}\n            // Developer provided the HTML, so assume it's safe.\n            dangerouslySetInnerHTML={{__html: heading.value}}\n          />\n          <TOCItemTree\n            isChild\n            toc={heading.children}\n            className={className}\n            linkClassName={linkClassName}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n// Memo only the tree root is enough\nexport default React.memo(TOCItemTree);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useMemo} from 'react';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport {\n  useTOCHighlight,\n  useFilteredAndTreeifiedTOC,\n} from '@docusaurus/theme-common/internal';\nimport TOCItemTree from '@theme/TOCItems/Tree';\nexport default function TOCItems({\n  toc,\n  className = 'table-of-contents table-of-contents__left-border',\n  linkClassName = 'table-of-contents__link',\n  linkActiveClassName = undefined,\n  minHeadingLevel: minHeadingLevelOption,\n  maxHeadingLevel: maxHeadingLevelOption,\n  ...props\n}) {\n  const themeConfig = useThemeConfig();\n  const minHeadingLevel =\n    minHeadingLevelOption ?? themeConfig.tableOfContents.minHeadingLevel;\n  const maxHeadingLevel =\n    maxHeadingLevelOption ?? themeConfig.tableOfContents.maxHeadingLevel;\n  const tocTree = useFilteredAndTreeifiedTOC({\n    toc,\n    minHeadingLevel,\n    maxHeadingLevel,\n  });\n  const tocHighlightConfig = useMemo(() => {\n    if (linkClassName && linkActiveClassName) {\n      return {\n        linkClassName,\n        linkActiveClassName,\n        minHeadingLevel,\n        maxHeadingLevel,\n      };\n    }\n    return undefined;\n  }, [linkClassName, linkActiveClassName, minHeadingLevel, maxHeadingLevel]);\n  useTOCHighlight(tocHighlightConfig);\n  return (\n    <TOCItemTree\n      toc={tocTree}\n      className={className}\n      linkClassName={linkClassName}\n      {...props}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `Listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn((_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        this.removeDropTarget();\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const _onDidFocus = panel.view.content.onDidFocus;\n            const _onDidBlur = panel.view.content.onDidBlur;\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent, } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionsElement) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionsElement) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionsElement) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\n// TODO find a better way to initialize and avoid needing null checks\nconst NOT_INITIALIZED_MESSAGE = 'DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.addDisposables(this._onDidLocationChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            if (!event.isVisible && this.isVisible) {\n                this._onDidVisibilityChange.fire(event);\n            }\n            else if (event.isVisible &&\n                !this.isVisible &&\n                this.group.model.isPanelActive(this.panel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.view.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a, _b;\n        return createComponent(id, componentName, (_a = this.accessor.options.components) !== null && _a !== void 0 ? _a : {}, this.accessor.options.frameworkComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a, _b;\n        if (componentName) {\n            return createComponent(id, componentName, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n        }\n        else if (this.accessor.options.defaultTabComponent) {\n            return createComponent(id, this.accessor.options.defaultTabComponent, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else {\n            return new DefaultTab();\n        }\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nfunction typeValidate3(data, path) {\n    if (typeof data.id !== 'string') {\n        throw new Error(`${path}.id must be a string`);\n    }\n    if (typeof data.activeView !== 'string' ||\n        typeof data.activeView !== 'undefined') {\n        throw new Error(`${path}.activeView must be a string of undefined`);\n    }\n}\nfunction typeValidate2(data, path) {\n    if (typeof data.size !== 'number' && typeof data.size !== 'undefined') {\n        throw new Error(`${path}.size must be a number or undefined`);\n    }\n    if (typeof data.visible !== 'boolean' &&\n        typeof data.visible !== 'undefined') {\n        throw new Error(`${path}.visible must be a boolean or undefined`);\n    }\n    if (data.type === 'leaf') {\n        if (typeof data.data !== 'object' ||\n            data.data === null ||\n            Array.isArray(data.data)) {\n            throw new Error('object must be a non-null object');\n        }\n        typeValidate3(data.data, `${path}.data`);\n    }\n    else if (data.type === 'branch') {\n        if (!Array.isArray(data.data)) {\n            throw new Error(`${path}.data must be an array`);\n        }\n    }\n    else {\n        throw new Error(`${path}.type must be onew of {'branch', 'leaf'}`);\n    }\n}\nfunction typeValidate(data) {\n    if (typeof data !== 'object' || data === null) {\n        throw new Error('object must be a non-null object');\n    }\n    const { grid, panels, activeGroup, floatingGroups } = data;\n    if (typeof grid !== 'object' || grid === null) {\n        throw new Error(\"'.grid' must be a non-null object\");\n    }\n    if (typeof grid.height !== 'number') {\n        throw new Error(\"'.grid.height' must be a number\");\n    }\n    if (typeof grid.width !== 'number') {\n        throw new Error(\"'.grid.width' must be a number\");\n    }\n    if (typeof grid.root !== 'object' || grid.root === null) {\n        throw new Error(\"'.grid.root' must be a non-null object\");\n    }\n    if (grid.root.type !== 'branch') {\n        throw new Error(\".grid.root.type must be of type 'branch'\");\n    }\n    if (grid.orientation !== Orientation.HORIZONTAL &&\n        grid.orientation !== Orientation.VERTICAL) {\n        throw new Error(`'.grid.width' must be one of {${Orientation.HORIZONTAL}, ${Orientation.VERTICAL}}`);\n    }\n    typeValidate2(grid.root, '.grid.root');\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    constructor(options) {\n        var _a, _b;\n        super({\n            proportionalLayout: true,\n            orientation: (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            styles: options.styles,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    if (position === 'center' && this.gridview.length !== 0) {\n                        /**\n                         * for external events only show the four-corner drag overlays, disable\n                         * the center position so that external drag events can fall through to the group\n                         * and panel drop target handlers\n                         */\n                        return false;\n                    }\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: 'edge',\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_b = this.options.rootOverlayModel) !== null && _b !== void 0 ? _b : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId(); //item.id;\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else {\n                    if (this.getPanel(group.id)) {\n                        const removedGroup = this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                        });\n                        removedGroup.model.renderContainer =\n                            this.overlayRenderContainer;\n                        removedGroup.model.location = { type: 'grid' };\n                        returnedGroup = removedGroup;\n                    }\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error(err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            group.model.openPanel(item, { skipSetGroupActive: true });\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: !!popoutReferenceGroup,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.height, group.width);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_orientation = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        const changed_floatingGroupBounds = options.floatingGroupBounds !== undefined &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = options.rootOverlayModel !== undefined &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(referenceGroup);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const o = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, o, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n            this.doSetGroupAndPanelActive(group);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup(options);\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart, } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent({\n            parentElement: domRef.current,\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkTabComponents,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n            disableFloatingGroups: props.disableFloatingGroups,\n            floatingGroupBounds: props.floatingGroupBounds,\n            defaultRenderer: props.defaultRenderer,\n            debug: props.debug,\n            rootOverlayModel: props.rootOverlayModel,\n            locked: props.locked,\n            disableDnd: props.disableDnd,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.locked = !!props.locked;\n    }, [props.locked]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableDnd: props.disableDnd,\n        });\n    }, [props.disableDnd]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            floatingGroupBounds: props.floatingGroupBounds,\n        });\n    }, [props.floatingGroupBounds]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableFloatingGroups: props.disableFloatingGroups,\n        });\n    }, [props.disableFloatingGroups]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            rootOverlayModel: props.rootOverlayModel,\n        });\n    }, [props.rootOverlayModel]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport { IS_PROD } from '../flags';\n\nconst frameworks = [\n    { value: 'JavaScript', label: 'JavaScript' },\n    { value: 'React', label: 'React' },\n    { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nfunction useActiveFramework(): [string, (value: string) => void] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    return [IS_PROD ? frameworks[1].value : value, setter];\n}\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    if (IS_PROD) {\n        return null;\n    }\n\n    return (\n        <select onChange={onChange} value={activeFramework}>\n            {frameworks.map((framework) => {\n                return (\n                    <option value={framework.value}>{framework.label}</option>\n                );\n            })}\n        </select>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n"],"names":["BlogPostPaginator","props","nextItem","prevItem","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","subLabel","Translate","isNext","BlogPostPageMetadata","assets","metadata","useBlogPost","title","date","tags","authors","frontMatter","keywords","image","PageMetadata","property","content","some","author","url","map","filter","Boolean","join","length","tag","label","BlogPostPageContent","_ref","sidebar","toc","unlisted","hide_table_of_contents","hideTableOfContents","toc_min_heading_level","tocMinHeadingLevel","toc_max_heading_level","tocMaxHeadingLevel","BlogLayout","TOC","minHeadingLevel","maxHeadingLevel","undefined","Unlisted","BlogPostItem","BlogPostPage","BlogPostContent","BlogPostProvider","isBlogPostPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogPostPage","LINK_CLASS_NAME","LINK_ACTIVE_CLASS_NAME","styles","tableOfContents","TOCItems","linkClassName","linkActiveClassName","treeifyTOC","flatTOC","headings","heading","parentIndex","prevIndexForLevel","Array","fill","forEach","curr","currIndex","ancestorLevelIndexes","slice","level","Math","max","rootNodes","rest","push","filterTOC","flatMap","item","filteredChildren","isValid","getVisibleBoundingClientRect","element","rect","getBoundingClientRect","top","bottom","parentNode","getActiveAnchor","anchors","_ref2","anchorTopOffset","nextVisibleAnchor","find","anchor","boundingRect","window","innerHeight","isInViewportTopHalf","indexOf","useAnchorTopOffsetRef","anchorTopOffsetRef","useRef","navbar","hideOnScroll","useThemeConfig","useEffect","current","document","querySelector","clientHeight","useTOCHighlight","config","lastActiveLinkRef","updateActiveLink","links","from","getElementsByClassName","getLinks","selectors","i","querySelectorAll","getAnchors","activeAnchor","activeLink","link","decodeURIComponent","href","substring","getLinkAnchorValue","active","classList","remove","add","updateLinkActiveClass","addEventListener","removeEventListener","TOCItemTree","isChild","Link","to","dangerouslySetInnerHTML","__html","value","React","minHeadingLevelOption","maxHeadingLevelOption","themeConfig","tocTree","useMemo","useFilteredAndTreeifiedTOC","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","_key","listener","disposables","child","dispose","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","index","splice","fire","e","queueMicrotask","delete","addDisposableWindowListener","addDisposableListener","events","Map","size","set","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","contains","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","getElementsByTagName","call","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","width","height","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","sequentialNumberGenerator","next","toString","range","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","SplitviewApi","component","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","activeGroup","getGroupPanel","addGroup","closeAllGroups","removeGroup","group","getGroup","addFloatingGroup","coord","moveToNext","moveToPrevious","maximizeGroup","hasMaximizedGroup","exitMaximizedGroup","onDidMaximizedGroupChange","addPopoutGroup","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","willShowOverlayEvent","canDisplayOverlay","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","accessor","tabIndex","dropTarget","shiftKey","show","display","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","focusTracker","openPanel","_width","_height","closePanel","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","draggable","dragHandler","setActive","isActive","setContent","part","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onDidDrop","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","initialize","doAddPanel","updateContainer","createRightHeaderActionsElement","_rightHeaderActions","init","containerApi","createLeftHeaderActionsElement","_leftHeaderActions","createPrefixHeaderActionsElement","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","_params","update","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","get","hasExistingPanel","updateMru","onDidTitleChange","onDidParametersChange","runEvents","createWatermarkComponent","showDndOverlay","willDropEvent","getKind","itemId","_c","Resizable","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","disableAutoResizing","_onDidLayoutChange","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","isVisible","isMaximizedGroup","doAddGroup","doRemoveGroup","skipActive","forceResize","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","getParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","accessorId","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","frameworkComponentFactory","tabComponents","frameworkTabComponents","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","open","features","entries","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","_options","defaultRenderer","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","debug","updateWatermark","watermarkComponent","watermarkFrameworkComponent","_rootDropTarget","rootOverlayModel","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutUrl","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","floatingGroupBounds","minimumWidthWithinViewport","minimumHeightWithinViewport","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_orientation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","o","relativeLocation","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","_props","componentProps","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","factory","componentId","dockview","hideBorders","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","FrameworkSelector","BrowserOnly","FrameworkSpecific1","framework"],"sourceRoot":""}