{"version":3,"file":"assets/js/6875c492.6164e7e8.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nimport Unlisted from '@theme/Unlisted';\nimport Heading from '@theme/Heading';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      {tag.unlisted && <Unlisted />}\n      <header className=\"margin-bottom--xl\">\n        <Heading as=\"h1\">{title}</Heading>\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `Listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn((_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport class TickDelayedEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this.onEvent = this._onFired.event;\n    }\n    fire() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        this.timer = setTimeout(() => {\n            this._onFired.fire();\n            clearTimeout(this.timer);\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        throw new Error(`${min} > ${max} is an invalid condition`);\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, getElementsByTagName, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    constructor(container, options) {\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        toggleClass(this.container, 'visible', visible);\n        const viewItem = this.viewItems[index];\n        toggleClass(this.container, 'visible', visible);\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = [\n                    ...getElementsByTagName('iframe'),\n                    ...getElementsByTagName('webview'),\n                ];\n                for (const iframe of iframes) {\n                    iframe.style.pointerEvents = 'none';\n                }\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let sum = 0;\n        const x = [];\n        this.updateSashEnablement();\n        for (let i = 0; i < this.viewItems.length - 1; i++) {\n            sum += this.viewItems[i].size;\n            x.push(sum);\n            const offset = Math.min(Math.max(0, sum - 2), this.size - 4);\n            if (this._orientation === Orientation.HORIZONTAL) {\n                this.sashes[i].container.style.left = `${offset}px`;\n                this.sashes[i].container.style.top = `0px`;\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                this.sashes[i].container.style.left = `0px`;\n                this.sashes[i].container.style.top = `${offset}px`;\n            }\n        }\n        this.viewItems.forEach((view, i) => {\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${view.size}px`;\n                view.container.style.left = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${view.size}px`;\n                view.container.style.top = i == 0 ? '0px' : `${x[i - 1]}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(visible) {\n        for (const child of this.children) {\n            child.setVisible(visible);\n        }\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire(visible);\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange((visible) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this._locked);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this._locked, children);\n        }\n        else {\n            result = new LeafNode(deserializer.fromJSON(node), orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this._locked);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this._locked);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this._locked);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, coord) {\n        return this.component.addFloatingGroup(item, coord);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                if (typeof this.options.canDisplayOverlay === 'boolean') {\n                    if (!this.options.canDisplayOverlay) {\n                        this.removeDropTarget();\n                        return;\n                    }\n                }\n                else if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisibile':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const _onDidFocus = panel.view.content.onDidFocus;\n            const _onDidBlur = panel.view.content.onDidBlur;\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            if (_onDidFocus) {\n                disposable.addDisposables(_onDidFocus(() => this._onDidFocus.fire()));\n            }\n            if (_onDidBlur) {\n                disposable.addDisposables(_onDidBlur(() => this._onDidBlur.fire()));\n            }\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisibile') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { getElementsByTagName } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            };\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'click', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent, } from '../../dockviewGroupPanelModel';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                }, { inDragMode: true });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                }, { inDragMode: true });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, { kind: 'tab' }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this._kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionsElement) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionsElement) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionsElement) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionsElement(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'click', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        // custom overlay handler\n        if (this.accessor.options.showDndOverlay) {\n            return this.accessor.options.showDndOverlay({\n                nativeEvent: event,\n                target,\n                group: this.accessor.getPanel(this.id),\n                position,\n                getData: getPanelData,\n            });\n        }\n        return false;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, TickDelayedEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new TickDelayedEvent();\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange.onEvent(() => {\n            this._onDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._onDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize !== null && forceResize !== void 0 ? forceResize : (width !== this.width || height !== this.height);\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        this._onDidLayoutChange.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\n// TODO find a better way to initialize and avoid needing null checks\nconst NOT_INITIALIZED_MESSAGE = 'DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.addDisposables(this._onDidLocationChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            if (!event.isVisible && this.isVisible) {\n                this._onDidVisibilityChange.fire(event);\n            }\n            else if (event.isVisible &&\n                !this.isVisible &&\n                this.group.model.isPanelActive(this.panel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange((event) => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.view.update({\n                params: {\n                    params: this._params,\n                    title: this.title,\n                },\n            });\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: {\n                params: this._params,\n                title: this.title,\n            },\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        //\n        this.params = {};\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        //\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        //\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        //\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    update(event) {\n        this.params = Object.assign(Object.assign({}, this.params), event.params);\n        this.render();\n    }\n    focus() {\n        //noop\n    }\n    init(params) {\n        this.params = params;\n        this._content.textContent = params.title;\n        addDisposableListener(this.action, 'click', (ev) => {\n            ev.preventDefault(); //\n            this.params.api.close();\n        });\n    }\n    onGroupChange(_group) {\n        this.render();\n    }\n    onPanelVisibleChange(_isPanelVisible) {\n        this.render();\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    render() {\n        if (this._content.textContent !== this.params.title) {\n            this._content.textContent = this.params.title;\n        }\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nimport { createComponent } from '../panel/componentFactory';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(Object.assign(Object.assign({}, params), { tab: this.tab }));\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        var _a, _b;\n        return createComponent(id, componentName, (_a = this.accessor.options.components) !== null && _a !== void 0 ? _a : {}, this.accessor.options.frameworkComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.content);\n    }\n    createTabComponent(id, componentName) {\n        var _a, _b;\n        if (componentName) {\n            return createComponent(id, componentName, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_a = this.accessor.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.tab, () => new DefaultTab());\n        }\n        else if (this.accessor.options.defaultTabComponent) {\n            return createComponent(id, this.accessor.options.defaultTabComponent, this.accessor.options.tabComponents, this.accessor.options.frameworkTabComponents, (_b = this.accessor.options.frameworkComponentFactory) === null || _b === void 0 ? void 0 : _b.tab, () => new DefaultTab());\n        }\n        else {\n            return new DefaultTab();\n        }\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { getElementsByTagName, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nconst bringElementToFront = (() => {\n    let previous = null;\n    function pushToTop(element) {\n        if (previous !== element && previous !== null) {\n            toggleClass(previous, 'dv-bring-to-front', false);\n        }\n        toggleClass(element, 'dv-bring-to-front', true);\n        previous = element;\n    }\n    return pushToTop;\n})();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds({\n            height: this.options.height,\n            width: this.options.width,\n            top: this.options.top,\n            left: this.options.left,\n        });\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if (typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n        }\n        if (typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = typeof this.options.minimumInViewportHeight === 'number'\n            ? Math.max(0, this.getMinimumHeight(overlayRect.height))\n            : 0;\n        const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n        const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n        this._element.style.left = `${left}px`;\n        this._element.style.top = `${top}px`;\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        return {\n            top: element.top - container.top,\n            left: element.left - container.left,\n            width: element.width,\n            height: element.height,\n        };\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.options.minimumInViewportHeight\n                    ? this.getMinimumHeight(overlayRect.height)\n                    : 0);\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                this.setBounds({ top, left });\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            bringElementToFront(this._element);\n        }, true));\n        bringElementToFront(this._element);\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = [\n                ...getElementsByTagName('iframe'),\n                ...getElementsByTagName('webview'),\n            ];\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = 'none';\n            }\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let height = undefined;\n                let left = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                this.setBounds({ height, width, top, left });\n            }), {\n                dispose: () => {\n                    for (const iframe of iframes) {\n                        iframe.style.pointerEvents = 'auto';\n                    }\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return height;\n    }\n    dispose() {\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100 };\n","import { DragAndDropObserver } from './dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from './dom';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this.element = element;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const disposable = new CompositeDisposable(\n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange((event) => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { createComponent } from '../panel/componentFactory';\nimport { isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../dnd/overlay';\nimport { toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nfunction typeValidate3(data, path) {\n    if (typeof data.id !== 'string') {\n        throw new Error(`${path}.id must be a string`);\n    }\n    if (typeof data.activeView !== 'string' ||\n        typeof data.activeView !== 'undefined') {\n        throw new Error(`${path}.activeView must be a string of undefined`);\n    }\n}\nfunction typeValidate2(data, path) {\n    if (typeof data.size !== 'number' && typeof data.size !== 'undefined') {\n        throw new Error(`${path}.size must be a number or undefined`);\n    }\n    if (typeof data.visible !== 'boolean' &&\n        typeof data.visible !== 'undefined') {\n        throw new Error(`${path}.visible must be a boolean or undefined`);\n    }\n    if (data.type === 'leaf') {\n        if (typeof data.data !== 'object' ||\n            data.data === null ||\n            Array.isArray(data.data)) {\n            throw new Error('object must be a non-null object');\n        }\n        typeValidate3(data.data, `${path}.data`);\n    }\n    else if (data.type === 'branch') {\n        if (!Array.isArray(data.data)) {\n            throw new Error(`${path}.data must be an array`);\n        }\n    }\n    else {\n        throw new Error(`${path}.type must be onew of {'branch', 'leaf'}`);\n    }\n}\nfunction typeValidate(data) {\n    if (typeof data !== 'object' || data === null) {\n        throw new Error('object must be a non-null object');\n    }\n    const { grid, panels, activeGroup, floatingGroups } = data;\n    if (typeof grid !== 'object' || grid === null) {\n        throw new Error(\"'.grid' must be a non-null object\");\n    }\n    if (typeof grid.height !== 'number') {\n        throw new Error(\"'.grid.height' must be a number\");\n    }\n    if (typeof grid.width !== 'number') {\n        throw new Error(\"'.grid.width' must be a number\");\n    }\n    if (typeof grid.root !== 'object' || grid.root === null) {\n        throw new Error(\"'.grid.root' must be a non-null object\");\n    }\n    if (grid.root.type !== 'branch') {\n        throw new Error(\".grid.root.type must be of type 'branch'\");\n    }\n    if (grid.orientation !== Orientation.HORIZONTAL &&\n        grid.orientation !== Orientation.VERTICAL) {\n        throw new Error(`'.grid.width' must be one of {${Orientation.HORIZONTAL}, ${Orientation.VERTICAL}}`);\n    }\n    typeValidate2(grid.root, '.grid.root');\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisibile';\n    }\n    constructor(options) {\n        var _a, _b;\n        super({\n            proportionalLayout: true,\n            orientation: (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            styles: options.styles,\n            parentElement: options.parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._ignoreEvents = 0;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        const gready = document.createElement('div');\n        gready.className = 'dv-overlay-render-container';\n        this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(gready);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n        if (!this.options.frameworkTabComponents) {\n            this.options.frameworkTabComponents = {};\n        }\n        if (!this.options.tabComponents) {\n            this.options.tabComponents = {};\n        }\n        if (!this.options.watermarkComponent &&\n            !this.options.watermarkFrameworkComponent) {\n            this.options.watermarkComponent = Watermark;\n        }\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (this.options.showDndOverlay) {\n                    if (position === 'center' && this.gridview.length !== 0) {\n                        /**\n                         * for external events only show the four-corner drag overlays, disable\n                         * the center position so that external drag events can fall through to the group\n                         * and panel drop target handlers\n                         */\n                        return false;\n                    }\n                    return this.options.showDndOverlay({\n                        nativeEvent: event,\n                        position: position,\n                        target: 'edge',\n                        getData: getPanelData,\n                    });\n                }\n                return false;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_b = this.options.rootOverlayModel) !== null && _b !== void 0 ? _b : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId(); //item.id;\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else {\n                    if (this.getPanel(group.id)) {\n                        const removedGroup = this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                        });\n                        removedGroup.model.renderContainer =\n                            this.overlayRenderContainer;\n                        removedGroup.model.location = { type: 'grid' };\n                        returnedGroup = removedGroup;\n                    }\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error(err);\n        });\n    }\n    addFloatingGroup(item, coord, options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            group.model.openPanel(item, { skipSetGroupActive: true });\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: !!popoutReferenceGroup,\n                    });\n                }\n            }\n        }\n        group.model.location = { type: 'floating' };\n        const overlayLeft = typeof (coord === null || coord === void 0 ? void 0 : coord.x) === 'number'\n            ? Math.max(coord.x, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.left;\n        const overlayTop = typeof (coord === null || coord === void 0 ? void 0 : coord.y) === 'number'\n            ? Math.max(coord.y, 0)\n            : DEFAULT_FLOATING_GROUP_POSITION.top;\n        const overlay = new Overlay({\n            container: this.gridview.element,\n            content: group.element,\n            height: (_b = coord === null || coord === void 0 ? void 0 : coord.height) !== null && _b !== void 0 ? _b : 300,\n            width: (_c = coord === null || coord === void 0 ? void 0 : coord.width) !== null && _c !== void 0 ? _c : 300,\n            left: overlayLeft,\n            top: overlayTop,\n            minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumWidthWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n            minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_g = (_f = this.options.floatingGroupBounds) === null || _f === void 0 ? void 0 : _f.minimumHeightWithinViewport) !== null && _g !== void 0 ? _g : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE,\n        });\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        });\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.height, group.width);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                group.model.location = { type: 'grid' };\n                remove(this._floatingGroups, floatingGroupPanel);\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        const changed_orientation = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        const changed_floatingGroupBounds = options.floatingGroupBounds !== undefined &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = options.rootOverlayModel !== undefined &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds({});\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    x: position.left,\n                    y: position.top,\n                    height: position.height,\n                    width: position.width,\n                }, { skipRemoveGroup: true, inDragMode: false });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        const hasActivePanel = !!this.activePanel;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel ${options.position.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referencePanel ${options.position.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const o = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, o, {\n                    inDragMode: false,\n                    skipRemoveGroup: true,\n                    skipActiveGroup: true,\n                });\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(referenceGroup);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel);\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const o = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, o, {\n                inDragMode: false,\n                skipRemoveGroup: true,\n                skipActiveGroup: true,\n            });\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel);\n            this.doSetGroupAndPanelActive(group);\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        var _a;\n        return createComponent('watermark-id', 'watermark-name', this.options.watermarkComponent\n            ? { 'watermark-name': this.options.watermarkComponent }\n            : {}, this.options.watermarkFrameworkComponent\n            ? { 'watermark-name': this.options.watermarkFrameworkComponent }\n            : {}, (_a = this.options.frameworkComponentFactory) === null || _a === void 0 ? void 0 : _a.watermark);\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        const group = this.createGroup(options);\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        return;\n                    }\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n            panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n            from.panels.forEach((panel) => {\n                this._onDidMovePanel.fire({ panel });\n            });\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(options) {\n        super({\n            parentElement: options.parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(options) {\n        super(options.parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return {\n            dispose: () => {\n                if (disposed) {\n                    throw new Error('invalid operation: resource already disposed');\n                }\n                disposed = true;\n                setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n            },\n        };\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n            close: () => {\n                if (parameters.group) {\n                    parameters.containerApi.removeGroup(parameters.group);\n                }\n            },\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    get group() {\n        return this._group;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { DockviewComponent, DockviewApi, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart, } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const factory = {\n            content: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelContentPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            tab: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactPanelHeaderPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            watermark: {\n                createComponent: (_id, componentId, component) => {\n                    return new ReactWatermarkPart(componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n        };\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const dockview = new DockviewComponent({\n            parentElement: domRef.current,\n            frameworkComponentFactory: factory,\n            frameworkComponents: props.components,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkTabComponents,\n            watermarkFrameworkComponent: props.watermarkComponent,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            showDndOverlay: props.showDndOverlay,\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            singleTabMode: props.singleTabMode,\n            disableFloatingGroups: props.disableFloatingGroups,\n            floatingGroupBounds: props.floatingGroupBounds,\n            defaultRenderer: props.defaultRenderer,\n            debug: props.debug,\n            rootOverlayModel: props.rootOverlayModel,\n            locked: props.locked,\n            disableDnd: props.disableDnd,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        dockview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new DockviewApi(dockview) });\n        }\n        dockviewRef.current = dockview;\n        return () => {\n            dockview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.locked = !!props.locked;\n    }, [props.locked]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableDnd: props.disableDnd,\n        });\n    }, [props.disableDnd]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            floatingGroupBounds: props.floatingGroupBounds,\n        });\n    }, [props.floatingGroupBounds]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            watermarkFrameworkComponent: props.watermarkComponent,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            frameworkTabComponents: props.tabComponents,\n        });\n    }, [props.tabComponents]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            disableFloatingGroups: props.disableFloatingGroups,\n        });\n    }, [props.disableFloatingGroups]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            frameworkTabComponents,\n        });\n    }, [props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionsElement: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionsElement: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            rootOverlayModel: props.rootOverlayModel,\n        });\n    }, [props.rootOverlayModel]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionsElement: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, api.title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { SplitviewApi, SplitviewComponent, Orientation, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const splitview = new SplitviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        splitview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new SplitviewApi(splitview) });\n        }\n        splitviewRef.current = splitview;\n        return () => {\n            splitview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { GridviewComponent, Orientation, GridviewApi, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const gridview = new GridviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        gridview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api: new GridviewApi(gridview) });\n        }\n        gridviewRef.current = gridview;\n        return () => {\n            gridview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { PaneviewComponent, PaneviewApi, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const paneview = new PaneviewComponent({\n            parentElement: domRef.current,\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const api = new PaneviewApi(paneview);\n        const { clientWidth, clientHeight } = domRef.current;\n        paneview.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = paneview;\n        return () => {\n            paneview.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const paneview = paneviewRef.current;\n        const disposable = paneview.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api: new PaneviewApi(paneview) }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport { IS_PROD } from '../flags';\n\nconst frameworks = [\n    { value: 'JavaScript', label: 'JavaScript' },\n    { value: 'React', label: 'React' },\n    { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nfunction useActiveFramework(): [string, (value: string) => void] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    return [IS_PROD ? frameworks[1].value : value, setter];\n}\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    if (IS_PROD) {\n        return null;\n    }\n\n    return (\n        <select onChange={onChange} value={activeFramework}>\n            {frameworks.map((framework) => {\n                return (\n                    <option value={framework.value}>{framework.label}</option>\n                );\n            })}\n        </select>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","permalink","title","Translate","isNext","BlogPostItems","_ref","items","component","BlogPostItemComponent","BlogPostItem","_Fragment","map","_ref2","content","BlogPostContent","BlogPostProvider","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","PageMetadata","SearchMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","BlogLayout","unlisted","Unlisted","Heading","as","Link","href","allTagsPath","BlogTagsPostsPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogTagPostListPage","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","TickDelayedEvent","_onFired","onEvent","timer","clearTimeout","setTimeout","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","style","pointerEvents","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","iframes","iframe","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","sum","offset","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","SplitviewApi","panels","onDidLayoutFromJSON","onDidLayoutChange","updateOptions","removePanel","panel","focus","getPanel","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","groups","force","DockviewApi","totalPanels","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","activeGroup","getGroupPanel","addGroup","closeAllGroups","removeGroup","group","getGroup","addFloatingGroup","coord","moveToNext","moveToPrevious","maximizeGroup","hasMaximizedGroup","exitMaximizedGroup","onDidMaximizedGroupChange","addPopoutGroup","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","willShowOverlayEvent","canDisplayOverlay","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","_b","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","has","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","ContentContainer","_element","accessor","tabIndex","dropTarget","shiftKey","show","display","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","focusTracker","openPanel","_width","_height","closePanel","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","draggable","dragHandler","setActive","isActive","setContent","part","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","lineHeight","borderRadius","textContent","body","setDragImage","addGhostImage","VoidContainer","doSetGroupActive","handler","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","header","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onDidDrop","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","initialize","doAddPanel","updateContainer","createRightHeaderActionsElement","_rightHeaderActions","init","containerApi","createLeftHeaderActionsElement","_leftHeaderActions","createPrefixHeaderActionsElement","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","_params","update","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","get","hasExistingPanel","updateMru","onDidTitleChange","onDidParametersChange","runEvents","createWatermarkComponent","showDndOverlay","willDropEvent","getKind","itemId","_c","Resizable","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","values","gridview","_activeGroup","disableAutoResizing","_onDidLayoutChange","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","isVisible","isMaximizedGroup","doAddGroup","doRemoveGroup","skipActive","forceResize","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","_isActive","_isVisible","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","getParameters","parameters","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","outline","overflow","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","ev","isPanelExpanded","renderOnce","expanded","bodyPart","getBodyComponent","headerPart","getHeaderComponent","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","initDragFeatures","accessorId","existingPanel","allPanels","fromIndex","toIndex","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","onGroupChange","onPanelVisibleChange","_isPanelVisible","createComponent","componentName","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_d","frameworkComponentFactory","tabComponents","frameworkTabComponents","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","_visible","isOneGroup","bringElementToFront","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bounds","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","destroy","createFocusableElement","focusContainer","box2","visibilityChanged","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","defaultRenderer","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_floatingGroups","_popoutGroups","_ignoreEvents","_onDidRemoveGroup","_onDidAddGroup","_moving","gready","debug","updateWatermark","watermarkComponent","watermarkFrameworkComponent","_rootDropTarget","rootOverlayModel","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutUrl","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","_f","_g","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","overlayLeft","overlayTop","floatingGroupBounds","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_orientation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","floatingGroups","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","floatingGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","o","relativeLocation","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","factory","componentId","dockview","hideBorders","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","FrameworkSelector","BrowserOnly","FrameworkSpecific1","framework"],"sourceRoot":""}