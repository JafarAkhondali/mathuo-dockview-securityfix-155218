{"version":3,"file":"assets/js/f1be756a.bbf84c2c.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/keyboard-dockview/src/app.tsx","webpack://dockview-docs/./docs/advanced/keyboard.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        return typeof activePanelMinimumWidth === 'number'\n            ? activePanelMinimumWidth\n            : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH;\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        return typeof activePanelMinimumHeight === 'number'\n            ? activePanelMinimumHeight\n            : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT;\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        return typeof activePanelMaximumWidth === 'number'\n            ? activePanelMaximumWidth\n            : Number.MAX_SAFE_INTEGER;\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        return typeof activePanelMaximumHeight === 'number'\n            ? activePanelMaximumHeight\n            : Number.MAX_SAFE_INTEGER;\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (event) => {\n            var _a;\n            event.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this._group = _params.group;\n        this.render();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super(parentElement, {\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport './app.scss';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        const [active, setActive] = React.useState<boolean>(props.api.isActive);\n        const ref = React.useRef<HTMLInputElement>(null);\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidActiveChange((event) => {\n                setActive(props.api.isActive);\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        return (\n            <div\n                className=\"keyboard-example-panel\"\n                style={{ padding: '20px', color: 'white' }}\n            >\n                <div style={{ padding: '10px 0px' }}>\n                    <span>{props.api.title}</span>\n                </div>\n                <div className=\"keyboard-example-description\">\n                    {'Use '}\n                    <span className=\"keyboard-example-shortcut\">\n                        {'Ctrl+ArrowLeft'}\n                    </span>\n                    {' and '}\n                    <span className=\"keyboard-example-shortcut \">\n                        {'Ctrl+ArrowRight'}\n                    </span>\n                    {' to nativgate between tabs.'}\n                </div>\n\n                <div>\n                    <span>{'isPanelActive: '}</span>\n                    <span>{active ? 'true' : 'false'}</span>\n                </div>\n            </div>\n        );\n    },\n};\n\nconst DockviewDemo = (props: { theme?: string }) => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            title: 'Panel 1',\n        });\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            title: 'Panel 2',\n        });\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            title: 'Panel 3',\n        });\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            title: 'Panel 4',\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n        event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            title: 'Panel 5',\n            position: { referencePanel: 'panel_4', direction: 'within' },\n        });\n\n        event.api.getPanel('panel_1')!.api.setActive();\n\n        setApi(event.api);\n    };\n\n    const onKeyDown = (event: React.KeyboardEvent) => {\n        if (!api) {\n            return;\n        }\n\n        if (event.ctrlKey && event.code === 'ArrowLeft') {\n            // move backwards\n            api.moveToPrevious({ includePanel: true });\n        }\n\n        if (event.ctrlKey && event.code === 'ArrowRight') {\n            // move backwards\n            api.moveToNext({ includePanel: true });\n        }\n    };\n\n    return (\n        <div style={{ height: '100%' }} onKeyDown={onKeyDown}>\n            <DockviewReact\n                components={components}\n                onReady={onReady}\n                className={props.theme || 'dockview-theme-abyss'}\n            />\n        </div>\n    );\n};\n\nexport default DockviewDemo;\n","\n\nexport const frontMatter = {\n\ttitle: 'Keyboard'\n};\nexport const contentTitle = 'Keyboard Navigation';\nexport const metadata = {\n  \"id\": \"advanced/keyboard\",\n  \"title\": \"Keyboard\",\n  \"description\": \"Keyboard shortcuts\",\n  \"source\": \"@site/docs/advanced/keyboard.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/keyboard\",\n  \"permalink\": \"/docs/advanced/keyboard\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/keyboard.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {\n    \"title\": \"Keyboard\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"iframes\",\n    \"permalink\": \"/docs/advanced/iframe\"\n  },\n  \"next\": {\n    \"title\": \"Nested Instances\",\n    \"permalink\": \"/docs/advanced/nested\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewKeyboard from '@site/sandboxes/keyboard-dockview/src/app';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"keyboard-navigation\",\n      children: \"Keyboard Navigation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Keyboard shortcuts\"\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      height: 600,\n      sandboxId: \"keyboard-dockview\",\n      react: DockviewKeyboard\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_b","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","CodeSandboxButton","_jsxs","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","justifyContent","react","cursor","border","MultiFrameworkContainer","default","active","setApi","onKeyDown","ctrlKey","code","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","h1","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}