{"version":3,"file":"assets/js/66505f87.31aff4d8.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/panel/componentFactory.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./src/components/ui/exampleFrame.tsx","webpack://dockview-docs/./src/components/ui/reference/types.ts","webpack://dockview-docs/./src/components/ui/reference/docRef.tsx","webpack://dockview-docs/./sandboxes/externaldnd-dockview/src/treeview.tsx","webpack://dockview-docs/./sandboxes/externaldnd-dockview/src/app.tsx","webpack://dockview-docs/./docs/core/dnd/dragAndDrop.mdx","webpack://dockview-docs/./sandboxes/ lazy ^\\.\\/.*\\/.*\\/src\\/app$ namespace object"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'horizontal', 'vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = options.orientation;\n        this.element = this.createContainer();\n        this.margin = (_a = options.margin) !== null && _a !== void 0 ? _a : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) * marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'horizontal'\n            : 'vertical';\n        element.className = `split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bgrid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire();\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire();\n    }\n    serialize() {\n        if (this.hasMaximizedView()) {\n            /**\n             * do not persist maximized view state\n             * firstly exit any maximized views to ensure the correct dimensions are persisted\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        return {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(options) {\n        var _a, _b;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.classNames = [];\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        options.parentElement.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.gridview.onDidMaximizedNodeChange;\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","import { Emitter } from '../events';\nexport class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        const emitter = new Emitter();\n        const disposable = this.component.onDidDrop((e) => {\n            emitter.fire(Object.assign(Object.assign({}, e), { api: this }));\n        });\n        emitter.dispose = () => {\n            disposable.dispose();\n            emitter.dispose();\n        };\n        return emitter.event;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '__dockview_internal_drag_event__');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                if (this.accessor.options.showDndOverlay) {\n                    return this.accessor.options.showDndOverlay({\n                        nativeEvent: event,\n                        getData: getPaneData,\n                        panel: this,\n                    });\n                }\n                return false;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter, } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'active-tab', isActive);\n        toggleClass(this.element, 'inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'mousedown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'void-container';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.accessor.onDidAddPanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this.accessor.onDidRemovePanel((e) => {\n            if (e.api.group === this.group) {\n                toggleClass(this._element, 'dv-single-tab', this.size === 1);\n            }\n        }), this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'mousedown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        var _a;\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        if (!((_a = panel.view) === null || _a === void 0 ? void 0 : _a.tab)) {\n            throw new Error('invalid header component');\n        }\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (!isLeftClick || event.defaultPrevented) {\n                return;\n            }\n            if (this.group.activePanel !== panel) {\n                this.group.model.openPanel(panel);\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n}\n","export class DockviewUnhandledDragOverEvent {\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    constructor(nativeEvent, target, position, getData, group) {\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n        this._isAccepted = false;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nexport const PROPERTY_KEYS = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._overwriteRenderContainer = null;\n        toggleClass(this.container, 'groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        this.accessor.removePanel(panel);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'active-group', isGroupActive);\n        toggleClass(this.container, 'inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        toggleClass(this.container, 'empty', this.isEmpty);\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.tabsContainer.hide();\n            this.contentContainer.element.appendChild(this.watermark.element);\n            this.watermark.updateParentGroup(this.groupPanel, true);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n            this.tabsContainer.show();\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._mutableDisposable = new MutableDisposable();\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange, this._mutableDisposable);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        /**\n         * TODO: Annoying initialization order caveat, find a better way to initialize and avoid needing null checks\n         *\n         * Due to the order on initialization we know that the model isn't defined until later in the same stack-frame of setup.\n         * By queuing a microtask we can ensure the setup is completed within the same stack-frame, but after everything else has\n         * finished ensuring the `model` is defined.\n         */\n        this._group = group;\n        queueMicrotask(() => {\n            this._mutableDisposable.value =\n                this._group.model.onDidActivePanelChange((event) => {\n                    this._onDidActivePanelChange.fire(event);\n                });\n        });\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        super(id, 'groupview_default', {\n            minimumHeight: MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: options.group,\n                position: (_a = options.position) !== null && _a !== void 0 ? _a : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dockview-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.addDisposables(addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }));\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'mousedown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { addDisposableListener } from '../../../events';\nimport { toggleClass } from '../../../dom';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { createCloseButton } from '../../../svg';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'watermark';\n        const title = document.createElement('div');\n        title.className = 'watermark-title';\n        const emptySpace = document.createElement('span');\n        emptySpace.style.flexGrow = '1';\n        const content = document.createElement('div');\n        content.className = 'watermark-content';\n        this._element.appendChild(title);\n        this._element.appendChild(content);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'actions-container';\n        const closeAnchor = document.createElement('div');\n        closeAnchor.className = 'close-action';\n        closeAnchor.appendChild(createCloseButton());\n        actionsContainer.appendChild(closeAnchor);\n        title.appendChild(emptySpace);\n        title.appendChild(actionsContainer);\n        this.addDisposables(addDisposableListener(closeAnchor, 'click', (ev) => {\n            var _a;\n            ev.preventDefault();\n            if (this._group) {\n                (_a = this._api) === null || _a === void 0 ? void 0 : _a.removeGroup(this._group);\n            }\n        }));\n    }\n    update(_event) {\n        // noop\n    }\n    focus() {\n        // noop\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    init(_params) {\n        this._api = _params.containerApi;\n        this.render();\n    }\n    updateParentGroup(group, _visible) {\n        this._group = group;\n        this.render();\n    }\n    dispose() {\n        super.dispose();\n    }\n    render() {\n        const isOneGroup = !!(this._api && this._api.size <= 1);\n        toggleClass(this.element, 'has-actions', isOneGroup);\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nexport const DEFAULT_OVERLAY_Z_INDEX = 999;\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + i * 2}`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'mouseup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'mousedown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'mousedown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'mousedown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'mousemove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'mouseup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nimport { DEFAULT_OVERLAY_Z_INDEX } from './overlay';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `${DEFAULT_OVERLAY_Z_INDEX + level * 2 + 1}`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window.value.close();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    const externalDocument = externalWindow.document;\n                    externalDocument.title = document.title;\n                    externalDocument.body.appendChild(container);\n                    addStyles(externalDocument, window.document.styleSheets);\n                    /**\n                     * beforeunload must be registered after load for reasons I could not determine\n                     * otherwise the beforeunload event will not fire when the window is closed\n                     */\n                    addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                        /**\n                         * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                         */\n                        this.close();\n                    });\n                    resolve(container);\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, toggleClass, watchElementResize } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nfunction getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(parentElement, options) {\n        var _a;\n        super({\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            parentElement: parentElement,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        // const gready = document.createElement('div');\n        // gready.className = 'dv-overlay-render-container';\n        // this.gridview.element.appendChild(gready);\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        if (itemToPopout.api.location.type === 'grid') {\n            itemToPopout.api.setVisible(false);\n        }\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            const group = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) !== null && _a !== void 0 ? _a : this.createGroup({ id: groupId });\n            group.model.renderContainer = overlayRenderContainer;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup)) {\n                this._onDidAddGroup.fire(group);\n            }\n            if (itemToPopout instanceof DockviewPanel) {\n                this.movingLock(() => {\n                    const panel = referenceGroup.model.removePanel(itemToPopout);\n                    group.model.openPanel(panel);\n                });\n            }\n            else {\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: referenceGroup,\n                    to: group,\n                }));\n                switch (referenceLocation) {\n                    case 'grid':\n                        referenceGroup.api.setVisible(false);\n                        break;\n                    case 'floating':\n                    case 'popout':\n                        this.removeGroup(referenceGroup);\n                        break;\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n            };\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: this.getPanel(referenceGroup.id)\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(window.innerWidth, window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    const removedGroup = this.doRemoveGroup(group, {\n                        skipDispose: true,\n                        skipActive: true,\n                    });\n                    removedGroup.model.renderContainer =\n                        this.overlayRenderContainer;\n                    removedGroup.model.location = { type: 'grid' };\n                    returnedGroup = removedGroup;\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        const changed_floatingGroupBounds = 'floatingGroupBounds' in options &&\n            options.floatingGroupBounds !== this.options.floatingGroupBounds;\n        const changed_rootOverlayOptions = 'rootOverlayModel' in options &&\n            options.rootOverlayModel !== this.options.rootOverlayModel;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (changed_floatingGroupBounds) {\n            for (const group of this._floatingGroups) {\n                switch (this.options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = this.options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if (changed_rootOverlayOptions) {\n            this._rootDropTarget.setOverlayModel(options.rootOverlayModel);\n        }\n        if (\n        //  if explicitly set as `undefined`\n        'gap' in options &&\n            options.gap === undefined) {\n            this.gridview.margin = 0;\n        }\n        if (typeof options.gap === 'number') {\n            this.gridview.margin = options.gap;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                this._onDidAddGroup.fire(group);\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    skipRemoveGroup: true,\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation();\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n        skipDispose: false,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            this.doAddGroup(group, relativeLocation);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel, {\n                        skipSetActive: true,\n                    }));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            this.gridview.addView(from, Sizing.Distribute, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, { renderer: options.renderer });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location = [0]) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n}\n","export function createComponent(id, componentName, components = {}, frameworkComponents = {}, createFrameworkComponent, fallback) {\n    const Component = typeof componentName === 'string'\n        ? components[componentName]\n        : undefined;\n    const FrameworkComponent = typeof componentName === 'string'\n        ? frameworkComponents[componentName]\n        : undefined;\n    if (Component && FrameworkComponent) {\n        throw new Error(`Cannot create '${id}'. component '${componentName}' registered as both a component and frameworkComponent`);\n    }\n    if (FrameworkComponent) {\n        if (!createFrameworkComponent) {\n            throw new Error(`Cannot create '${id}' for framework component '${componentName}'. you must register a frameworkPanelWrapper to use framework components`);\n        }\n        return createFrameworkComponent.createComponent(id, componentName, FrameworkComponent);\n    }\n    if (!Component) {\n        if (fallback) {\n            return fallback();\n        }\n        throw new Error(`Cannot create '${id}', no component '${componentName}' provided`);\n    }\n    return new Component(id, componentName);\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(parentElement, options) {\n        super({\n            parentElement: parentElement,\n            proportionalLayout: options.proportionalLayout,\n            orientation: options.orientation,\n            styles: options.styles,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n        if (!this.options.components) {\n            this.options.components = {};\n        }\n        if (!this.options.frameworkComponents) {\n            this.options.frameworkComponents = {};\n        }\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    var _a, _b;\n                    const { data } = node;\n                    const view = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkComponentFactory\n                        ? {\n                            createComponent: this.options.frameworkComponentFactory\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d, _e, _f;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = createComponent(options.id, options.component, (_d = this.options.components) !== null && _d !== void 0 ? _d : {}, (_e = this.options.frameworkComponents) !== null && _e !== void 0 ? _e : {}, this.options.frameworkComponentFactory\n            ? {\n                createComponent: this.options.frameworkComponentFactory\n                    .createComponent,\n            }\n            : undefined);\n        view.init({\n            params: (_f = options.params) !== null && _f !== void 0 ? _f : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { createComponent } from '../panel/componentFactory';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(parentElement, options) {\n        var _a, _b;\n        super(parentElement, options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.classNames = [];\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.options.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.splitview.orientation = options.orientation;\n        }\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a, _b, _c;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.createComponent,\n            }\n            : undefined);\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_c = options.params) !== null && _c !== void 0 ? _c : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b;\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper\n                                .createComponent,\n                        }\n                        : undefined);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = { api: null };\n        this._element = document.createElement('div');\n        this.element.className = 'default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dockview-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { createComponent } from '../panel/componentFactory';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { toggleClass } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(parentElement, options) {\n        var _a, _b;\n        super(parentElement, options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.classNames = [];\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView);\n        this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n        for (const className of this.classNames) {\n            toggleClass(this.element, className, true);\n        }\n        this._options = options;\n        if (!options.components) {\n            options.components = {};\n        }\n        if (!options.frameworkComponents) {\n            options.frameworkComponents = {};\n        }\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, false);\n            }\n            this.classNames = (_b = (_a = options.className) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];\n            for (const className of this.classNames) {\n                toggleClass(this.element, className, true);\n            }\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        const body = createComponent(options.id, options.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n            ? {\n                createComponent: this.options.frameworkWrapper.body.createComponent,\n            }\n            : undefined);\n        let header;\n        if (options.headerComponent) {\n            header = createComponent(options.id, options.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, this.options.headerframeworkComponents, this.options.frameworkWrapper\n                ? {\n                    createComponent: this.options.frameworkWrapper.header\n                        .createComponent,\n                }\n                : undefined);\n        }\n        else {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c, _d;\n                    const data = view.data;\n                    const body = createComponent(data.id, data.component, (_a = this.options.components) !== null && _a !== void 0 ? _a : {}, (_b = this.options.frameworkComponents) !== null && _b !== void 0 ? _b : {}, this.options.frameworkWrapper\n                        ? {\n                            createComponent: this.options.frameworkWrapper.body\n                                .createComponent,\n                        }\n                        : undefined);\n                    let header;\n                    if (data.headerComponent) {\n                        header = createComponent(data.id, data.headerComponent, (_c = this.options.headerComponents) !== null && _c !== void 0 ? _c : {}, (_d = this.options.headerframeworkComponents) !== null && _d !== void 0 ? _d : {}, this.options.frameworkWrapper\n                            ? {\n                                createComponent: this.options.frameworkWrapper.header\n                                    .createComponent,\n                            }\n                            : undefined);\n                    }\n                    else {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        });\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dockview-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onUnhandledDragOverEvent((event) => {\n            var _a;\n            if ((_a = props.showDndOverlay) === null || _a === void 0 ? void 0 : _a.call(props, event)) {\n                event.accept();\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.showDndOverlay]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onMouseDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    const onClick = React.useCallback((event) => {\n        if (event.defaultPrevented) {\n            return;\n        }\n        api.setActive();\n        if (rest.onClick) {\n            rest.onClick(event);\n        }\n    }, [api, rest.onClick]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onClick: onClick, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onMouseDown: onMouseDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createSplitview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        const api = createSplitview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkWrapper: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { Orientation, createGridview, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const api = createGridview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            proportionalLayout: typeof props.proportionalLayout === 'boolean'\n                ? props.proportionalLayout\n                : true,\n            orientation: (_a = props.orientation) !== null && _a !== void 0 ? _a : Orientation.HORIZONTAL,\n            frameworkComponents: props.components,\n            frameworkComponentFactory: {\n                createComponent: (id, componentId, component) => {\n                    return new ReactGridPanelView(id, componentId, component, {\n                        addPortal,\n                    });\n                },\n            },\n            styles: props.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    React.useEffect(() => {\n        const createComponent = (id, _componentId, component) => new PanePanelSection(id, component, {\n            addPortal,\n        });\n        const api = createPaneview(domRef.current, {\n            disableAutoResizing: props.disableAutoResizing,\n            frameworkComponents: props.components,\n            components: {},\n            headerComponents: {},\n            disableDnd: props.disableDnd,\n            headerframeworkComponents: props.headerComponents,\n            frameworkWrapper: {\n                header: {\n                    createComponent,\n                },\n                body: {\n                    createComponent,\n                },\n            },\n            showDndOverlay: props.showDndOverlay,\n        });\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            frameworkComponents: props.components,\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            headerframeworkComponents: props.headerComponents,\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                //\n            };\n        }\n        const api = paneviewRef.current;\n        const disposable = api.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(Object.assign(Object.assign({}, event), { api }));\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            showDndOverlay: props.showDndOverlay,\n        });\n    }, [props.showDndOverlay]);\n    return (React.createElement(\"div\", { className: props.className, style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst ExampleFrame = (props: {\n    framework: string;\n    theme?: string;\n    id: string;\n    height?: string;\n}) => {\n    const Component = React.useMemo(\n        () =>\n            React.lazy(\n                () =>\n                    import(\n                        `../../../sandboxes/${props.framework}/${props.id}/src/app`\n                    )\n            ),\n        [props.framework, props.id]\n    );\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <React.Suspense>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            flexGrow: 1,\n                        }}\n                    >\n                        <div\n                            style={{\n                                height: props.height ?? '500px',\n                                flexGrow: 1,\n                                display: 'flex',\n                                flexDirection: 'column',\n                            }}\n                        >\n                            <Component theme={props.theme} />\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'flex-end',\n                            }}\n                        >\n                            <span style={{ width: '220px' }}>\n                                <CodeSandboxButton\n                                    id={`${props.framework}/${props.id}`}\n                                    hideThemePicker={true}\n                                />\n                            </span>\n                        </div>\n                    </div>\n                </React.Suspense>\n            )}\n        </BrowserOnly>\n    );\n};\n\nexport default ExampleFrame;\n","export type ExportedTypeFile = Record<string, TypeSystem.Type>;\n\nexport function firstLevelTypes(value: TypeDescriptor.Type | null) {\n    if (!value) {\n        return null;\n    }\n\n    switch (value.type) {\n        case 'array':\n            return firstLevelTypes(value.value);\n        case 'literal':\n            return [];\n        case 'intrinsic':\n            return [];\n        case 'or':\n            return value.values.flatMap(firstLevelTypes);\n        case 'intersection':\n            return value.values.flatMap(firstLevelTypes);\n        case 'predicate':\n            return [];\n        case 'reference': {\n            const result = [];\n            if (\n                value.source.startsWith('dockview') &&\n                !value.refersToTypeParameter\n            ) {\n                result.push(value.value);\n            }\n            if (value.typeArguments) {\n                result.push(...value.typeArguments.flatMap(firstLevelTypes));\n            }\n            return result;\n        }\n        case 'reflection':\n            return firstLevel(value.value);\n        case 'tuple':\n            return value.value.map(codifyType);\n        default:\n            throw new Error('unreachable');\n    }\n}\n\nexport function firstLevel(value: TypeSystem.Type | null) {\n    const results: string[] = [];\n\n    switch (value.kind) {\n        case null:\n            break;\n        case 'property':\n            results.push(...firstLevelTypes(value.type));\n            break;\n        case 'accessor':\n            results.push(...firstLevelTypes(value.value.returnType));\n            break;\n        case 'method':\n            results.push(...value.signature.flatMap(firstLevel));\n            break;\n        case 'constructor':\n            break;\n        case 'typeLiteral':\n            if (value.properties) {\n                results.push(...value.properties.flatMap(firstLevel));\n            }\n            if (value.signatures) {\n                results.push(...value.signatures.flatMap(firstLevel));\n            }\n            break;\n        case 'callSignature':\n            results.push(\n                ...firstLevelTypes(value.returnType),\n                ...value.typeParameters.flatMap((_) => {\n                    return [...firstLevelTypes(_.extends)];\n                }),\n                ...value.parameters.flatMap(firstLevel)\n            );\n            break;\n        case 'parameter':\n            results.push(...firstLevelTypes(value.type));\n            break;\n        default:\n            console.log('test', value);\n            throw new Error('unreachable');\n    }\n\n    return Array.from(new Set(results));\n}\n\nexport function codifyType(value: TypeDescriptor.Type | null, tabs = 0) {\n    if (!value) {\n        return null;\n    }\n\n    switch (value.type) {\n        case 'array':\n            return `${codifyType(value.value)}[]`;\n        case 'literal':\n            return `'${value.value}'`;\n        case 'intrinsic':\n            return value.value;\n        case 'or':\n            return `${value.values\n                .map((_) => {\n                    const isComparator =\n                        _.type === 'or' || _.type === 'intersection';\n                    const code = codifyType(_);\n                    return isComparator ? `(${code})` : code;\n                })\n                .join(' | ')}`;\n        case 'intersection':\n            return `${value.values\n                .map((_) => {\n                    const isComparator =\n                        _.type === 'or' || _.type === 'intersection';\n                    const code = codifyType(_);\n                    return isComparator ? `(${code})` : code;\n                })\n                .join(' & ')}`;\n        case 'predicate':\n            return `${value.lhs} is ${value.rhs}`;\n\n        case 'reference': {\n            if (value.typeArguments) {\n                return `${value.value}<${value.typeArguments.map(codifyType)}>`;\n            }\n            return `${value.value}`;\n        }\n        case 'reflection':\n            return codify(value.value, tabs);\n        case 'tuple':\n            return `[${value.value.map(codifyType).join(', ')}]`;\n        default:\n            throw new Error('unreachable');\n    }\n}\n\nexport function codify(value: TypeSystem.Type | null, tabs = 0) {\n    if (!value) {\n        return null;\n    }\n\n    if (value.kind === 'accessor') {\n        const signature = value.value;\n        return `${'\\t'.repeat(tabs)}${signature.name}: ${codifyType(\n            signature.returnType\n        )}`;\n    }\n\n    if (value.kind === 'property') {\n        let code = '\\t'.repeat(tabs);\n\n        if (value.flags.isProtected) {\n            code += 'protected ';\n        }\n\n        if (value.flags.isReadonly) {\n            code += 'readonly ';\n        }\n        code += value.name;\n        if (value.flags.isOptional) {\n            code += '?';\n        }\n\n        code += `: ${codifyType(value.type, tabs + 1)}`;\n        return code;\n    }\n\n    if (value.kind === 'method') {\n        return `${'\\t'.repeat(tabs)}${value.name}${value.signature\n            .map(codify)\n            .join('\\n')}`;\n    }\n\n    if (value.kind === 'callSignature') {\n        let code = ``;\n\n        if (value.typeParameters.length > 0) {\n            code += '<';\n            code += value.typeParameters.map((typeParameter) => {\n                let typeCode = `${typeParameter.name}`;\n\n                if (typeParameter.extends) {\n                    typeCode += ' extends';\n                    typeCode += ` ${codifyType(typeParameter.extends)}`;\n                }\n\n                if (typeParameter.default) {\n                    typeCode += ' =';\n                    typeCode += ` ${typeParameter.default}`;\n                }\n                return typeCode;\n            });\n            code += '>';\n        }\n\n        code += '(';\n\n        code += value.parameters\n            .map((parameter) => {\n                return codify(parameter, tabs + 1);\n            })\n            .join(', ');\n\n        code += `): ${codifyType(value.returnType)}`;\n\n        return code;\n    }\n\n    if (value.kind === 'parameter') {\n        return `${value.name}: ${codifyType(value.type, tabs + 1)}`;\n    }\n\n    if (value.kind === 'typeLiteral') {\n        if (value.properties) {\n            return `{\\n${value.properties\n                .map((_) => codify(_, tabs))\n                .join(',\\n')}\\n${'\\t'.repeat(Math.max(0, tabs - 1))}}`;\n        }\n        if (value.signatures) {\n            return value.signatures.map(codify).join('\\n');\n        }\n    }\n\n    if (value.kind === 'constructor') {\n        return '';\n    }\n\n    if (value.kind === 'interface') {\n        return `interface ${value.name} {\\n${value.children\n            .map((_) => codify(_, tabs + 1))\n            .join(';\\n')};\\n}`;\n    }\n\n    if (value.kind === 'class') {\n        return `interface ${value.name} {\\n${value.children\n            .filter((_) => _.kind !== 'constructor')\n            .map((_) => codify(_, tabs + 1))\n            .join(';\\n')};\\n}`;\n    }\n\n    if (value.kind === 'typeAlias') {\n        return `type ${value.name} = ${codifyType(value.type)}`;\n    }\n\n    console.log('unreachable', value);\n    throw new Error(`unreachable`);\n}\n\nexport namespace TypeSystem {\n    export type Comment = any;\n\n    export type TypeParameter = {\n        name: string;\n        extends: TypeDescriptor.Type;\n        default: string;\n        comment?: Comment;\n    };\n\n    export type Accessor = {\n        name: string;\n        kind: 'accessor';\n        comment?: Comment;\n        value: TypeSystem.GetSignature;\n    };\n\n    export type GetSignature = {\n        kind: 'getSignature';\n        name: string;\n        returnType: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type CallSignature = {\n        kind: 'callSignature';\n        typeParameters: TypeSystem.TypeParameter[];\n        parameters: TypeSystem.Type[];\n        returnType: TypeDescriptor.Type;\n        name: string;\n        comment?: Comment;\n    };\n\n    export type Method = {\n        name: string;\n        kind: 'method';\n        signature: TypeSystem.CallSignature[];\n        comment?: Comment;\n    };\n\n    export type Function = {\n        name: string;\n        kind: 'function';\n        signature: TypeSystem.CallSignature;\n        comment?: Comment;\n    };\n\n    export type Property = {\n        kind: 'property';\n        name: string;\n        type: TypeDescriptor.Type;\n        flags: TypeDescriptor.Flags;\n        comment?: Comment;\n    };\n\n    export type TypeAlias = {\n        name: string;\n        kind: 'typeAlias';\n        typeParameters: TypeSystem.TypeParameter[];\n        type: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type Enum = {\n        name: string;\n        kind: 'enum';\n        children: TypeSystem.EnumMember[];\n        comment?: Comment;\n    };\n\n    export type EnumMember = {\n        kind: 'enumMember';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type Class = {\n        name: string;\n        kind: 'class';\n        children: TypeSystem.Type[];\n        extends: string[];\n        comment?: Comment;\n    };\n\n    export type Interface = {\n        name: string;\n        kind: 'interface';\n        children: TypeSystem.Type[];\n        comment?: Comment;\n        extends: string[];\n    };\n\n    export type Parameter = {\n        name: string;\n        kind: 'parameter';\n        type: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type Constructor = {\n        kind: 'constructor';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type ConstructorSignature = {\n        kind: 'constructorSignature';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type TypeLiteral = {\n        kind: 'typeLiteral';\n        name: string;\n        signatures?: (ConstructorSignature | TypeSystem.CallSignature)[];\n        properties?: TypeSystem.Property[];\n        comment?: Comment;\n    };\n\n    export type Type =\n        | TypeSystem.Accessor\n        | TypeSystem.GetSignature\n        | TypeSystem.CallSignature\n        | TypeSystem.Method\n        | TypeSystem.Property\n        | TypeSystem.TypeAlias\n        | TypeSystem.Enum\n        | TypeSystem.EnumMember\n        | TypeSystem.Class\n        | TypeSystem.Constructor\n        | TypeSystem.ConstructorSignature\n        | TypeSystem.TypeLiteral\n        | TypeSystem.Parameter\n        | TypeSystem.Interface\n        | TypeSystem.Function;\n}\n\nexport namespace TypeDescriptor {\n    export interface Union {\n        type: 'or';\n        values: TypeDescriptor.Type[];\n    }\n\n    export interface Intrinsic {\n        type: 'intrinsic';\n        value: string;\n    }\n\n    export interface Literal {\n        type: 'literal';\n        value: string;\n    }\n\n    export type Reflection = { type: 'reflection'; value: TypeSystem.Type };\n\n    export interface Reference {\n        type: 'reference';\n        value: string;\n        source: string;\n        typeArguments?: TypeDescriptor.Type[];\n        refersToTypeParameter?: boolean;\n    }\n\n    export interface Array {\n        type: 'array';\n        value: TypeDescriptor.Type;\n    }\n\n    export interface Intersection {\n        type: 'intersection';\n        values: TypeDescriptor.Type[];\n    }\n\n    export interface Predicate {\n        type: 'predicate';\n        lhs: string;\n        rhs: TypeDescriptor.Type;\n    }\n\n    export interface Tuple {\n        type: 'tuple';\n        value: TypeDescriptor.Type[];\n    }\n\n    export type Type =\n        | TypeDescriptor.Union\n        | TypeDescriptor.Intrinsic\n        | TypeDescriptor.Literal\n        | TypeDescriptor.Reflection\n        | TypeDescriptor.Reference\n        | TypeDescriptor.Array\n        | TypeDescriptor.Intersection\n        | TypeDescriptor.Predicate\n        | TypeDescriptor.Tuple;\n\n    export type Flags = {\n        isReadonly?: boolean;\n        isProtected?: boolean;\n        isOptional?: boolean;\n    };\n}\n","import * as React from 'react';\nimport CodeBlock from '@theme/CodeBlock';\nimport './docRef.scss';\n\nexport interface DocRefProps {\n    declaration: string;\n    methods?: string[];\n}\n\nimport docsJson_ from '../../../generated/api.output.json';\nimport { ExportedTypeFile, TypeSystem, codify, firstLevel } from './types';\nconst docsJson = docsJson_ as any as DocsJson;\n\ntype DocsContent = { kind: string; text: string; tag?: string };\ntype DocsTag = { tag: string; content: DocsContent[] };\ntype DocsComment = {\n    summary?: DocsContent[];\n    blockTags?: DocsTag[];\n};\n\ntype Piece = {\n    kind: 'return' | 'paramter' | 'signature' | 'typearg' | 'typearg_default';\n    value: string;\n};\n\ntype Doc = {\n    name: string;\n    code: string;\n    comment?: DocsComment;\n    kind: 'accessor' | 'property' | 'method';\n    pieces: Piece[];\n};\n\ntype DocJson = {\n    kind: string;\n    metadata?: Doc;\n    children: Doc[];\n};\n\ntype DocsJson = {\n    [index: string]: DocJson;\n};\n\nconst newJson = docsJson_ as ExportedTypeFile;\n\nexport const DocumentRef = (props: { value: TypeSystem.Type }) => {\n    const code = React.useMemo(() => {\n        if (!props.value) {\n            return null;\n        }\n\n        switch (props.value.kind) {\n            case 'typeAlias':\n                return codify(props.value);\n            case 'interface':\n                return codify(props.value);\n            case 'class':\n                return codify(props.value);\n            case 'function':\n                return codify(props.value);\n            default:\n                return null;\n        }\n    }, [props.value]);\n\n    if (!code) {\n        return null;\n    }\n\n    return <CodeBlock language=\"tsx\">{code}</CodeBlock>;\n};\n\nexport const Text = (props: { content: DocsContent[] }) => {\n    return (\n        <div className=\"doc-text\">\n            {props.content.map((piece, i) => {\n                switch (piece.kind) {\n                    case 'text': {\n                        return <span key={i}>{piece.text}</span>;\n                    }\n                    case 'code':\n                        return (\n                            <code key={i}>\n                                {piece.text.substring(1, piece.text.length - 1)}\n                            </code>\n                        );\n                    default:\n                        throw new Error(`unhandled piece ${piece.kind}`);\n                }\n            })}\n        </div>\n    );\n};\n\nexport const Tags = (props: { tags: DocsTag[] }) => {\n    return (\n        <div>\n            {props.tags.map((tag, i) => {\n                return (\n                    <div key={i}>\n                        <div>{tag.tag}</div>\n                        <Text content={tag.content} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport const Summary = (props: { summary: DocsComment }) => {\n    return (\n        <div>\n            <Text content={props.summary.summary ?? []} />\n            <Tags tags={props.summary.blockTags ?? []} />\n        </div>\n    );\n};\n\nexport const Markdown = (props: { children: string }) => {\n    return <span>{props.children}</span>;\n};\n\nconst Row = (props: { doc: TypeSystem.Type }) => {\n    const comment =\n        props.doc.kind === 'accessor'\n            ? props.doc.value.comment\n            : props.doc.comment;\n    return (\n        <tr>\n            <th\n                style={{\n                    width: '40%',\n                    display: 'flex',\n                }}\n            >\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'start',\n                    }}\n                >\n                    <h6\n                        style={{\n                            fontFamily: 'monospace',\n                            fontSize: '1.2em',\n                        }}\n                    >\n                        {props.doc.name}\n                    </h6>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'start',\n                        }}\n                    >\n                        {/* <span\n                            style={{\n                                fontSize: '0.75em',\n                                color: 'var(--ifm-color-content-secondary)',\n                            }}\n                        >\n                            {'Type'}\n                        </span>\n                        <span\n                            style={{\n                                color: 'var(--ifm-color-primary)',\n                            }}\n                        >\n                            {doc.type}\n                        </span> */}\n                    </div>\n                </div>\n            </th>\n            <th style={{ width: '60%' }}>\n                {/* <div>{'-'}</div> */}\n                <div>\n                    <div>{comment && <Summary summary={comment} />}</div>\n                    <CodeBlock language=\"tsx\">{codify(props.doc)}</CodeBlock>\n                </div>\n            </th>\n        </tr>\n    );\n};\n\nfunction filter(docs: TypeSystem.Type, methods: string[]) {\n    if (docs.kind === 'typeAlias') {\n        if (docs.type.type === 'intersection') {\n            return docs.type.values\n                .map((value) => newJson[(value as any).value])\n                .map((v) => filter(v, methods))\n                .flat();\n        }\n    }\n\n    if (docs.kind === 'class' || docs.kind === 'interface') {\n        const extended = docs.extends.flatMap((name) =>\n            filter(newJson[name], methods)\n        );\n\n        return extended.concat(\n            docs.children.filter((child) => {\n                if (methods && !methods.includes(child.name)) {\n                    return false;\n                }\n                return true;\n            })\n        );\n    }\n\n    return [];\n}\n\nexport const DocRef = (props: DocRefProps) => {\n    const docs = React.useMemo(\n        () => newJson[props.declaration],\n        [props.declaration]\n    );\n\n    const filteredDocs = React.useMemo(\n        () => filter(docs, props.methods),\n        [docs]\n    );\n\n    if (!docs) {\n        return <span>{`Failed to find docs for '${props.declaration}'`}</span>;\n    }\n\n    return (\n        <table className=\"doc-ref-table\">\n            <tbody>\n                {filteredDocs.map((doc, i) => {\n                    return (\n                        <>\n                            <Row key={i} doc={doc} />\n                            {/* <th colSpan={2}>\n                                {firstLevel(doc).map((x) => (\n                                    <span style={{ padding: '0px 2px' }}>\n                                        <DocumentRef value={newJson[x]} />\n                                    </span>\n                                ))}\n                            </th> */}\n                            {/* {doc.pieces?.map((piece) => (\n                                <tr>\n                                    <th colSpan={2}>\n                                        <Piece piece={piece} />\n                                    </th>\n                                </tr>\n                            ))} */}\n                        </>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n};\n","import { useState } from 'react';\nimport { Tree } from '@minoru/react-dnd-treeview';\nimport * as React from 'react';\n\nconst SampleData = [\n    {\n        id: 1,\n        parent: 0,\n        droppable: true,\n        text: 'Folder 1',\n    },\n    {\n        id: 2,\n        parent: 1,\n        droppable: false,\n        text: 'File 1-1',\n    },\n    {\n        id: 3,\n        parent: 1,\n        droppable: false,\n        text: 'File 1-2',\n    },\n    {\n        id: 4,\n        parent: 0,\n        droppable: true,\n        text: 'Folder 2',\n    },\n    {\n        id: 5,\n        parent: 4,\n        droppable: true,\n        text: 'Folder 2-1',\n    },\n    {\n        id: 6,\n        parent: 5,\n        droppable: false,\n        text: 'File 2-1-1',\n    },\n    {\n        id: 7,\n        parent: 0,\n        droppable: false,\n        text: 'File 3',\n    },\n];\n\nconst TreeComponent = () => {\n    const [treeData, setTreeData] = useState(SampleData);\n    const handleDrop = (newTreeData: any) => {\n        setTreeData(newTreeData);\n    };\n    return (\n        <Tree\n            tree={treeData}\n            rootId={0}\n            onDrop={handleDrop}\n            onDragEnd={(event) => console.log('onDragEnd', event)}\n            render={(node, { depth, isOpen, onToggle }) => (\n                <div style={{ marginLeft: depth * 10 }}>\n                    {node.droppable && (\n                        <span onClick={onToggle}>{isOpen ? '[-]' : '[+]'}</span>\n                    )}\n                    {node.text}\n                </div>\n            )}\n        />\n    );\n};\n\nexport default TreeComponent;\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\nimport TreeComponent from './treeview';\nimport { getBackendOptions, MultiBackend } from '@minoru/react-dnd-treeview';\nimport { DndProvider } from 'react-dnd';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                {props.params.title}\n            </div>\n        );\n    },\n    treeview: () => {\n        return (\n            <div style={{ color: 'white' }}>\n                <TreeComponent />\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n            params: {\n                title: 'Panel 1',\n            },\n        });\n\n        panel.group.locked = true;\n        panel.group.header.hidden = true;\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            params: {\n                title: 'Panel 2',\n            },\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'treeview',\n        });\n\n        event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            params: {\n                title: 'Panel 4',\n            },\n            position: { referencePanel: 'panel_1', direction: 'right' },\n        });\n\n        const panel5 = event.api.addPanel({\n            id: 'panel_5',\n            component: 'default',\n            params: {\n                title: 'Panel 5',\n            },\n            position: { referencePanel: 'panel_3', direction: 'right' },\n        });\n\n        // panel5.group!.model.header.hidden = true;\n        // panel5.group!.model.locked = true;\n\n        event.api.addPanel({\n            id: 'panel_6',\n            component: 'default',\n            params: {\n                title: 'Panel 6',\n            },\n            position: { referencePanel: 'panel_5', direction: 'below' },\n        });\n\n        event.api.addPanel({\n            id: 'panel_7',\n            component: 'default',\n            params: {\n                title: 'Panel 7',\n            },\n            position: { referencePanel: 'panel_6', direction: 'right' },\n        });\n    };\n\n    return (\n        <DndProvider backend={MultiBackend} options={getBackendOptions()}>\n            <DockviewReact\n                components={components}\n                onReady={onReady}\n                className={`${props.theme || 'dockview-theme-abyss'}`}\n            />\n        </DndProvider>\n    );\n};\n\nexport default App;\n","\n\nexport const frontMatter = {\n\ttitle: 'Dnd',\n\tsidebar_position: 1\n};\nexport const contentTitle = 'Drag And Drop';\nexport const metadata = {\n  \"id\": \"core/dnd/dragAndDrop\",\n  \"title\": \"Dnd\",\n  \"description\": \"The dock makes heavy use of drag and drop functionalities.\",\n  \"source\": \"@site/docs/core/dnd/dragAndDrop.mdx\",\n  \"sourceDirName\": \"core/dnd\",\n  \"slug\": \"/core/dnd/dragAndDrop\",\n  \"permalink\": \"/docs/core/dnd/dragAndDrop\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/core/dnd/dragAndDrop.mdx\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 1,\n  \"frontMatter\": {\n    \"title\": \"Dnd\",\n    \"sidebar_position\": 1\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Overview\",\n    \"permalink\": \"/docs/core/dnd/overview\"\n  },\n  \"next\": {\n    \"title\": \"Third Party Libraries\",\n    \"permalink\": \"/docs/core/dnd/thirdParty\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewExternalDnd from '@site/sandboxes/externaldnd-dockview/src/app';\nimport LiveExample from '@site/src/components/ui/exampleFrame';\nimport {DocRef} from '@site/src/components/ui/reference/docRef';\nexport const toc = [{\n  \"value\": \"Extended behaviours\",\n  \"id\": \"extended-behaviours\",\n  \"level\": 2\n}, {\n  \"value\": \"Third Party Dnd Libraries\",\n  \"id\": \"third-party-dnd-libraries\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"The dock makes heavy use of drag and drop functionalities.\"\n    }), \"\\n\", _jsx(DocRef, {\n      declaration: \"DockviewApi\",\n      methods: ['onWillDragPanel', 'onWillDragGroup', 'onWillDrop', 'onWillShowOverlay']\n    }), \"\\n\", _jsx(LiveExample, {\n      framework: \"react\",\n      id: \"dockview/dnd-events\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"drag-and-drop\",\n      children: \"Drag And Drop\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can override the conditions of the far edge overlays through the \", _jsx(_components.code, {\n        children: \"rootOverlayModel\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<DockviewReact\\n  {...props}\\n   rootOverlayModel={{\\n    size: { value: 100, type: 'pixels' },\\n    activationSize: { value: 5, type: 'percentage' },\\n  }}\\n  />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"extended-behaviours\",\n      children: \"Extended behaviours\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For interaction with the Drag events directly the component exposes some method to help determine whether external drag events should be interacted with or not.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"/**\\n * called when an ondrop event which does not originate from the dockview libray and\\n * passes the showDndOverlay condition occurs\\n **/\\nconst onDidDrop = (event: DockviewDropEvent) => {\\n    const { group } = event;\\n\\n    event.api.addPanel({\\n        id: 'test',\\n        component: 'default',\\n        position: {\\n            referencePanel: group.activePanel.id,\\n            direction: 'within',\\n        },\\n    });\\n};\\n\\n/**\\n * called for drag over events which do not originate from the dockview library\\n * allowing the developer to decide where the overlay should be shown for a\\n * particular drag event\\n **/\\nconst showDndOverlay = (event: DockviewDndOverlayEvent) => {\\n    return true;\\n};\\n\\nreturn (\\n    <DockviewReact\\n        components={components}\\n        onReady={onReady}\\n        className=\\\"dockview-theme-abyss\\\"\\n        onDidDrop={onDidDrop}\\n        showDndOverlay={showDndOverlay}\\n    />\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"third-party-dnd-libraries\",\n      children: \"Third Party Dnd Libraries\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This shows a simple example of a third-party library used inside a panel that relies on drag\\nand drop functionalities. This examples serves to show that \", _jsx(_components.code, {\n        children: \"dockview\"\n      }), \" doesn't interfer with\\nany drag and drop logic for other controls.\"]\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      sandboxId: \"externaldnd-dockview\",\n      react: DockviewExternalDnd\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","var map = {\n\t\"./javascript/fullwidthtab-dockview/src/app\": [\n\t\t1800,\n\t\t532,\n\t\t1800\n\t],\n\t\"./javascript/simple-dockview/src/app\": [\n\t\t6807,\n\t\t6807\n\t],\n\t\"./javascript/tabheight-dockview/src/app\": [\n\t\t1977,\n\t\t532,\n\t\t1977\n\t],\n\t\"./javascript/vanilla-dockview/src/app\": [\n\t\t9094,\n\t\t9094\n\t],\n\t\"./react/dockview/constraints/src/app\": [\n\t\t9920,\n\t\t9920\n\t],\n\t\"./react/dockview/demo-dockview/src/app\": [\n\t\t3158,\n\t\t532,\n\t\t3158\n\t],\n\t\"./react/dockview/dnd-events/src/app\": [\n\t\t9944,\n\t\t9944\n\t],\n\t\"./react/dockview/dnd-external/src/app\": [\n\t\t8888,\n\t\t8888\n\t],\n\t\"./react/dockview/floating-groups/src/app\": [\n\t\t9518,\n\t\t9582\n\t],\n\t\"./react/dockview/group-actions/src/app\": [\n\t\t9980,\n\t\t532,\n\t\t9980\n\t],\n\t\"./react/dockview/layout/src/app\": [\n\t\t601,\n\t\t8787\n\t],\n\t\"./react/dockview/locked/src/app\": [\n\t\t4156,\n\t\t4156\n\t],\n\t\"./react/dockview/maximize-group/src/app\": [\n\t\t7729,\n\t\t7729\n\t],\n\t\"./react/dockview/popout-group/src/app\": [\n\t\t9502,\n\t\t8678,\n\t\t6835,\n\t\t9502\n\t],\n\t\"./react/dockview/render-mode/src/app\": [\n\t\t7787,\n\t\t532,\n\t\t7787\n\t],\n\t\"./react/dockview/resize-container/src/app\": [\n\t\t5093,\n\t\t5093\n\t],\n\t\"./react/dockview/resize/src/app\": [\n\t\t6149,\n\t\t532,\n\t\t6149\n\t],\n\t\"./react/dockview/scrollbars/src/app\": [\n\t\t8029,\n\t\t532,\n\t\t8029\n\t],\n\t\"./react/dockview/tabview/src/app\": [\n\t\t8774,\n\t\t8774\n\t],\n\t\"./react/dockview/update-parameters/src/app\": [\n\t\t3215,\n\t\t3215\n\t],\n\t\"./react/dockview/update-title/src/app\": [\n\t\t9070,\n\t\t9070\n\t],\n\t\"./react/dockview/watermark/src/app\": [\n\t\t4074,\n\t\t4074\n\t],\n\t\"./react/gridview/simple/src/app\": [\n\t\t3075,\n\t\t3075\n\t],\n\t\"./react/paneview/simple/src/app\": [\n\t\t9887,\n\t\t9887\n\t],\n\t\"./react/splitview/simple/src/app\": [\n\t\t505,\n\t\t505\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3086;\nmodule.exports = webpackAsyncContext;"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","filter","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","VERTICAL","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","showViewsInReverseOrder","includes","serialize","getView","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_b","disableAutoResizing","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","classNames","split","panel","isVisible","updateOptions","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","onDidMaximizedGroupChange","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","emitter","Object","assign","api","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onUnhandledDragOverEvent","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","tabIndex","outline","overflow","focusTracker","part","init","getComponent","key","keys","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","disableDnd","_onDidDrop","initDragFeatures","accessorId","draggable","handler","showDndOverlay","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","addTab","tabToRemove","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","DockviewUnhandledDragOverEvent","isAccepted","_isAccepted","accept","PROPERTY_KEYS","properties","hideBorders","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_onUnhandledDragOverEvent","_overwriteRenderContainer","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","firedEvent","willDropEvent","getKind","itemId","_c","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","_maximumWidth","_evaluatedMaximumWidth","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","_mutableDisposable","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","isMaximized","exitMaximized","DockviewGroupPanel","_model","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createCloseButton","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","_d","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","emptySpace","flexGrow","actionsContainer","closeAnchor","isOneGroup","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","popoutGroup","skipPopoutAssociated","removedGroup","catch","error","_e","removeEmptyGroup","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","skipPopoutReturn","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","changed_floatingGroupBounds","changed_rootOverlayOptions","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","components","frameworkComponents","createFrameworkComponent","fallback","Component","FrameworkComponent","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","frameworkComponentFactory","registerPanel","f","reference","_f","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","v","frameworkWrapper","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","headerComponents","headerframeworkComponents","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onMouseDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","componentId","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","_componentId","_jsx","CodeSandboxButton","_jsxs","_Fragment","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","justifyContent","react","cursor","border","MultiFrameworkContainer","BrowserOnly","flexDirection","codifyType","isComparator","code","lhs","rhs","typeArguments","codify","signature","repeat","returnType","flags","isProtected","isReadonly","isOptional","typeParameters","typeParameter","typeCode","extends","default","parameter","signatures","log","newJson","docsJson_","Text","piece","text","substring","Tags","tags","Summary","summary","blockTags","Row","comment","doc","fontFamily","CodeBlock","language","docs","methods","flat","concat","DocRef","declaration","filteredDocs","SampleData","droppable","TreeComponent","treeData","setTreeData","useState","Tree","tree","rootId","newTreeData","depth","isOpen","onToggle","marginLeft","treeview","DndProvider","backend","MultiBackend","getBackendOptions","frontMatter","sidebar_position","contentTitle","metadata","assets","toc","_createMdxContent","_components","h1","h2","pre","MDXContent","wrapper","MDXLayout","webpackAsyncContext","req","__webpack_require__","o","ids","all","module","exports"],"sourceRoot":""}